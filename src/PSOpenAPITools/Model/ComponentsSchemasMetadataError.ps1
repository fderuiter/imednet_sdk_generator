#
# Mednet EDC API
# The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
# Version: 1.3.6
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Error details if an error occurred

.PARAMETER Message
Error message describing the issue
.OUTPUTS

ComponentsSchemasMetadataError<PSCustomObject>
#>

function Initialize-ComponentsSchemasMetadataError {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ComponentsSchemasMetadataError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "message" = ${Message}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ComponentsSchemasMetadataError<PSCustomObject>

.DESCRIPTION

Convert from JSON to ComponentsSchemasMetadataError<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ComponentsSchemasMetadataError<PSCustomObject>
#>
function ConvertFrom-JsonToComponentsSchemasMetadataError {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ComponentsSchemasMetadataError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $ComponentsSchemasMetadataErrorAdditionalProperties = @{}

        # check if Json contains properties not defined in ComponentsSchemasMetadataError
        $AllProperties = ("message")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $ComponentsSchemasMetadataErrorAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        $PSO = [PSCustomObject]@{
            "message" = ${Message}
            "AdditionalProperties" = $ComponentsSchemasMetadataErrorAdditionalProperties
        }

        return $PSO
    }

}

