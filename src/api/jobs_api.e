note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"

class
	JOBS_API

inherit

    API_I


feature -- API Access


	job_status (study_key: STRING_32; batch_id: STRING_32): detachable JOB
			-- Retrieve job status by batch ID
			-- 
			-- 
			-- argument: study_key Study key identifying the study context for the request (required)
			-- 
			-- argument: batch_id Batch ID of the job to retrieve (required)
			-- 
			-- 
			-- Result JOB
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/studies/{studyKey}/jobs/{batchId}"
			l_path.replace_substring_all ("{"+"studyKey"+"}", api_client.url_encode (study_key.out))
			l_path.replace_substring_all ("{"+"batchId"+"}", api_client.url_encode (batch_id.out))


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"apiKeyAuth", "securityKeyAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { JOB } l_response.data ({ JOB }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end


end
