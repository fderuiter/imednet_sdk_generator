note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SUBJECT




feature --Access

    study_key: detachable STRING_32
      -- Unique study key
    subject_id: INTEGER_32
      -- Mednet subject ID (internal numeric ID)
    subject_oid: detachable STRING_32
      -- Client-assigned subject object identifier (OID)
    subject_key: detachable STRING_32
      -- Protocol-assigned subject identifier (display ID)
    subject_status: detachable STRING_32
      -- Current status of the subject (e.g., Enrolled)
    site_id: INTEGER_32
      -- Mednet site ID the subject is associated with
    site_name: detachable STRING_32
      -- Name of the site the subject is associated with
    deleted: BOOLEAN
      -- Whether the subject is marked as deleted
    enrollment_start_date: detachable STRING_32
      -- Subjectâ€™s enrollment start date
    date_created: detachable STRING_32
      -- Date when this subject record was created
    date_modified: detachable STRING_32
      -- Date when this subject record was last modified
    keywords: detachable LIST [KEYWORD]
      -- List of keywords associated with the subject

feature -- Change Element

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_subject_id (a_name: like subject_id)
        -- Set 'subject_id' with 'a_name'.
      do
        subject_id := a_name
      ensure
        subject_id_set: subject_id = a_name
      end

    set_subject_oid (a_name: like subject_oid)
        -- Set 'subject_oid' with 'a_name'.
      do
        subject_oid := a_name
      ensure
        subject_oid_set: subject_oid = a_name
      end

    set_subject_key (a_name: like subject_key)
        -- Set 'subject_key' with 'a_name'.
      do
        subject_key := a_name
      ensure
        subject_key_set: subject_key = a_name
      end

    set_subject_status (a_name: like subject_status)
        -- Set 'subject_status' with 'a_name'.
      do
        subject_status := a_name
      ensure
        subject_status_set: subject_status = a_name
      end

    set_site_id (a_name: like site_id)
        -- Set 'site_id' with 'a_name'.
      do
        site_id := a_name
      ensure
        site_id_set: site_id = a_name
      end

    set_site_name (a_name: like site_name)
        -- Set 'site_name' with 'a_name'.
      do
        site_name := a_name
      ensure
        site_name_set: site_name = a_name
      end

    set_deleted (a_name: like deleted)
        -- Set 'deleted' with 'a_name'.
      do
        deleted := a_name
      ensure
        deleted_set: deleted = a_name
      end

    set_enrollment_start_date (a_name: like enrollment_start_date)
        -- Set 'enrollment_start_date' with 'a_name'.
      do
        enrollment_start_date := a_name
      ensure
        enrollment_start_date_set: enrollment_start_date = a_name
      end

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end

    set_keywords (a_name: like keywords)
        -- Set 'keywords' with 'a_name'.
      do
        keywords := a_name
      ensure
        keywords_set: keywords = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SUBJECT%N")
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached subject_id as l_subject_id then
          Result.append ("%Nsubject_id:")
          Result.append (l_subject_id.out)
          Result.append ("%N")
        end
        if attached subject_oid as l_subject_oid then
          Result.append ("%Nsubject_oid:")
          Result.append (l_subject_oid.out)
          Result.append ("%N")
        end
        if attached subject_key as l_subject_key then
          Result.append ("%Nsubject_key:")
          Result.append (l_subject_key.out)
          Result.append ("%N")
        end
        if attached subject_status as l_subject_status then
          Result.append ("%Nsubject_status:")
          Result.append (l_subject_status.out)
          Result.append ("%N")
        end
        if attached site_id as l_site_id then
          Result.append ("%Nsite_id:")
          Result.append (l_site_id.out)
          Result.append ("%N")
        end
        if attached site_name as l_site_name then
          Result.append ("%Nsite_name:")
          Result.append (l_site_name.out)
          Result.append ("%N")
        end
        if attached deleted as l_deleted then
          Result.append ("%Ndeleted:")
          Result.append (l_deleted.out)
          Result.append ("%N")
        end
        if attached enrollment_start_date as l_enrollment_start_date then
          Result.append ("%Nenrollment_start_date:")
          Result.append (l_enrollment_start_date.out)
          Result.append ("%N")
        end
        if attached date_created as l_date_created then
          Result.append ("%Ndate_created:")
          Result.append (l_date_created.out)
          Result.append ("%N")
        end
        if attached date_modified as l_date_modified then
          Result.append ("%Ndate_modified:")
          Result.append (l_date_modified.out)
          Result.append ("%N")
        end
        if attached keywords as l_keywords then
          across l_keywords as ic loop
            Result.append ("%N keywords:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

