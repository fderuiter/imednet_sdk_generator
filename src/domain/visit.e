note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class VISIT




feature --Access

    study_key: detachable STRING_32
      -- Unique study key
    visit_id: INTEGER_32
      -- Unique system identifier for the subject visit instance
    interval_id: INTEGER_32
      -- Unique system identifier of the interval definition for this visit
    interval_name: detachable STRING_32
      -- Name of the interval (visit) for this visit instance
    subject_id: INTEGER_32
      -- Mednet subject ID of the subject
    subject_key: detachable STRING_32
      -- Protocol-assigned subject identifier
    start_date: detachable STRING_32
      -- Start date of the visit window (in YYYY-MM-DD format)
    end_date: detachable STRING_32
      -- End date of the visit window (in YYYY-MM-DD format)
    due_date: detachable STRING_32
      -- Due date of the visit (in YYYY-MM-DD format), if applicable
    visit_date: detachable STRING_32
      -- Actual date the visit took place (in YYYY-MM-DD format)
    visit_date_form: detachable STRING_32
      -- Name of the form used to capture the actual visit date
    visit_date_question: detachable STRING_32
      -- Variable name of the field capturing the actual visit date
    deleted: BOOLEAN
      -- Whether the visit instance is marked as deleted
    date_created: detachable STRING_32
      -- Date when this visit record was created
    date_modified: detachable STRING_32
      -- Date when this visit record was last modified

feature -- Change Element

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_visit_id (a_name: like visit_id)
        -- Set 'visit_id' with 'a_name'.
      do
        visit_id := a_name
      ensure
        visit_id_set: visit_id = a_name
      end

    set_interval_id (a_name: like interval_id)
        -- Set 'interval_id' with 'a_name'.
      do
        interval_id := a_name
      ensure
        interval_id_set: interval_id = a_name
      end

    set_interval_name (a_name: like interval_name)
        -- Set 'interval_name' with 'a_name'.
      do
        interval_name := a_name
      ensure
        interval_name_set: interval_name = a_name
      end

    set_subject_id (a_name: like subject_id)
        -- Set 'subject_id' with 'a_name'.
      do
        subject_id := a_name
      ensure
        subject_id_set: subject_id = a_name
      end

    set_subject_key (a_name: like subject_key)
        -- Set 'subject_key' with 'a_name'.
      do
        subject_key := a_name
      ensure
        subject_key_set: subject_key = a_name
      end

    set_start_date (a_name: like start_date)
        -- Set 'start_date' with 'a_name'.
      do
        start_date := a_name
      ensure
        start_date_set: start_date = a_name
      end

    set_end_date (a_name: like end_date)
        -- Set 'end_date' with 'a_name'.
      do
        end_date := a_name
      ensure
        end_date_set: end_date = a_name
      end

    set_due_date (a_name: like due_date)
        -- Set 'due_date' with 'a_name'.
      do
        due_date := a_name
      ensure
        due_date_set: due_date = a_name
      end

    set_visit_date (a_name: like visit_date)
        -- Set 'visit_date' with 'a_name'.
      do
        visit_date := a_name
      ensure
        visit_date_set: visit_date = a_name
      end

    set_visit_date_form (a_name: like visit_date_form)
        -- Set 'visit_date_form' with 'a_name'.
      do
        visit_date_form := a_name
      ensure
        visit_date_form_set: visit_date_form = a_name
      end

    set_visit_date_question (a_name: like visit_date_question)
        -- Set 'visit_date_question' with 'a_name'.
      do
        visit_date_question := a_name
      ensure
        visit_date_question_set: visit_date_question = a_name
      end

    set_deleted (a_name: like deleted)
        -- Set 'deleted' with 'a_name'.
      do
        deleted := a_name
      ensure
        deleted_set: deleted = a_name
      end

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass VISIT%N")
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached visit_id as l_visit_id then
          Result.append ("%Nvisit_id:")
          Result.append (l_visit_id.out)
          Result.append ("%N")
        end
        if attached interval_id as l_interval_id then
          Result.append ("%Ninterval_id:")
          Result.append (l_interval_id.out)
          Result.append ("%N")
        end
        if attached interval_name as l_interval_name then
          Result.append ("%Ninterval_name:")
          Result.append (l_interval_name.out)
          Result.append ("%N")
        end
        if attached subject_id as l_subject_id then
          Result.append ("%Nsubject_id:")
          Result.append (l_subject_id.out)
          Result.append ("%N")
        end
        if attached subject_key as l_subject_key then
          Result.append ("%Nsubject_key:")
          Result.append (l_subject_key.out)
          Result.append ("%N")
        end
        if attached start_date as l_start_date then
          Result.append ("%Nstart_date:")
          Result.append (l_start_date.out)
          Result.append ("%N")
        end
        if attached end_date as l_end_date then
          Result.append ("%Nend_date:")
          Result.append (l_end_date.out)
          Result.append ("%N")
        end
        if attached due_date as l_due_date then
          Result.append ("%Ndue_date:")
          Result.append (l_due_date.out)
          Result.append ("%N")
        end
        if attached visit_date as l_visit_date then
          Result.append ("%Nvisit_date:")
          Result.append (l_visit_date.out)
          Result.append ("%N")
        end
        if attached visit_date_form as l_visit_date_form then
          Result.append ("%Nvisit_date_form:")
          Result.append (l_visit_date_form.out)
          Result.append ("%N")
        end
        if attached visit_date_question as l_visit_date_question then
          Result.append ("%Nvisit_date_question:")
          Result.append (l_visit_date_question.out)
          Result.append ("%N")
        end
        if attached deleted as l_deleted then
          Result.append ("%Ndeleted:")
          Result.append (l_deleted.out)
          Result.append ("%N")
        end
        if attached date_created as l_date_created then
          Result.append ("%Ndate_created:")
          Result.append (l_date_created.out)
          Result.append ("%N")
        end
        if attached date_modified as l_date_modified then
          Result.append ("%Ndate_modified:")
          Result.append (l_date_modified.out)
          Result.append ("%N")
        end
      end
end

