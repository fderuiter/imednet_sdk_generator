note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FORM




feature --Access

    study_key: detachable STRING_32
      -- Unique study key
    form_id: INTEGER_32
      -- Mednet Form ID
    form_key: detachable STRING_32
      -- User-defined form key
    form_name: detachable STRING_32
      -- Name of the form (eCRF)
    form_type: detachable STRING_32
      -- Type of the form (e.g., Subject or Site)
    revision: INTEGER_32
      -- Number of modifications (revisions) of the form metadata
    embedded_log: BOOLEAN
      -- Whether the form has an embedded log
    enforce_ownership: BOOLEAN
      -- Whether the form enforces record ownership
    user_agreement: BOOLEAN
      -- Whether the form requires a user agreement
    subject_record_report: BOOLEAN
      -- Whether the form is marked as a subject record report
    unscheduled_visit: BOOLEAN
      -- Whether the form is included in unscheduled visits
    other_forms: BOOLEAN
      -- Whether the form is included in Other Forms category
    epro_form: BOOLEAN
      -- Whether the form is an ePRO (electronic patient reported outcome) form
    allow_copy: BOOLEAN
      -- Whether the form allows copying of data
    disabled: BOOLEAN
      -- Whether the form is soft-deleted (disabled)
    date_created: detachable STRING_32
      -- Date when this form was created
    date_modified: detachable STRING_32
      -- Date when this form was last modified

feature -- Change Element

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_form_id (a_name: like form_id)
        -- Set 'form_id' with 'a_name'.
      do
        form_id := a_name
      ensure
        form_id_set: form_id = a_name
      end

    set_form_key (a_name: like form_key)
        -- Set 'form_key' with 'a_name'.
      do
        form_key := a_name
      ensure
        form_key_set: form_key = a_name
      end

    set_form_name (a_name: like form_name)
        -- Set 'form_name' with 'a_name'.
      do
        form_name := a_name
      ensure
        form_name_set: form_name = a_name
      end

    set_form_type (a_name: like form_type)
        -- Set 'form_type' with 'a_name'.
      do
        form_type := a_name
      ensure
        form_type_set: form_type = a_name
      end

    set_revision (a_name: like revision)
        -- Set 'revision' with 'a_name'.
      do
        revision := a_name
      ensure
        revision_set: revision = a_name
      end

    set_embedded_log (a_name: like embedded_log)
        -- Set 'embedded_log' with 'a_name'.
      do
        embedded_log := a_name
      ensure
        embedded_log_set: embedded_log = a_name
      end

    set_enforce_ownership (a_name: like enforce_ownership)
        -- Set 'enforce_ownership' with 'a_name'.
      do
        enforce_ownership := a_name
      ensure
        enforce_ownership_set: enforce_ownership = a_name
      end

    set_user_agreement (a_name: like user_agreement)
        -- Set 'user_agreement' with 'a_name'.
      do
        user_agreement := a_name
      ensure
        user_agreement_set: user_agreement = a_name
      end

    set_subject_record_report (a_name: like subject_record_report)
        -- Set 'subject_record_report' with 'a_name'.
      do
        subject_record_report := a_name
      ensure
        subject_record_report_set: subject_record_report = a_name
      end

    set_unscheduled_visit (a_name: like unscheduled_visit)
        -- Set 'unscheduled_visit' with 'a_name'.
      do
        unscheduled_visit := a_name
      ensure
        unscheduled_visit_set: unscheduled_visit = a_name
      end

    set_other_forms (a_name: like other_forms)
        -- Set 'other_forms' with 'a_name'.
      do
        other_forms := a_name
      ensure
        other_forms_set: other_forms = a_name
      end

    set_epro_form (a_name: like epro_form)
        -- Set 'epro_form' with 'a_name'.
      do
        epro_form := a_name
      ensure
        epro_form_set: epro_form = a_name
      end

    set_allow_copy (a_name: like allow_copy)
        -- Set 'allow_copy' with 'a_name'.
      do
        allow_copy := a_name
      ensure
        allow_copy_set: allow_copy = a_name
      end

    set_disabled (a_name: like disabled)
        -- Set 'disabled' with 'a_name'.
      do
        disabled := a_name
      ensure
        disabled_set: disabled = a_name
      end

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FORM%N")
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached form_id as l_form_id then
          Result.append ("%Nform_id:")
          Result.append (l_form_id.out)
          Result.append ("%N")
        end
        if attached form_key as l_form_key then
          Result.append ("%Nform_key:")
          Result.append (l_form_key.out)
          Result.append ("%N")
        end
        if attached form_name as l_form_name then
          Result.append ("%Nform_name:")
          Result.append (l_form_name.out)
          Result.append ("%N")
        end
        if attached form_type as l_form_type then
          Result.append ("%Nform_type:")
          Result.append (l_form_type.out)
          Result.append ("%N")
        end
        if attached revision as l_revision then
          Result.append ("%Nrevision:")
          Result.append (l_revision.out)
          Result.append ("%N")
        end
        if attached embedded_log as l_embedded_log then
          Result.append ("%Nembedded_log:")
          Result.append (l_embedded_log.out)
          Result.append ("%N")
        end
        if attached enforce_ownership as l_enforce_ownership then
          Result.append ("%Nenforce_ownership:")
          Result.append (l_enforce_ownership.out)
          Result.append ("%N")
        end
        if attached user_agreement as l_user_agreement then
          Result.append ("%Nuser_agreement:")
          Result.append (l_user_agreement.out)
          Result.append ("%N")
        end
        if attached subject_record_report as l_subject_record_report then
          Result.append ("%Nsubject_record_report:")
          Result.append (l_subject_record_report.out)
          Result.append ("%N")
        end
        if attached unscheduled_visit as l_unscheduled_visit then
          Result.append ("%Nunscheduled_visit:")
          Result.append (l_unscheduled_visit.out)
          Result.append ("%N")
        end
        if attached other_forms as l_other_forms then
          Result.append ("%Nother_forms:")
          Result.append (l_other_forms.out)
          Result.append ("%N")
        end
        if attached epro_form as l_epro_form then
          Result.append ("%Nepro_form:")
          Result.append (l_epro_form.out)
          Result.append ("%N")
        end
        if attached allow_copy as l_allow_copy then
          Result.append ("%Nallow_copy:")
          Result.append (l_allow_copy.out)
          Result.append ("%N")
        end
        if attached disabled as l_disabled then
          Result.append ("%Ndisabled:")
          Result.append (l_disabled.out)
          Result.append ("%N")
        end
        if attached date_created as l_date_created then
          Result.append ("%Ndate_created:")
          Result.append (l_date_created.out)
          Result.append ("%N")
        end
        if attached date_modified as l_date_modified then
          Result.append ("%Ndate_modified:")
          Result.append (l_date_modified.out)
          Result.append ("%N")
        end
      end
end

