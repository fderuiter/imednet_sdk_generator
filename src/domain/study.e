note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class STUDY




feature --Access

    sponsor_key: detachable STRING_32
      -- Sponsor key that this study belongs to
    study_key: detachable STRING_32
      -- Unique study key
    study_id: INTEGER_32
      -- Mednet study ID (internal numeric identifier)
    study_name: detachable STRING_32
      -- Name of the study
    study_description: detachable STRING_32
      -- Description of the study
    study_type: detachable STRING_32
      -- Type of study (e.g., STUDY)
    date_created: detachable STRING_32
      -- Date when the study record was created
    date_modified: detachable STRING_32
      -- Date when the study record was last modified

feature -- Change Element

    set_sponsor_key (a_name: like sponsor_key)
        -- Set 'sponsor_key' with 'a_name'.
      do
        sponsor_key := a_name
      ensure
        sponsor_key_set: sponsor_key = a_name
      end

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_study_id (a_name: like study_id)
        -- Set 'study_id' with 'a_name'.
      do
        study_id := a_name
      ensure
        study_id_set: study_id = a_name
      end

    set_study_name (a_name: like study_name)
        -- Set 'study_name' with 'a_name'.
      do
        study_name := a_name
      ensure
        study_name_set: study_name = a_name
      end

    set_study_description (a_name: like study_description)
        -- Set 'study_description' with 'a_name'.
      do
        study_description := a_name
      ensure
        study_description_set: study_description = a_name
      end

    set_study_type (a_name: like study_type)
        -- Set 'study_type' with 'a_name'.
      do
        study_type := a_name
      ensure
        study_type_set: study_type = a_name
      end

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass STUDY%N")
        if attached sponsor_key as l_sponsor_key then
          Result.append ("%Nsponsor_key:")
          Result.append (l_sponsor_key.out)
          Result.append ("%N")
        end
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached study_id as l_study_id then
          Result.append ("%Nstudy_id:")
          Result.append (l_study_id.out)
          Result.append ("%N")
        end
        if attached study_name as l_study_name then
          Result.append ("%Nstudy_name:")
          Result.append (l_study_name.out)
          Result.append ("%N")
        end
        if attached study_description as l_study_description then
          Result.append ("%Nstudy_description:")
          Result.append (l_study_description.out)
          Result.append ("%N")
        end
        if attached study_type as l_study_type then
          Result.append ("%Nstudy_type:")
          Result.append (l_study_type.out)
          Result.append ("%N")
        end
        if attached date_created as l_date_created then
          Result.append ("%Ndate_created:")
          Result.append (l_date_created.out)
          Result.append ("%N")
        end
        if attached date_modified as l_date_modified then
          Result.append ("%Ndate_modified:")
          Result.append (l_date_modified.out)
          Result.append ("%N")
        end
      end
end

