note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COMPONENTS_SCHEMAS_RECORD_CREATE_REQUEST_ITEM




feature --Access

    form_key: detachable STRING_32
      -- Form key identifying the eCRF to create or update
    form_id: INTEGER_32
      -- Form ID identifying the eCRF to create or update (alternative to formKey)
    site_name: detachable STRING_32
      -- Name of the site where the record should be created (for new subject registration)
    site_id: INTEGER_32
      -- Site ID for the record (alternative to siteName)
    subject_key: detachable STRING_32
      -- Subject identifier (display ID) for which to create or update the record
    subject_id: INTEGER_32
      -- Subject ID for which to create or update the record (alternative to subjectKey)
    subject_oid: detachable STRING_32
      -- Subject OID for which to create or update the record (alternative to subjectKey)
    interval_name: detachable STRING_32
      -- Name of the interval (visit) for a scheduled record update
    interval_id: INTEGER_32
      -- Interval ID for a scheduled record update (alternative to intervalName)
    record_id: INTEGER_32
      -- Record ID for updating an existing unscheduled record (if applicable)
    record_oid: detachable STRING_32
      -- Record OID for updating an existing unscheduled record (if applicable)
    data: detachable STRING_TABLE [ANY]
      -- Key-value pairs of field names and values for the record data

feature -- Change Element

    set_form_key (a_name: like form_key)
        -- Set 'form_key' with 'a_name'.
      do
        form_key := a_name
      ensure
        form_key_set: form_key = a_name
      end

    set_form_id (a_name: like form_id)
        -- Set 'form_id' with 'a_name'.
      do
        form_id := a_name
      ensure
        form_id_set: form_id = a_name
      end

    set_site_name (a_name: like site_name)
        -- Set 'site_name' with 'a_name'.
      do
        site_name := a_name
      ensure
        site_name_set: site_name = a_name
      end

    set_site_id (a_name: like site_id)
        -- Set 'site_id' with 'a_name'.
      do
        site_id := a_name
      ensure
        site_id_set: site_id = a_name
      end

    set_subject_key (a_name: like subject_key)
        -- Set 'subject_key' with 'a_name'.
      do
        subject_key := a_name
      ensure
        subject_key_set: subject_key = a_name
      end

    set_subject_id (a_name: like subject_id)
        -- Set 'subject_id' with 'a_name'.
      do
        subject_id := a_name
      ensure
        subject_id_set: subject_id = a_name
      end

    set_subject_oid (a_name: like subject_oid)
        -- Set 'subject_oid' with 'a_name'.
      do
        subject_oid := a_name
      ensure
        subject_oid_set: subject_oid = a_name
      end

    set_interval_name (a_name: like interval_name)
        -- Set 'interval_name' with 'a_name'.
      do
        interval_name := a_name
      ensure
        interval_name_set: interval_name = a_name
      end

    set_interval_id (a_name: like interval_id)
        -- Set 'interval_id' with 'a_name'.
      do
        interval_id := a_name
      ensure
        interval_id_set: interval_id = a_name
      end

    set_record_id (a_name: like record_id)
        -- Set 'record_id' with 'a_name'.
      do
        record_id := a_name
      ensure
        record_id_set: record_id = a_name
      end

    set_record_oid (a_name: like record_oid)
        -- Set 'record_oid' with 'a_name'.
      do
        record_oid := a_name
      ensure
        record_oid_set: record_oid = a_name
      end

    set_data (a_name: like data)
        -- Set 'data' with 'a_name'.
      do
        data := a_name
      ensure
        data_set: data = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COMPONENTS_SCHEMAS_RECORD_CREATE_REQUEST_ITEM%N")
        if attached form_key as l_form_key then
          Result.append ("%Nform_key:")
          Result.append (l_form_key.out)
          Result.append ("%N")
        end
        if attached form_id as l_form_id then
          Result.append ("%Nform_id:")
          Result.append (l_form_id.out)
          Result.append ("%N")
        end
        if attached site_name as l_site_name then
          Result.append ("%Nsite_name:")
          Result.append (l_site_name.out)
          Result.append ("%N")
        end
        if attached site_id as l_site_id then
          Result.append ("%Nsite_id:")
          Result.append (l_site_id.out)
          Result.append ("%N")
        end
        if attached subject_key as l_subject_key then
          Result.append ("%Nsubject_key:")
          Result.append (l_subject_key.out)
          Result.append ("%N")
        end
        if attached subject_id as l_subject_id then
          Result.append ("%Nsubject_id:")
          Result.append (l_subject_id.out)
          Result.append ("%N")
        end
        if attached subject_oid as l_subject_oid then
          Result.append ("%Nsubject_oid:")
          Result.append (l_subject_oid.out)
          Result.append ("%N")
        end
        if attached interval_name as l_interval_name then
          Result.append ("%Ninterval_name:")
          Result.append (l_interval_name.out)
          Result.append ("%N")
        end
        if attached interval_id as l_interval_id then
          Result.append ("%Ninterval_id:")
          Result.append (l_interval_id.out)
          Result.append ("%N")
        end
        if attached record_id as l_record_id then
          Result.append ("%Nrecord_id:")
          Result.append (l_record_id.out)
          Result.append ("%N")
        end
        if attached record_oid as l_record_oid then
          Result.append ("%Nrecord_oid:")
          Result.append (l_record_oid.out)
          Result.append ("%N")
        end
        if attached data as l_data then
          Result.append ("%Ndata:")
          across l_data as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

