# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AdministrationApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AdministrationApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AdministrationApi }) = "https://edc.prod.imednetapi.com/api/v1/edc"

const _returntypes_list_users_AdministrationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UserList,
    Regex("^" * replace("400", "x"=>".") * "\$") => InlineObject,
    Regex("^" * replace("401", "x"=>".") * "\$") => InlineObject1,
    Regex("^" * replace("403", "x"=>".") * "\$") => InlineObject2,
    Regex("^" * replace("404", "x"=>".") * "\$") => InlineObject3,
    Regex("^" * replace("500", "x"=>".") * "\$") => InlineObject5,
)

function _oacinternal_list_users(_api::AdministrationApi, study_key::String; page=nothing, size=nothing, sort=nothing, include_inactive=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page", "list_users", :minimum, page, 0, false)

    OpenAPI.validate_param("size", "list_users", :maximum, size, 500, false)
    OpenAPI.validate_param("size", "list_users", :minimum, size, 1, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_users_AdministrationApi, "/studies/{studyKey}/users", ["apiKeyAuth", "securityKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "studyKey", study_key)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page", page; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "size", size; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "includeInactive", include_inactive; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List users and their roles in a study

Params:
- study_key::String (required)
- page::Int64
- size::Int64
- sort::String
- include_inactive::Bool

Return: UserList, OpenAPI.Clients.ApiResponse
"""
function list_users(_api::AdministrationApi, study_key::String; page=nothing, size=nothing, sort=nothing, include_inactive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_users(_api, study_key; page=page, size=size, sort=sort, include_inactive=include_inactive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_users(_api::AdministrationApi, response_stream::Channel, study_key::String; page=nothing, size=nothing, sort=nothing, include_inactive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_users(_api, study_key; page=page, size=size, sort=sort, include_inactive=include_inactive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export list_users
