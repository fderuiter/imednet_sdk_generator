/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.RecordRevision

class RecordRevisionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RecordRevision
        //val modelInstance = RecordRevision()

        // to test the property `studyKey` - Unique study key
        should("test studyKey") {
            // uncomment below to test the property
            //modelInstance.studyKey shouldBe ("TODO")
        }

        // to test the property `recordRevisionId` - Unique system identifier for the record revision
        should("test recordRevisionId") {
            // uncomment below to test the property
            //modelInstance.recordRevisionId shouldBe ("TODO")
        }

        // to test the property `recordId` - Unique system identifier of the related record
        should("test recordId") {
            // uncomment below to test the property
            //modelInstance.recordId shouldBe ("TODO")
        }

        // to test the property `recordOid` - Client-assigned record OID (if any)
        should("test recordOid") {
            // uncomment below to test the property
            //modelInstance.recordOid shouldBe ("TODO")
        }

        // to test the property `recordRevision` - Revision number of the record (version of the record status)
        should("test recordRevision") {
            // uncomment below to test the property
            //modelInstance.recordRevision shouldBe ("TODO")
        }

        // to test the property `dataRevision` - Revision number of the data within the record
        should("test dataRevision") {
            // uncomment below to test the property
            //modelInstance.dataRevision shouldBe ("TODO")
        }

        // to test the property `recordStatus` - Status of the record at this revision (user-defined status label)
        should("test recordStatus") {
            // uncomment below to test the property
            //modelInstance.recordStatus shouldBe ("TODO")
        }

        // to test the property `subjectId` - Mednet subject ID related to the record
        should("test subjectId") {
            // uncomment below to test the property
            //modelInstance.subjectId shouldBe ("TODO")
        }

        // to test the property `subjectOid` - Client-assigned subject OID related to the record
        should("test subjectOid") {
            // uncomment below to test the property
            //modelInstance.subjectOid shouldBe ("TODO")
        }

        // to test the property `subjectKey` - Subject display ID related to the record
        should("test subjectKey") {
            // uncomment below to test the property
            //modelInstance.subjectKey shouldBe ("TODO")
        }

        // to test the property `siteId` - Site ID related to the record
        should("test siteId") {
            // uncomment below to test the property
            //modelInstance.siteId shouldBe ("TODO")
        }

        // to test the property `formKey` - Form key of the form that the record belongs to
        should("test formKey") {
            // uncomment below to test the property
            //modelInstance.formKey shouldBe ("TODO")
        }

        // to test the property `intervalId` - Interval ID (visit definition) related to the record
        should("test intervalId") {
            // uncomment below to test the property
            //modelInstance.intervalId shouldBe ("TODO")
        }

        // to test the property `role` - Role name of the user who saved the record revision
        should("test role") {
            // uncomment below to test the property
            //modelInstance.role shouldBe ("TODO")
        }

        // to test the property `user` - Username of the user who saved the record revision
        should("test user") {
            // uncomment below to test the property
            //modelInstance.user shouldBe ("TODO")
        }

        // to test the property `reasonForChange` - Reason for change, if provided (for audit trail)
        should("test reasonForChange") {
            // uncomment below to test the property
            //modelInstance.reasonForChange shouldBe ("TODO")
        }

        // to test the property `deleted` - Whether the record was deleted in this revision
        should("test deleted") {
            // uncomment below to test the property
            //modelInstance.deleted shouldBe ("TODO")
        }

        // to test the property `dateCreated` - Date when this record revision was created
        should("test dateCreated") {
            // uncomment below to test the property
            //modelInstance.dateCreated shouldBe ("TODO")
        }

    }
}
