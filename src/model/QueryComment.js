/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryComment model module.
 * @module model/QueryComment
 * @version 1.3.6
 */
class QueryComment {
    /**
     * @member {Number} sequence
     * @type {Number}
     */
    sequence;
    /**
     * @member {String} annotationStatus
     * @type {String}
     */
    annotationStatus;
    /**
     * @member {String} user
     * @type {String}
     */
    user;
    /**
     * @member {String} comment
     * @type {String}
     */
    comment;
    /**
     * @member {Boolean} closed
     * @type {Boolean}
     */
    closed;
    /**
     * @member {String} date
     * @type {String}
     */
    date;

    

    /**
     * Constructs a new <code>QueryComment</code>.
     * @alias module:model/QueryComment
     */
    constructor() { 
        
        QueryComment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryComment} obj Optional instance to populate.
     * @return {module:model/QueryComment} The populated <code>QueryComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryComment();

            if (data.hasOwnProperty('sequence')) {
                obj['sequence'] = ApiClient.convertToType(data['sequence'], 'Number');
            }
            if (data.hasOwnProperty('annotationStatus')) {
                obj['annotationStatus'] = ApiClient.convertToType(data['annotationStatus'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('closed')) {
                obj['closed'] = ApiClient.convertToType(data['closed'], 'Boolean');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
        }
        return obj;
    }
}



export default QueryComment;

