/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Keyword from './Keyword';

/**
 * The Subject model module.
 * @module model/Subject
 * @version 1.3.6
 */
class Subject {
    /**
     * @member {String} studyKey
     * @type {String}
     */
    studyKey;
    /**
     * @member {Number} subjectId
     * @type {Number}
     */
    subjectId;
    /**
     * @member {String} subjectOid
     * @type {String}
     */
    subjectOid;
    /**
     * @member {String} subjectKey
     * @type {String}
     */
    subjectKey;
    /**
     * @member {String} subjectStatus
     * @type {String}
     */
    subjectStatus;
    /**
     * @member {Number} siteId
     * @type {Number}
     */
    siteId;
    /**
     * @member {String} siteName
     * @type {String}
     */
    siteName;
    /**
     * @member {Boolean} deleted
     * @type {Boolean}
     */
    deleted;
    /**
     * @member {String} enrollmentStartDate
     * @type {String}
     */
    enrollmentStartDate;
    /**
     * @member {String} dateCreated
     * @type {String}
     */
    dateCreated;
    /**
     * @member {String} dateModified
     * @type {String}
     */
    dateModified;
    /**
     * @member {Array.<module:model/Keyword>} keywords
     * @type {Array.<module:model/Keyword>}
     */
    keywords;

    

    /**
     * Constructs a new <code>Subject</code>.
     * @alias module:model/Subject
     */
    constructor() { 
        
        Subject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Subject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subject} obj Optional instance to populate.
     * @return {module:model/Subject} The populated <code>Subject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subject();

            if (data.hasOwnProperty('studyKey')) {
                obj['studyKey'] = ApiClient.convertToType(data['studyKey'], 'String');
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'Number');
            }
            if (data.hasOwnProperty('subjectOid')) {
                obj['subjectOid'] = ApiClient.convertToType(data['subjectOid'], 'String');
            }
            if (data.hasOwnProperty('subjectKey')) {
                obj['subjectKey'] = ApiClient.convertToType(data['subjectKey'], 'String');
            }
            if (data.hasOwnProperty('subjectStatus')) {
                obj['subjectStatus'] = ApiClient.convertToType(data['subjectStatus'], 'String');
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'Number');
            }
            if (data.hasOwnProperty('siteName')) {
                obj['siteName'] = ApiClient.convertToType(data['siteName'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('enrollmentStartDate')) {
                obj['enrollmentStartDate'] = ApiClient.convertToType(data['enrollmentStartDate'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'String');
            }
            if (data.hasOwnProperty('dateModified')) {
                obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'String');
            }
            if (data.hasOwnProperty('keywords')) {
                obj['keywords'] = ApiClient.convertToType(data['keywords'], [Keyword]);
            }
        }
        return obj;
    }
}



export default Subject;

