/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Variable
 */
@JsonPropertyOrder({
  Variable.JSON_PROPERTY_STUDY_KEY,
  Variable.JSON_PROPERTY_VARIABLE_ID,
  Variable.JSON_PROPERTY_VARIABLE_TYPE,
  Variable.JSON_PROPERTY_VARIABLE_NAME,
  Variable.JSON_PROPERTY_SEQUENCE,
  Variable.JSON_PROPERTY_REVISION,
  Variable.JSON_PROPERTY_DISABLED,
  Variable.JSON_PROPERTY_DATE_CREATED,
  Variable.JSON_PROPERTY_DATE_MODIFIED,
  Variable.JSON_PROPERTY_FORM_ID,
  Variable.JSON_PROPERTY_VARIABLE_OID,
  Variable.JSON_PROPERTY_DELETED,
  Variable.JSON_PROPERTY_FORM_KEY,
  Variable.JSON_PROPERTY_FORM_NAME,
  Variable.JSON_PROPERTY_LABEL,
  Variable.JSON_PROPERTY_BLINDED
})
@JsonTypeName("Variable")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Variable {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_VARIABLE_ID = "variableId";
    private Integer variableId;

    /**
     * Type of the variable (field type), e.g., RADIO, TEXT, etc.
     */
    public enum VariableTypeEnum {
        TEXT("TEXT"),
        TEXTAREA("TEXTAREA"),
        RADIO("RADIO"),
        CHECKBOX("CHECKBOX"),
        DROPDOWN("DROPDOWN"),
        DATE("DATE"),
        NUMBER("NUMBER");

        private String value;

        VariableTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static VariableTypeEnum fromValue(String value) {
            for (VariableTypeEnum b : VariableTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_VARIABLE_TYPE = "variableType";
    private VariableTypeEnum variableType;

    public static final String JSON_PROPERTY_VARIABLE_NAME = "variableName";
    private String variableName;

    public static final String JSON_PROPERTY_SEQUENCE = "sequence";
    private Integer sequence;

    public static final String JSON_PROPERTY_REVISION = "revision";
    private Integer revision;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    private Boolean disabled;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_VARIABLE_OID = "variableOid";
    private String variableOid;

    public static final String JSON_PROPERTY_DELETED = "deleted";
    private Boolean deleted;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_FORM_NAME = "formName";
    private String formName;

    public static final String JSON_PROPERTY_LABEL = "label";
    private String label;

    public static final String JSON_PROPERTY_BLINDED = "blinded";
    private Boolean blinded;

    public Variable() {
    }

    public Variable studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Variable variableId(Integer variableId) {
        this.variableId = variableId;
        return this;
    }

    /**
     * Mednet variable ID
     * @return variableId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getVariableId() {
        return variableId;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariableId(Integer variableId) {
        this.variableId = variableId;
    }

    public Variable variableType(VariableTypeEnum variableType) {
        this.variableType = variableType;
        return this;
    }

    /**
     * Type of the variable (field type), e.g., RADIO, TEXT, etc.
     * @return variableType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public VariableTypeEnum getVariableType() {
        return variableType;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariableType(VariableTypeEnum variableType) {
        this.variableType = variableType;
    }

    public Variable variableName(String variableName) {
        this.variableName = variableName;
        return this;
    }

    /**
     * Name of the variable (question text or label)
     * @return variableName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVariableName() {
        return variableName;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariableName(String variableName) {
        this.variableName = variableName;
    }

    public Variable sequence(Integer sequence) {
        this.sequence = sequence;
        return this;
    }

    /**
     * Sequence of the variable on the form
     * @return sequence
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSequence() {
        return sequence;
    }

    @JsonProperty(JSON_PROPERTY_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSequence(Integer sequence) {
        this.sequence = sequence;
    }

    public Variable revision(Integer revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Number of modifications of the variable (via form metadata revisions)
     * @return revision
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRevision() {
        return revision;
    }

    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRevision(Integer revision) {
        this.revision = revision;
    }

    public Variable disabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Whether the variable is marked as disabled (deleted)
     * @return disabled
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    public Variable dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this variable was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Variable dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when this variable was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    public Variable formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * ID of the form that this variable belongs to
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public Variable variableOid(String variableOid) {
        this.variableOid = variableOid;
        return this;
    }

    /**
     * Client-assigned variable OID
     * @return variableOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVariableOid() {
        return variableOid;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariableOid(String variableOid) {
        this.variableOid = variableOid;
    }

    public Variable deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Whether the variable is marked as deleted
     * @return deleted
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeleted() {
        return deleted;
    }

    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public Variable formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key of the form that this variable belongs to
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public Variable formName(String formName) {
        this.formName = formName;
        return this;
    }

    /**
     * Name of the form that this variable belongs to
     * @return formName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormName() {
        return formName;
    }

    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormName(String formName) {
        this.formName = formName;
    }

    public Variable label(String label) {
        this.label = label;
        return this;
    }

    /**
     * User-defined identifier (field name) for the variable
     * @return label
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLabel() {
        return label;
    }

    @JsonProperty(JSON_PROPERTY_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLabel(String label) {
        this.label = label;
    }

    public Variable blinded(Boolean blinded) {
        this.blinded = blinded;
        return this;
    }

    /**
     * Whether the variable is flagged as blinded (hidden in certain contexts)
     * @return blinded
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BLINDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getBlinded() {
        return blinded;
    }

    @JsonProperty(JSON_PROPERTY_BLINDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBlinded(Boolean blinded) {
        this.blinded = blinded;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Variable variable = (Variable) o;
        return Objects.equals(this.studyKey, variable.studyKey) &&
            Objects.equals(this.variableId, variable.variableId) &&
            Objects.equals(this.variableType, variable.variableType) &&
            Objects.equals(this.variableName, variable.variableName) &&
            Objects.equals(this.sequence, variable.sequence) &&
            Objects.equals(this.revision, variable.revision) &&
            Objects.equals(this.disabled, variable.disabled) &&
            Objects.equals(this.dateCreated, variable.dateCreated) &&
            Objects.equals(this.dateModified, variable.dateModified) &&
            Objects.equals(this.formId, variable.formId) &&
            Objects.equals(this.variableOid, variable.variableOid) &&
            Objects.equals(this.deleted, variable.deleted) &&
            Objects.equals(this.formKey, variable.formKey) &&
            Objects.equals(this.formName, variable.formName) &&
            Objects.equals(this.label, variable.label) &&
            Objects.equals(this.blinded, variable.blinded);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, variableId, variableType, variableName, sequence, revision, disabled, dateCreated, dateModified, formId, variableOid, deleted, formKey, formName, label, blinded);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Variable {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    variableId: ").append(toIndentedString(variableId)).append("\n");
        sb.append("    variableType: ").append(toIndentedString(variableType)).append("\n");
        sb.append("    variableName: ").append(toIndentedString(variableName)).append("\n");
        sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
        sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    variableOid: ").append(toIndentedString(variableOid)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
        sb.append("    label: ").append(toIndentedString(label)).append("\n");
        sb.append("    blinded: ").append(toIndentedString(blinded)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

