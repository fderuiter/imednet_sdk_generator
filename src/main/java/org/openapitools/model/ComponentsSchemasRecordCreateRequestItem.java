/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * ComponentsSchemasRecordCreateRequestItem
 */
@JsonPropertyOrder({
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_FORM_KEY,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_FORM_ID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_SITE_NAME,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_SITE_ID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_SUBJECT_KEY,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_SUBJECT_ID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_SUBJECT_OID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_INTERVAL_NAME,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_INTERVAL_ID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_RECORD_ID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_RECORD_OID,
  ComponentsSchemasRecordCreateRequestItem.JSON_PROPERTY_DATA
})
@JsonTypeName("components_schemas_RecordCreateRequest_item")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class ComponentsSchemasRecordCreateRequestItem {
    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_SITE_NAME = "siteName";
    private String siteName;

    public static final String JSON_PROPERTY_SITE_ID = "siteId";
    private Integer siteId;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_OID = "subjectOid";
    private String subjectOid;

    public static final String JSON_PROPERTY_INTERVAL_NAME = "intervalName";
    private String intervalName;

    public static final String JSON_PROPERTY_INTERVAL_ID = "intervalId";
    private Integer intervalId;

    public static final String JSON_PROPERTY_RECORD_ID = "recordId";
    private Integer recordId;

    public static final String JSON_PROPERTY_RECORD_OID = "recordOid";
    private String recordOid;

    public static final String JSON_PROPERTY_DATA = "data";
    private Map<String, Object> data = new HashMap<>();

    public ComponentsSchemasRecordCreateRequestItem(String formKey, Map<String, Object> data) {
        this.formKey = formKey;
        this.data = data;
    }

    public ComponentsSchemasRecordCreateRequestItem formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key identifying the eCRF to create or update
     * @return formKey
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public ComponentsSchemasRecordCreateRequestItem formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * Form ID identifying the eCRF to create or update (alternative to formKey)
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public ComponentsSchemasRecordCreateRequestItem siteName(String siteName) {
        this.siteName = siteName;
        return this;
    }

    /**
     * Name of the site where the record should be created (for new subject registration)
     * @return siteName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSiteName() {
        return siteName;
    }

    @JsonProperty(JSON_PROPERTY_SITE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteName(String siteName) {
        this.siteName = siteName;
    }

    public ComponentsSchemasRecordCreateRequestItem siteId(Integer siteId) {
        this.siteId = siteId;
        return this;
    }

    /**
     * Site ID for the record (alternative to siteName)
     * @return siteId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSiteId() {
        return siteId;
    }

    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteId(Integer siteId) {
        this.siteId = siteId;
    }

    public ComponentsSchemasRecordCreateRequestItem subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Subject identifier (display ID) for which to create or update the record
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public ComponentsSchemasRecordCreateRequestItem subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Subject ID for which to create or update the record (alternative to subjectKey)
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public ComponentsSchemasRecordCreateRequestItem subjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
        return this;
    }

    /**
     * Subject OID for which to create or update the record (alternative to subjectKey)
     * @return subjectOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectOid() {
        return subjectOid;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
    }

    public ComponentsSchemasRecordCreateRequestItem intervalName(String intervalName) {
        this.intervalName = intervalName;
        return this;
    }

    /**
     * Name of the interval (visit) for a scheduled record update
     * @return intervalName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIntervalName() {
        return intervalName;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalName(String intervalName) {
        this.intervalName = intervalName;
    }

    public ComponentsSchemasRecordCreateRequestItem intervalId(Integer intervalId) {
        this.intervalId = intervalId;
        return this;
    }

    /**
     * Interval ID for a scheduled record update (alternative to intervalName)
     * @return intervalId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalId() {
        return intervalId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalId(Integer intervalId) {
        this.intervalId = intervalId;
    }

    public ComponentsSchemasRecordCreateRequestItem recordId(Integer recordId) {
        this.recordId = recordId;
        return this;
    }

    /**
     * Record ID for updating an existing unscheduled record (if applicable)
     * @return recordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordId() {
        return recordId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    public ComponentsSchemasRecordCreateRequestItem recordOid(String recordOid) {
        this.recordOid = recordOid;
        return this;
    }

    /**
     * Record OID for updating an existing unscheduled record (if applicable)
     * @return recordOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordOid() {
        return recordOid;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordOid(String recordOid) {
        this.recordOid = recordOid;
    }

    public ComponentsSchemasRecordCreateRequestItem data(Map<String, Object> data) {
        this.data = data;
        return this;
    }

    public ComponentsSchemasRecordCreateRequestItem putDataItem(String key, Object dataItem) {
        this.data.put(key, dataItem);
        return this;
  }

    /**
     * Key-value pairs of field names and values for the record data
     * @return data
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
    public Map<String, Object> getData() {
        return data;
    }

    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
    public void setData(Map<String, Object> data) {
        this.data = data;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComponentsSchemasRecordCreateRequestItem componentsSchemasRecordCreateRequestItem = (ComponentsSchemasRecordCreateRequestItem) o;
        return Objects.equals(this.formKey, componentsSchemasRecordCreateRequestItem.formKey) &&
            Objects.equals(this.formId, componentsSchemasRecordCreateRequestItem.formId) &&
            Objects.equals(this.siteName, componentsSchemasRecordCreateRequestItem.siteName) &&
            Objects.equals(this.siteId, componentsSchemasRecordCreateRequestItem.siteId) &&
            Objects.equals(this.subjectKey, componentsSchemasRecordCreateRequestItem.subjectKey) &&
            Objects.equals(this.subjectId, componentsSchemasRecordCreateRequestItem.subjectId) &&
            Objects.equals(this.subjectOid, componentsSchemasRecordCreateRequestItem.subjectOid) &&
            Objects.equals(this.intervalName, componentsSchemasRecordCreateRequestItem.intervalName) &&
            Objects.equals(this.intervalId, componentsSchemasRecordCreateRequestItem.intervalId) &&
            Objects.equals(this.recordId, componentsSchemasRecordCreateRequestItem.recordId) &&
            Objects.equals(this.recordOid, componentsSchemasRecordCreateRequestItem.recordOid) &&
            Objects.equals(this.data, componentsSchemasRecordCreateRequestItem.data);
    }

    @Override
    public int hashCode() {
        return Objects.hash(formKey, formId, siteName, siteId, subjectKey, subjectId, subjectOid, intervalName, intervalId, recordId, recordOid, data);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComponentsSchemasRecordCreateRequestItem {\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
        sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectOid: ").append(toIndentedString(subjectOid)).append("\n");
        sb.append("    intervalName: ").append(toIndentedString(intervalName)).append("\n");
        sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
        sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
        sb.append("    recordOid: ").append(toIndentedString(recordOid)).append("\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

