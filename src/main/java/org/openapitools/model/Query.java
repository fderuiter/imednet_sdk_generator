/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.QueryComment;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Query
 */
@JsonPropertyOrder({
  Query.JSON_PROPERTY_STUDY_KEY,
  Query.JSON_PROPERTY_SUBJECT_ID,
  Query.JSON_PROPERTY_SUBJECT_OID,
  Query.JSON_PROPERTY_ANNOTATION_TYPE,
  Query.JSON_PROPERTY_ANNOTATION_ID,
  Query.JSON_PROPERTY_TYPE,
  Query.JSON_PROPERTY_DESCRIPTION,
  Query.JSON_PROPERTY_RECORD_ID,
  Query.JSON_PROPERTY_VARIABLE,
  Query.JSON_PROPERTY_SUBJECT_KEY,
  Query.JSON_PROPERTY_DATE_CREATED,
  Query.JSON_PROPERTY_DATE_MODIFIED,
  Query.JSON_PROPERTY_QUERY_COMMENTS
})
@JsonTypeName("Query")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Query {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_OID = "subjectOid";
    private String subjectOid;

    public static final String JSON_PROPERTY_ANNOTATION_TYPE = "annotationType";
    private String annotationType;

    public static final String JSON_PROPERTY_ANNOTATION_ID = "annotationId";
    private Integer annotationId;

    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_RECORD_ID = "recordId";
    private Integer recordId;

    public static final String JSON_PROPERTY_VARIABLE = "variable";
    private String variable;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public static final String JSON_PROPERTY_QUERY_COMMENTS = "queryComments";
    private List<@Valid QueryComment> queryComments = null;

    public Query() {
    }

    public Query studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Query subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Mednet subject ID associated with the query (if applicable)
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public Query subjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
        return this;
    }

    /**
     * Client-assigned subject OID (if applicable)
     * @return subjectOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectOid() {
        return subjectOid;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
    }

    public Query annotationType(String annotationType) {
        this.annotationType = annotationType;
        return this;
    }

    /**
     * Category/type of the query (e.g., subject, record, question)
     * @return annotationType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ANNOTATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAnnotationType() {
        return annotationType;
    }

    @JsonProperty(JSON_PROPERTY_ANNOTATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnotationType(String annotationType) {
        this.annotationType = annotationType;
    }

    public Query annotationId(Integer annotationId) {
        this.annotationId = annotationId;
        return this;
    }

    /**
     * Unique system identifier for the query
     * @return annotationId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ANNOTATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getAnnotationId() {
        return annotationId;
    }

    @JsonProperty(JSON_PROPERTY_ANNOTATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnotationId(Integer annotationId) {
        this.annotationId = annotationId;
    }

    public Query type(String type) {
        this.type = type;
        return this;
    }

    /**
     * System text identifier for the query type/location (subject, record, question)
     * @return type
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(String type) {
        this.type = type;
    }

    public Query description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Description of the query (e.g., reason or context)
     * @return description
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public Query recordId(Integer recordId) {
        this.recordId = recordId;
        return this;
    }

    /**
     * Record ID associated with the query (if applicable)
     * @return recordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordId() {
        return recordId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    public Query variable(String variable) {
        this.variable = variable;
        return this;
    }

    /**
     * Variable name (field) associated with the query (if applicable)
     * @return variable
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVariable() {
        return variable;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariable(String variable) {
        this.variable = variable;
    }

    public Query subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Subject display ID associated with the query (if applicable)
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public Query dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when the query was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Query dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when the query was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    public Query queryComments(List<@Valid QueryComment> queryComments) {
        this.queryComments = queryComments;
        return this;
    }

    public Query addQueryCommentsItem(QueryComment queryCommentsItem) {
        if (this.queryComments == null) {
            this.queryComments = new ArrayList<>();
        }
        this.queryComments.add(queryCommentsItem);
        return this;
    }

    /**
     * History of comments/actions on the query
     * @return queryComments
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_QUERY_COMMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid QueryComment> getQueryComments() {
        return queryComments;
    }

    @JsonProperty(JSON_PROPERTY_QUERY_COMMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQueryComments(List<@Valid QueryComment> queryComments) {
        this.queryComments = queryComments;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Query query = (Query) o;
        return Objects.equals(this.studyKey, query.studyKey) &&
            Objects.equals(this.subjectId, query.subjectId) &&
            Objects.equals(this.subjectOid, query.subjectOid) &&
            Objects.equals(this.annotationType, query.annotationType) &&
            Objects.equals(this.annotationId, query.annotationId) &&
            Objects.equals(this.type, query.type) &&
            Objects.equals(this.description, query.description) &&
            Objects.equals(this.recordId, query.recordId) &&
            Objects.equals(this.variable, query.variable) &&
            Objects.equals(this.subjectKey, query.subjectKey) &&
            Objects.equals(this.dateCreated, query.dateCreated) &&
            Objects.equals(this.dateModified, query.dateModified) &&
            Objects.equals(this.queryComments, query.queryComments);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, subjectId, subjectOid, annotationType, annotationId, type, description, recordId, variable, subjectKey, dateCreated, dateModified, queryComments);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Query {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectOid: ").append(toIndentedString(subjectOid)).append("\n");
        sb.append("    annotationType: ").append(toIndentedString(annotationType)).append("\n");
        sb.append("    annotationId: ").append(toIndentedString(annotationId)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
        sb.append("    variable: ").append(toIndentedString(variable)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("    queryComments: ").append(toIndentedString(queryComments)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

