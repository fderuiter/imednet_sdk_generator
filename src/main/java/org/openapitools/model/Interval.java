/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.ComponentsSchemasIntervalFormsItem;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Interval
 */
@JsonPropertyOrder({
  Interval.JSON_PROPERTY_STUDY_KEY,
  Interval.JSON_PROPERTY_INTERVAL_ID,
  Interval.JSON_PROPERTY_INTERVAL_NAME,
  Interval.JSON_PROPERTY_INTERVAL_DESCRIPTION,
  Interval.JSON_PROPERTY_INTERVAL_SEQUENCE,
  Interval.JSON_PROPERTY_INTERVAL_GROUP_ID,
  Interval.JSON_PROPERTY_INTERVAL_GROUP_NAME,
  Interval.JSON_PROPERTY_TIMELINE,
  Interval.JSON_PROPERTY_DEFINED_USING_INTERVAL,
  Interval.JSON_PROPERTY_WINDOW_CALCULATION_FORM,
  Interval.JSON_PROPERTY_WINDOW_CALCULATION_DATE,
  Interval.JSON_PROPERTY_ACTUAL_DATE_FORM,
  Interval.JSON_PROPERTY_ACTUAL_DATE,
  Interval.JSON_PROPERTY_DUE_DATE_WILL_BE_IN,
  Interval.JSON_PROPERTY_NEGATIVE_SLACK,
  Interval.JSON_PROPERTY_POSITIVE_SLACK,
  Interval.JSON_PROPERTY_EPRO_GRACE_PERIOD,
  Interval.JSON_PROPERTY_FORMS,
  Interval.JSON_PROPERTY_DISABLED,
  Interval.JSON_PROPERTY_DATE_CREATED,
  Interval.JSON_PROPERTY_DATE_MODIFIED
})
@JsonTypeName("Interval")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Interval {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_INTERVAL_ID = "intervalId";
    private Integer intervalId;

    public static final String JSON_PROPERTY_INTERVAL_NAME = "intervalName";
    private String intervalName;

    public static final String JSON_PROPERTY_INTERVAL_DESCRIPTION = "intervalDescription";
    private String intervalDescription;

    public static final String JSON_PROPERTY_INTERVAL_SEQUENCE = "intervalSequence";
    private Integer intervalSequence;

    public static final String JSON_PROPERTY_INTERVAL_GROUP_ID = "intervalGroupId";
    private Integer intervalGroupId;

    public static final String JSON_PROPERTY_INTERVAL_GROUP_NAME = "intervalGroupName";
    private String intervalGroupName;

    public static final String JSON_PROPERTY_TIMELINE = "timeline";
    private String timeline;

    public static final String JSON_PROPERTY_DEFINED_USING_INTERVAL = "definedUsingInterval";
    private String definedUsingInterval;

    public static final String JSON_PROPERTY_WINDOW_CALCULATION_FORM = "windowCalculationForm";
    private String windowCalculationForm;

    public static final String JSON_PROPERTY_WINDOW_CALCULATION_DATE = "windowCalculationDate";
    private String windowCalculationDate;

    public static final String JSON_PROPERTY_ACTUAL_DATE_FORM = "actualDateForm";
    private String actualDateForm;

    public static final String JSON_PROPERTY_ACTUAL_DATE = "actualDate";
    private String actualDate;

    public static final String JSON_PROPERTY_DUE_DATE_WILL_BE_IN = "dueDateWillBeIn";
    private Integer dueDateWillBeIn;

    public static final String JSON_PROPERTY_NEGATIVE_SLACK = "negativeSlack";
    private Integer negativeSlack;

    public static final String JSON_PROPERTY_POSITIVE_SLACK = "positiveSlack";
    private Integer positiveSlack;

    public static final String JSON_PROPERTY_EPRO_GRACE_PERIOD = "eproGracePeriod";
    private Integer eproGracePeriod;

    public static final String JSON_PROPERTY_FORMS = "forms";
    private List<@Valid ComponentsSchemasIntervalFormsItem> forms = null;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    private Boolean disabled;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public Interval() {
    }

    public Interval studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Interval intervalId(Integer intervalId) {
        this.intervalId = intervalId;
        return this;
    }

    /**
     * Unique system identifier for the interval (visit definition)
     * @return intervalId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalId() {
        return intervalId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalId(Integer intervalId) {
        this.intervalId = intervalId;
    }

    public Interval intervalName(String intervalName) {
        this.intervalName = intervalName;
        return this;
    }

    /**
     * Name of the interval (visit) as defined in the study
     * @return intervalName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIntervalName() {
        return intervalName;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalName(String intervalName) {
        this.intervalName = intervalName;
    }

    public Interval intervalDescription(String intervalDescription) {
        this.intervalDescription = intervalDescription;
        return this;
    }

    /**
     * Description of the interval (visit)
     * @return intervalDescription
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIntervalDescription() {
        return intervalDescription;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalDescription(String intervalDescription) {
        this.intervalDescription = intervalDescription;
    }

    public Interval intervalSequence(Integer intervalSequence) {
        this.intervalSequence = intervalSequence;
        return this;
    }

    /**
     * Sequence number of the interval in the schedule
     * @return intervalSequence
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalSequence() {
        return intervalSequence;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_SEQUENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalSequence(Integer intervalSequence) {
        this.intervalSequence = intervalSequence;
    }

    public Interval intervalGroupId(Integer intervalGroupId) {
        this.intervalGroupId = intervalGroupId;
        return this;
    }

    /**
     * Identifier for the interval group (if intervals are grouped)
     * @return intervalGroupId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalGroupId() {
        return intervalGroupId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalGroupId(Integer intervalGroupId) {
        this.intervalGroupId = intervalGroupId;
    }

    public Interval intervalGroupName(String intervalGroupName) {
        this.intervalGroupName = intervalGroupName;
        return this;
    }

    /**
     * Name of the interval group
     * @return intervalGroupName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_GROUP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIntervalGroupName() {
        return intervalGroupName;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_GROUP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalGroupName(String intervalGroupName) {
        this.intervalGroupName = intervalGroupName;
    }

    public Interval timeline(String timeline) {
        this.timeline = timeline;
        return this;
    }

    /**
     * Type of interval visit window (e.g., None, Due Date, Start - End Date, Actual Date)
     * @return timeline
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TIMELINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTimeline() {
        return timeline;
    }

    @JsonProperty(JSON_PROPERTY_TIMELINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimeline(String timeline) {
        this.timeline = timeline;
    }

    public Interval definedUsingInterval(String definedUsingInterval) {
        this.definedUsingInterval = definedUsingInterval;
        return this;
    }

    /**
     * Baseline interval used for calculating this intervalâ€™s dates
     * @return definedUsingInterval
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEFINED_USING_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDefinedUsingInterval() {
        return definedUsingInterval;
    }

    @JsonProperty(JSON_PROPERTY_DEFINED_USING_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDefinedUsingInterval(String definedUsingInterval) {
        this.definedUsingInterval = definedUsingInterval;
    }

    public Interval windowCalculationForm(String windowCalculationForm) {
        this.windowCalculationForm = windowCalculationForm;
        return this;
    }

    /**
     * Baseline form (name) from which the calculation date is taken
     * @return windowCalculationForm
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_WINDOW_CALCULATION_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getWindowCalculationForm() {
        return windowCalculationForm;
    }

    @JsonProperty(JSON_PROPERTY_WINDOW_CALCULATION_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWindowCalculationForm(String windowCalculationForm) {
        this.windowCalculationForm = windowCalculationForm;
    }

    public Interval windowCalculationDate(String windowCalculationDate) {
        this.windowCalculationDate = windowCalculationDate;
        return this;
    }

    /**
     * Baseline field (variable name) from which the calculation date is taken
     * @return windowCalculationDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_WINDOW_CALCULATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getWindowCalculationDate() {
        return windowCalculationDate;
    }

    @JsonProperty(JSON_PROPERTY_WINDOW_CALCULATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWindowCalculationDate(String windowCalculationDate) {
        this.windowCalculationDate = windowCalculationDate;
    }

    public Interval actualDateForm(String actualDateForm) {
        this.actualDateForm = actualDateForm;
        return this;
    }

    /**
     * Form used to capture the actual date for this interval
     * @return actualDateForm
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTUAL_DATE_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActualDateForm() {
        return actualDateForm;
    }

    @JsonProperty(JSON_PROPERTY_ACTUAL_DATE_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActualDateForm(String actualDateForm) {
        this.actualDateForm = actualDateForm;
    }

    public Interval actualDate(String actualDate) {
        this.actualDate = actualDate;
        return this;
    }

    /**
     * Field (variable name) used to capture the actual date for this interval
     * @return actualDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTUAL_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActualDate() {
        return actualDate;
    }

    @JsonProperty(JSON_PROPERTY_ACTUAL_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActualDate(String actualDate) {
        this.actualDate = actualDate;
    }

    public Interval dueDateWillBeIn(Integer dueDateWillBeIn) {
        this.dueDateWillBeIn = dueDateWillBeIn;
        return this;
    }

    /**
     * Number of days from the calculation date when the interval is due
     * @return dueDateWillBeIn
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DUE_DATE_WILL_BE_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getDueDateWillBeIn() {
        return dueDateWillBeIn;
    }

    @JsonProperty(JSON_PROPERTY_DUE_DATE_WILL_BE_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDueDateWillBeIn(Integer dueDateWillBeIn) {
        this.dueDateWillBeIn = dueDateWillBeIn;
    }

    public Interval negativeSlack(Integer negativeSlack) {
        this.negativeSlack = negativeSlack;
        return this;
    }

    /**
     * Number of days before the due date that are allowed (negative window)
     * @return negativeSlack
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NEGATIVE_SLACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getNegativeSlack() {
        return negativeSlack;
    }

    @JsonProperty(JSON_PROPERTY_NEGATIVE_SLACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNegativeSlack(Integer negativeSlack) {
        this.negativeSlack = negativeSlack;
    }

    public Interval positiveSlack(Integer positiveSlack) {
        this.positiveSlack = positiveSlack;
        return this;
    }

    /**
     * Number of days after the due date that are allowed (positive window)
     * @return positiveSlack
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_POSITIVE_SLACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPositiveSlack() {
        return positiveSlack;
    }

    @JsonProperty(JSON_PROPERTY_POSITIVE_SLACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPositiveSlack(Integer positiveSlack) {
        this.positiveSlack = positiveSlack;
    }

    public Interval eproGracePeriod(Integer eproGracePeriod) {
        this.eproGracePeriod = eproGracePeriod;
        return this;
    }

    /**
     * Number of days of grace period for ePRO completion after due date
     * @return eproGracePeriod
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EPRO_GRACE_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getEproGracePeriod() {
        return eproGracePeriod;
    }

    @JsonProperty(JSON_PROPERTY_EPRO_GRACE_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEproGracePeriod(Integer eproGracePeriod) {
        this.eproGracePeriod = eproGracePeriod;
    }

    public Interval forms(List<@Valid ComponentsSchemasIntervalFormsItem> forms) {
        this.forms = forms;
        return this;
    }

    public Interval addFormsItem(ComponentsSchemasIntervalFormsItem formsItem) {
        if (this.forms == null) {
            this.forms = new ArrayList<>();
        }
        this.forms.add(formsItem);
        return this;
    }

    /**
     * List of forms that are scheduled in this interval
     * @return forms
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid ComponentsSchemasIntervalFormsItem> getForms() {
        return forms;
    }

    @JsonProperty(JSON_PROPERTY_FORMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setForms(List<@Valid ComponentsSchemasIntervalFormsItem> forms) {
        this.forms = forms;
    }

    public Interval disabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Whether the interval is soft-deleted (disabled)
     * @return disabled
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    public Interval dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this interval was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Interval dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when this interval was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Interval interval = (Interval) o;
        return Objects.equals(this.studyKey, interval.studyKey) &&
            Objects.equals(this.intervalId, interval.intervalId) &&
            Objects.equals(this.intervalName, interval.intervalName) &&
            Objects.equals(this.intervalDescription, interval.intervalDescription) &&
            Objects.equals(this.intervalSequence, interval.intervalSequence) &&
            Objects.equals(this.intervalGroupId, interval.intervalGroupId) &&
            Objects.equals(this.intervalGroupName, interval.intervalGroupName) &&
            Objects.equals(this.timeline, interval.timeline) &&
            Objects.equals(this.definedUsingInterval, interval.definedUsingInterval) &&
            Objects.equals(this.windowCalculationForm, interval.windowCalculationForm) &&
            Objects.equals(this.windowCalculationDate, interval.windowCalculationDate) &&
            Objects.equals(this.actualDateForm, interval.actualDateForm) &&
            Objects.equals(this.actualDate, interval.actualDate) &&
            Objects.equals(this.dueDateWillBeIn, interval.dueDateWillBeIn) &&
            Objects.equals(this.negativeSlack, interval.negativeSlack) &&
            Objects.equals(this.positiveSlack, interval.positiveSlack) &&
            Objects.equals(this.eproGracePeriod, interval.eproGracePeriod) &&
            Objects.equals(this.forms, interval.forms) &&
            Objects.equals(this.disabled, interval.disabled) &&
            Objects.equals(this.dateCreated, interval.dateCreated) &&
            Objects.equals(this.dateModified, interval.dateModified);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, intervalId, intervalName, intervalDescription, intervalSequence, intervalGroupId, intervalGroupName, timeline, definedUsingInterval, windowCalculationForm, windowCalculationDate, actualDateForm, actualDate, dueDateWillBeIn, negativeSlack, positiveSlack, eproGracePeriod, forms, disabled, dateCreated, dateModified);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Interval {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
        sb.append("    intervalName: ").append(toIndentedString(intervalName)).append("\n");
        sb.append("    intervalDescription: ").append(toIndentedString(intervalDescription)).append("\n");
        sb.append("    intervalSequence: ").append(toIndentedString(intervalSequence)).append("\n");
        sb.append("    intervalGroupId: ").append(toIndentedString(intervalGroupId)).append("\n");
        sb.append("    intervalGroupName: ").append(toIndentedString(intervalGroupName)).append("\n");
        sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
        sb.append("    definedUsingInterval: ").append(toIndentedString(definedUsingInterval)).append("\n");
        sb.append("    windowCalculationForm: ").append(toIndentedString(windowCalculationForm)).append("\n");
        sb.append("    windowCalculationDate: ").append(toIndentedString(windowCalculationDate)).append("\n");
        sb.append("    actualDateForm: ").append(toIndentedString(actualDateForm)).append("\n");
        sb.append("    actualDate: ").append(toIndentedString(actualDate)).append("\n");
        sb.append("    dueDateWillBeIn: ").append(toIndentedString(dueDateWillBeIn)).append("\n");
        sb.append("    negativeSlack: ").append(toIndentedString(negativeSlack)).append("\n");
        sb.append("    positiveSlack: ").append(toIndentedString(positiveSlack)).append("\n");
        sb.append("    eproGracePeriod: ").append(toIndentedString(eproGracePeriod)).append("\n");
        sb.append("    forms: ").append(toIndentedString(forms)).append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

