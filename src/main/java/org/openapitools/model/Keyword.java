/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Keyword
 */
@JsonPropertyOrder({
  Keyword.JSON_PROPERTY_KEYWORD_NAME,
  Keyword.JSON_PROPERTY_KEYWORD_KEY,
  Keyword.JSON_PROPERTY_KEYWORD_ID,
  Keyword.JSON_PROPERTY_DATE_ADDED
})
@JsonTypeName("Keyword")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Keyword {
    public static final String JSON_PROPERTY_KEYWORD_NAME = "keywordName";
    private String keywordName;

    public static final String JSON_PROPERTY_KEYWORD_KEY = "keywordKey";
    private String keywordKey;

    public static final String JSON_PROPERTY_KEYWORD_ID = "keywordId";
    private Integer keywordId;

    public static final String JSON_PROPERTY_DATE_ADDED = "dateAdded";
    private String dateAdded;

    public Keyword() {
    }

    public Keyword keywordName(String keywordName) {
        this.keywordName = keywordName;
        return this;
    }

    /**
     * Name of the keyword
     * @return keywordName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_KEYWORD_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getKeywordName() {
        return keywordName;
    }

    @JsonProperty(JSON_PROPERTY_KEYWORD_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKeywordName(String keywordName) {
        this.keywordName = keywordName;
    }

    public Keyword keywordKey(String keywordKey) {
        this.keywordKey = keywordKey;
        return this;
    }

    /**
     * Key of the keyword (short code)
     * @return keywordKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_KEYWORD_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getKeywordKey() {
        return keywordKey;
    }

    @JsonProperty(JSON_PROPERTY_KEYWORD_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKeywordKey(String keywordKey) {
        this.keywordKey = keywordKey;
    }

    public Keyword keywordId(Integer keywordId) {
        this.keywordId = keywordId;
        return this;
    }

    /**
     * Internal keyword ID
     * @return keywordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_KEYWORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getKeywordId() {
        return keywordId;
    }

    @JsonProperty(JSON_PROPERTY_KEYWORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKeywordId(Integer keywordId) {
        this.keywordId = keywordId;
    }

    public Keyword dateAdded(String dateAdded) {
        this.dateAdded = dateAdded;
        return this;
    }

    /**
     * Date when this keyword was added
     * @return dateAdded
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_ADDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateAdded() {
        return dateAdded;
    }

    @JsonProperty(JSON_PROPERTY_DATE_ADDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateAdded(String dateAdded) {
        this.dateAdded = dateAdded;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Keyword keyword = (Keyword) o;
        return Objects.equals(this.keywordName, keyword.keywordName) &&
            Objects.equals(this.keywordKey, keyword.keywordKey) &&
            Objects.equals(this.keywordId, keyword.keywordId) &&
            Objects.equals(this.dateAdded, keyword.dateAdded);
    }

    @Override
    public int hashCode() {
        return Objects.hash(keywordName, keywordKey, keywordId, dateAdded);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Keyword {\n");
        sb.append("    keywordName: ").append(toIndentedString(keywordName)).append("\n");
        sb.append("    keywordKey: ").append(toIndentedString(keywordKey)).append("\n");
        sb.append("    keywordId: ").append(toIndentedString(keywordId)).append("\n");
        sb.append("    dateAdded: ").append(toIndentedString(dateAdded)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

