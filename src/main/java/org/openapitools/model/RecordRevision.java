/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * RecordRevision
 */
@JsonPropertyOrder({
  RecordRevision.JSON_PROPERTY_STUDY_KEY,
  RecordRevision.JSON_PROPERTY_RECORD_REVISION_ID,
  RecordRevision.JSON_PROPERTY_RECORD_ID,
  RecordRevision.JSON_PROPERTY_RECORD_OID,
  RecordRevision.JSON_PROPERTY_RECORD_REVISION,
  RecordRevision.JSON_PROPERTY_DATA_REVISION,
  RecordRevision.JSON_PROPERTY_RECORD_STATUS,
  RecordRevision.JSON_PROPERTY_SUBJECT_ID,
  RecordRevision.JSON_PROPERTY_SUBJECT_OID,
  RecordRevision.JSON_PROPERTY_SUBJECT_KEY,
  RecordRevision.JSON_PROPERTY_SITE_ID,
  RecordRevision.JSON_PROPERTY_FORM_KEY,
  RecordRevision.JSON_PROPERTY_INTERVAL_ID,
  RecordRevision.JSON_PROPERTY_ROLE,
  RecordRevision.JSON_PROPERTY_USER,
  RecordRevision.JSON_PROPERTY_REASON_FOR_CHANGE,
  RecordRevision.JSON_PROPERTY_DELETED,
  RecordRevision.JSON_PROPERTY_DATE_CREATED
})
@JsonTypeName("RecordRevision")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class RecordRevision {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_RECORD_REVISION_ID = "recordRevisionId";
    private Integer recordRevisionId;

    public static final String JSON_PROPERTY_RECORD_ID = "recordId";
    private Integer recordId;

    public static final String JSON_PROPERTY_RECORD_OID = "recordOid";
    private String recordOid;

    public static final String JSON_PROPERTY_RECORD_REVISION = "recordRevision";
    private Integer recordRevision;

    public static final String JSON_PROPERTY_DATA_REVISION = "dataRevision";
    private Integer dataRevision;

    public static final String JSON_PROPERTY_RECORD_STATUS = "recordStatus";
    private String recordStatus;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_OID = "subjectOid";
    private String subjectOid;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_SITE_ID = "siteId";
    private Integer siteId;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_INTERVAL_ID = "intervalId";
    private Integer intervalId;

    public static final String JSON_PROPERTY_ROLE = "role";
    private String role;

    public static final String JSON_PROPERTY_USER = "user";
    private String user;

    public static final String JSON_PROPERTY_REASON_FOR_CHANGE = "reasonForChange";
    private String reasonForChange;

    public static final String JSON_PROPERTY_DELETED = "deleted";
    private Boolean deleted;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public RecordRevision() {
    }

    public RecordRevision studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public RecordRevision recordRevisionId(Integer recordRevisionId) {
        this.recordRevisionId = recordRevisionId;
        return this;
    }

    /**
     * Unique system identifier for the record revision
     * @return recordRevisionId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_REVISION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordRevisionId() {
        return recordRevisionId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_REVISION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordRevisionId(Integer recordRevisionId) {
        this.recordRevisionId = recordRevisionId;
    }

    public RecordRevision recordId(Integer recordId) {
        this.recordId = recordId;
        return this;
    }

    /**
     * Unique system identifier of the related record
     * @return recordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordId() {
        return recordId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    public RecordRevision recordOid(String recordOid) {
        this.recordOid = recordOid;
        return this;
    }

    /**
     * Client-assigned record OID (if any)
     * @return recordOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordOid() {
        return recordOid;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordOid(String recordOid) {
        this.recordOid = recordOid;
    }

    public RecordRevision recordRevision(Integer recordRevision) {
        this.recordRevision = recordRevision;
        return this;
    }

    /**
     * Revision number of the record (version of the record status)
     * @return recordRevision
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordRevision() {
        return recordRevision;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordRevision(Integer recordRevision) {
        this.recordRevision = recordRevision;
    }

    public RecordRevision dataRevision(Integer dataRevision) {
        this.dataRevision = dataRevision;
        return this;
    }

    /**
     * Revision number of the data within the record
     * @return dataRevision
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATA_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getDataRevision() {
        return dataRevision;
    }

    @JsonProperty(JSON_PROPERTY_DATA_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDataRevision(Integer dataRevision) {
        this.dataRevision = dataRevision;
    }

    public RecordRevision recordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
        return this;
    }

    /**
     * Status of the record at this revision (user-defined status label)
     * @return recordStatus
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordStatus() {
        return recordStatus;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

    public RecordRevision subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Mednet subject ID related to the record
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public RecordRevision subjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
        return this;
    }

    /**
     * Client-assigned subject OID related to the record
     * @return subjectOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectOid() {
        return subjectOid;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
    }

    public RecordRevision subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Subject display ID related to the record
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public RecordRevision siteId(Integer siteId) {
        this.siteId = siteId;
        return this;
    }

    /**
     * Site ID related to the record
     * @return siteId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSiteId() {
        return siteId;
    }

    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteId(Integer siteId) {
        this.siteId = siteId;
    }

    public RecordRevision formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key of the form that the record belongs to
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public RecordRevision intervalId(Integer intervalId) {
        this.intervalId = intervalId;
        return this;
    }

    /**
     * Interval ID (visit definition) related to the record
     * @return intervalId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalId() {
        return intervalId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalId(Integer intervalId) {
        this.intervalId = intervalId;
    }

    public RecordRevision role(String role) {
        this.role = role;
        return this;
    }

    /**
     * Role name of the user who saved the record revision
     * @return role
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRole() {
        return role;
    }

    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRole(String role) {
        this.role = role;
    }

    public RecordRevision user(String user) {
        this.user = user;
        return this;
    }

    /**
     * Username of the user who saved the record revision
     * @return user
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUser() {
        return user;
    }

    @JsonProperty(JSON_PROPERTY_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUser(String user) {
        this.user = user;
    }

    public RecordRevision reasonForChange(String reasonForChange) {
        this.reasonForChange = reasonForChange;
        return this;
    }

    /**
     * Reason for change, if provided (for audit trail)
     * @return reasonForChange
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REASON_FOR_CHANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getReasonForChange() {
        return reasonForChange;
    }

    @JsonProperty(JSON_PROPERTY_REASON_FOR_CHANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReasonForChange(String reasonForChange) {
        this.reasonForChange = reasonForChange;
    }

    public RecordRevision deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Whether the record was deleted in this revision
     * @return deleted
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeleted() {
        return deleted;
    }

    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public RecordRevision dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this record revision was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RecordRevision recordRevision = (RecordRevision) o;
        return Objects.equals(this.studyKey, recordRevision.studyKey) &&
            Objects.equals(this.recordRevisionId, recordRevision.recordRevisionId) &&
            Objects.equals(this.recordId, recordRevision.recordId) &&
            Objects.equals(this.recordOid, recordRevision.recordOid) &&
            Objects.equals(this.recordRevision, recordRevision.recordRevision) &&
            Objects.equals(this.dataRevision, recordRevision.dataRevision) &&
            Objects.equals(this.recordStatus, recordRevision.recordStatus) &&
            Objects.equals(this.subjectId, recordRevision.subjectId) &&
            Objects.equals(this.subjectOid, recordRevision.subjectOid) &&
            Objects.equals(this.subjectKey, recordRevision.subjectKey) &&
            Objects.equals(this.siteId, recordRevision.siteId) &&
            Objects.equals(this.formKey, recordRevision.formKey) &&
            Objects.equals(this.intervalId, recordRevision.intervalId) &&
            Objects.equals(this.role, recordRevision.role) &&
            Objects.equals(this.user, recordRevision.user) &&
            Objects.equals(this.reasonForChange, recordRevision.reasonForChange) &&
            Objects.equals(this.deleted, recordRevision.deleted) &&
            Objects.equals(this.dateCreated, recordRevision.dateCreated);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, recordRevisionId, recordId, recordOid, recordRevision, dataRevision, recordStatus, subjectId, subjectOid, subjectKey, siteId, formKey, intervalId, role, user, reasonForChange, deleted, dateCreated);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RecordRevision {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    recordRevisionId: ").append(toIndentedString(recordRevisionId)).append("\n");
        sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
        sb.append("    recordOid: ").append(toIndentedString(recordOid)).append("\n");
        sb.append("    recordRevision: ").append(toIndentedString(recordRevision)).append("\n");
        sb.append("    dataRevision: ").append(toIndentedString(dataRevision)).append("\n");
        sb.append("    recordStatus: ").append(toIndentedString(recordStatus)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectOid: ").append(toIndentedString(subjectOid)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    user: ").append(toIndentedString(user)).append("\n");
        sb.append("    reasonForChange: ").append(toIndentedString(reasonForChange)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

