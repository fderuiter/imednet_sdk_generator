/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Form
 */
@JsonPropertyOrder({
  Form.JSON_PROPERTY_STUDY_KEY,
  Form.JSON_PROPERTY_FORM_ID,
  Form.JSON_PROPERTY_FORM_KEY,
  Form.JSON_PROPERTY_FORM_NAME,
  Form.JSON_PROPERTY_FORM_TYPE,
  Form.JSON_PROPERTY_REVISION,
  Form.JSON_PROPERTY_EMBEDDED_LOG,
  Form.JSON_PROPERTY_ENFORCE_OWNERSHIP,
  Form.JSON_PROPERTY_USER_AGREEMENT,
  Form.JSON_PROPERTY_SUBJECT_RECORD_REPORT,
  Form.JSON_PROPERTY_UNSCHEDULED_VISIT,
  Form.JSON_PROPERTY_OTHER_FORMS,
  Form.JSON_PROPERTY_EPRO_FORM,
  Form.JSON_PROPERTY_ALLOW_COPY,
  Form.JSON_PROPERTY_DISABLED,
  Form.JSON_PROPERTY_DATE_CREATED,
  Form.JSON_PROPERTY_DATE_MODIFIED
})
@JsonTypeName("Form")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Form {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_FORM_NAME = "formName";
    private String formName;

    public static final String JSON_PROPERTY_FORM_TYPE = "formType";
    private String formType;

    public static final String JSON_PROPERTY_REVISION = "revision";
    private Integer revision;

    public static final String JSON_PROPERTY_EMBEDDED_LOG = "embeddedLog";
    private Boolean embeddedLog;

    public static final String JSON_PROPERTY_ENFORCE_OWNERSHIP = "enforceOwnership";
    private Boolean enforceOwnership;

    public static final String JSON_PROPERTY_USER_AGREEMENT = "userAgreement";
    private Boolean userAgreement;

    public static final String JSON_PROPERTY_SUBJECT_RECORD_REPORT = "subjectRecordReport";
    private Boolean subjectRecordReport;

    public static final String JSON_PROPERTY_UNSCHEDULED_VISIT = "unscheduledVisit";
    private Boolean unscheduledVisit;

    public static final String JSON_PROPERTY_OTHER_FORMS = "otherForms";
    private Boolean otherForms;

    public static final String JSON_PROPERTY_EPRO_FORM = "eproForm";
    private Boolean eproForm;

    public static final String JSON_PROPERTY_ALLOW_COPY = "allowCopy";
    private Boolean allowCopy;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    private Boolean disabled;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public Form() {
    }

    public Form studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Form formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * Mednet Form ID
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public Form formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * User-defined form key
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public Form formName(String formName) {
        this.formName = formName;
        return this;
    }

    /**
     * Name of the form (eCRF)
     * @return formName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormName() {
        return formName;
    }

    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormName(String formName) {
        this.formName = formName;
    }

    public Form formType(String formType) {
        this.formType = formType;
        return this;
    }

    /**
     * Type of the form (e.g., Subject or Site)
     * @return formType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormType() {
        return formType;
    }

    @JsonProperty(JSON_PROPERTY_FORM_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormType(String formType) {
        this.formType = formType;
    }

    public Form revision(Integer revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Number of modifications (revisions) of the form metadata
     * @return revision
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRevision() {
        return revision;
    }

    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRevision(Integer revision) {
        this.revision = revision;
    }

    public Form embeddedLog(Boolean embeddedLog) {
        this.embeddedLog = embeddedLog;
        return this;
    }

    /**
     * Whether the form has an embedded log
     * @return embeddedLog
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EMBEDDED_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getEmbeddedLog() {
        return embeddedLog;
    }

    @JsonProperty(JSON_PROPERTY_EMBEDDED_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEmbeddedLog(Boolean embeddedLog) {
        this.embeddedLog = embeddedLog;
    }

    public Form enforceOwnership(Boolean enforceOwnership) {
        this.enforceOwnership = enforceOwnership;
        return this;
    }

    /**
     * Whether the form enforces record ownership
     * @return enforceOwnership
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ENFORCE_OWNERSHIP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getEnforceOwnership() {
        return enforceOwnership;
    }

    @JsonProperty(JSON_PROPERTY_ENFORCE_OWNERSHIP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnforceOwnership(Boolean enforceOwnership) {
        this.enforceOwnership = enforceOwnership;
    }

    public Form userAgreement(Boolean userAgreement) {
        this.userAgreement = userAgreement;
        return this;
    }

    /**
     * Whether the form requires a user agreement
     * @return userAgreement
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_USER_AGREEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getUserAgreement() {
        return userAgreement;
    }

    @JsonProperty(JSON_PROPERTY_USER_AGREEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserAgreement(Boolean userAgreement) {
        this.userAgreement = userAgreement;
    }

    public Form subjectRecordReport(Boolean subjectRecordReport) {
        this.subjectRecordReport = subjectRecordReport;
        return this;
    }

    /**
     * Whether the form is marked as a subject record report
     * @return subjectRecordReport
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_RECORD_REPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSubjectRecordReport() {
        return subjectRecordReport;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_RECORD_REPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectRecordReport(Boolean subjectRecordReport) {
        this.subjectRecordReport = subjectRecordReport;
    }

    public Form unscheduledVisit(Boolean unscheduledVisit) {
        this.unscheduledVisit = unscheduledVisit;
        return this;
    }

    /**
     * Whether the form is included in unscheduled visits
     * @return unscheduledVisit
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UNSCHEDULED_VISIT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getUnscheduledVisit() {
        return unscheduledVisit;
    }

    @JsonProperty(JSON_PROPERTY_UNSCHEDULED_VISIT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnscheduledVisit(Boolean unscheduledVisit) {
        this.unscheduledVisit = unscheduledVisit;
    }

    public Form otherForms(Boolean otherForms) {
        this.otherForms = otherForms;
        return this;
    }

    /**
     * Whether the form is included in Other Forms category
     * @return otherForms
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_OTHER_FORMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getOtherForms() {
        return otherForms;
    }

    @JsonProperty(JSON_PROPERTY_OTHER_FORMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOtherForms(Boolean otherForms) {
        this.otherForms = otherForms;
    }

    public Form eproForm(Boolean eproForm) {
        this.eproForm = eproForm;
        return this;
    }

    /**
     * Whether the form is an ePRO (electronic patient reported outcome) form
     * @return eproForm
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EPRO_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getEproForm() {
        return eproForm;
    }

    @JsonProperty(JSON_PROPERTY_EPRO_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEproForm(Boolean eproForm) {
        this.eproForm = eproForm;
    }

    public Form allowCopy(Boolean allowCopy) {
        this.allowCopy = allowCopy;
        return this;
    }

    /**
     * Whether the form allows copying of data
     * @return allowCopy
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ALLOW_COPY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getAllowCopy() {
        return allowCopy;
    }

    @JsonProperty(JSON_PROPERTY_ALLOW_COPY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllowCopy(Boolean allowCopy) {
        this.allowCopy = allowCopy;
    }

    public Form disabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Whether the form is soft-deleted (disabled)
     * @return disabled
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    public Form dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this form was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Form dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when this form was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Form form = (Form) o;
        return Objects.equals(this.studyKey, form.studyKey) &&
            Objects.equals(this.formId, form.formId) &&
            Objects.equals(this.formKey, form.formKey) &&
            Objects.equals(this.formName, form.formName) &&
            Objects.equals(this.formType, form.formType) &&
            Objects.equals(this.revision, form.revision) &&
            Objects.equals(this.embeddedLog, form.embeddedLog) &&
            Objects.equals(this.enforceOwnership, form.enforceOwnership) &&
            Objects.equals(this.userAgreement, form.userAgreement) &&
            Objects.equals(this.subjectRecordReport, form.subjectRecordReport) &&
            Objects.equals(this.unscheduledVisit, form.unscheduledVisit) &&
            Objects.equals(this.otherForms, form.otherForms) &&
            Objects.equals(this.eproForm, form.eproForm) &&
            Objects.equals(this.allowCopy, form.allowCopy) &&
            Objects.equals(this.disabled, form.disabled) &&
            Objects.equals(this.dateCreated, form.dateCreated) &&
            Objects.equals(this.dateModified, form.dateModified);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, formId, formKey, formName, formType, revision, embeddedLog, enforceOwnership, userAgreement, subjectRecordReport, unscheduledVisit, otherForms, eproForm, allowCopy, disabled, dateCreated, dateModified);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Form {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
        sb.append("    formType: ").append(toIndentedString(formType)).append("\n");
        sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
        sb.append("    embeddedLog: ").append(toIndentedString(embeddedLog)).append("\n");
        sb.append("    enforceOwnership: ").append(toIndentedString(enforceOwnership)).append("\n");
        sb.append("    userAgreement: ").append(toIndentedString(userAgreement)).append("\n");
        sb.append("    subjectRecordReport: ").append(toIndentedString(subjectRecordReport)).append("\n");
        sb.append("    unscheduledVisit: ").append(toIndentedString(unscheduledVisit)).append("\n");
        sb.append("    otherForms: ").append(toIndentedString(otherForms)).append("\n");
        sb.append("    eproForm: ").append(toIndentedString(eproForm)).append("\n");
        sb.append("    allowCopy: ").append(toIndentedString(allowCopy)).append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

