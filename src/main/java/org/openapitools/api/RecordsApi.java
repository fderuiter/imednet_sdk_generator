/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.ComponentsSchemasRecordCreateRequestItem;
import org.openapitools.model.InlineObject;
import org.openapitools.model.InlineObject1;
import org.openapitools.model.InlineObject2;
import org.openapitools.model.InlineObject3;
import org.openapitools.model.InlineObject4;
import org.openapitools.model.InlineObject5;
import org.openapitools.model.RecordJobStatus;
import org.openapitools.model.RecordList;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Client("${openapi-micronaut-client-base-path}")
public interface RecordsApi {
    /**
     * Add new record or update subject/record data
     *
     * @param studyKey Study key identifying the study context for the request (required)
     * @param componentsSchemasRecordCreateRequestItem An array of record objects defining the operation to perform (subject registration, record creation, or scheduled record update). (required)
     * @return RecordJobStatus
     */
    @Post(uri="/studies/{studyKey}/records")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<RecordJobStatus> createRecords(
        @PathVariable(name="studyKey") @NotNull String studyKey, 
        @Body @NotNull List<@Valid ComponentsSchemasRecordCreateRequestItem> componentsSchemasRecordCreateRequestItem
    );

    /**
     * List records (eCRF instances) in a study
     *
     * @param studyKey Study key identifying the study context for the request (required)
     * @param page Page index to retrieve (0-based) (optional, default to 0)
     * @param size Number of items to return per page (max 500) (optional, default to 25)
     * @param sort Sorting criteria in the format &#x60;property,ASC&#x60; or &#x60;property,DESC&#x60;. Can be repeated. (optional)
     * @param filter Optional filter criteria to apply, in the format &#x60;attribute&#x3D;&#x3D;value&#x60; with support for &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;, !&#x3D;. Multiple criteria can be combined with &#x60;;&#x60; (AND) or &#x60;,&#x60; (OR). (optional)
     * @param recordDataFilter Optional filter criteria to apply on recordData fields (question responses). Supports &#x3D;&#x3D;, !&#x3D;, &lt;, &lt;&#x3D;, &gt;, &gt;&#x3D;, &#x3D;~ (contains) and can combine multiple criteria with &#x60;;&#x60; (AND) or &#x60;,&#x60; (OR). (optional)
     * @return RecordList
     */
    @Get(uri="/studies/{studyKey}/records")
    @Consumes({"application/json"})
    Mono<RecordList> listRecords(
        @PathVariable(name="studyKey") @NotNull String studyKey, 
        @QueryValue(value="page", defaultValue="0") @Nullable @Min(0) Integer page, 
        @QueryValue(value="size", defaultValue="25") @Nullable @Min(1) @Max(500) Integer size, 
        @QueryValue(value="sort") @Nullable String sort, 
        @QueryValue(value="filter") @Nullable String filter, 
        @QueryValue(value="recordDataFilter") @Nullable String recordDataFilter
    );

}
