/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Visit {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("visitId")
  private Integer visitId = null;
  @SerializedName("intervalId")
  private Integer intervalId = null;
  @SerializedName("intervalName")
  private String intervalName = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("startDate")
  private String startDate = null;
  @SerializedName("endDate")
  private String endDate = null;
  @SerializedName("dueDate")
  private String dueDate = null;
  @SerializedName("visitDate")
  private String visitDate = null;
  @SerializedName("visitDateForm")
  private String visitDateForm = null;
  @SerializedName("visitDateQuestion")
  private String visitDateQuestion = null;
  @SerializedName("deleted")
  private Boolean deleted = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Unique system identifier for the subject visit instance
   **/
  @ApiModelProperty(value = "Unique system identifier for the subject visit instance")
  public Integer getVisitId() {
    return visitId;
  }
  public void setVisitId(Integer visitId) {
    this.visitId = visitId;
  }

  /**
   * Unique system identifier of the interval definition for this visit
   **/
  @ApiModelProperty(value = "Unique system identifier of the interval definition for this visit")
  public Integer getIntervalId() {
    return intervalId;
  }
  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Name of the interval (visit) for this visit instance
   **/
  @ApiModelProperty(value = "Name of the interval (visit) for this visit instance")
  public String getIntervalName() {
    return intervalName;
  }
  public void setIntervalName(String intervalName) {
    this.intervalName = intervalName;
  }

  /**
   * Mednet subject ID of the subject
   **/
  @ApiModelProperty(value = "Mednet subject ID of the subject")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Protocol-assigned subject identifier
   **/
  @ApiModelProperty(value = "Protocol-assigned subject identifier")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Start date of the visit window (in YYYY-MM-DD format)
   **/
  @ApiModelProperty(value = "Start date of the visit window (in YYYY-MM-DD format)")
  public String getStartDate() {
    return startDate;
  }
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  /**
   * End date of the visit window (in YYYY-MM-DD format)
   **/
  @ApiModelProperty(value = "End date of the visit window (in YYYY-MM-DD format)")
  public String getEndDate() {
    return endDate;
  }
  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }

  /**
   * Due date of the visit (in YYYY-MM-DD format), if applicable
   **/
  @ApiModelProperty(value = "Due date of the visit (in YYYY-MM-DD format), if applicable")
  public String getDueDate() {
    return dueDate;
  }
  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }

  /**
   * Actual date the visit took place (in YYYY-MM-DD format)
   **/
  @ApiModelProperty(value = "Actual date the visit took place (in YYYY-MM-DD format)")
  public String getVisitDate() {
    return visitDate;
  }
  public void setVisitDate(String visitDate) {
    this.visitDate = visitDate;
  }

  /**
   * Name of the form used to capture the actual visit date
   **/
  @ApiModelProperty(value = "Name of the form used to capture the actual visit date")
  public String getVisitDateForm() {
    return visitDateForm;
  }
  public void setVisitDateForm(String visitDateForm) {
    this.visitDateForm = visitDateForm;
  }

  /**
   * Variable name of the field capturing the actual visit date
   **/
  @ApiModelProperty(value = "Variable name of the field capturing the actual visit date")
  public String getVisitDateQuestion() {
    return visitDateQuestion;
  }
  public void setVisitDateQuestion(String visitDateQuestion) {
    this.visitDateQuestion = visitDateQuestion;
  }

  /**
   * Whether the visit instance is marked as deleted
   **/
  @ApiModelProperty(value = "Whether the visit instance is marked as deleted")
  public Boolean getDeleted() {
    return deleted;
  }
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  /**
   * Date when this visit record was created
   **/
  @ApiModelProperty(value = "Date when this visit record was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this visit record was last modified
   **/
  @ApiModelProperty(value = "Date when this visit record was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Visit visit = (Visit) o;
    return (this.studyKey == null ? visit.studyKey == null : this.studyKey.equals(visit.studyKey)) &&
        (this.visitId == null ? visit.visitId == null : this.visitId.equals(visit.visitId)) &&
        (this.intervalId == null ? visit.intervalId == null : this.intervalId.equals(visit.intervalId)) &&
        (this.intervalName == null ? visit.intervalName == null : this.intervalName.equals(visit.intervalName)) &&
        (this.subjectId == null ? visit.subjectId == null : this.subjectId.equals(visit.subjectId)) &&
        (this.subjectKey == null ? visit.subjectKey == null : this.subjectKey.equals(visit.subjectKey)) &&
        (this.startDate == null ? visit.startDate == null : this.startDate.equals(visit.startDate)) &&
        (this.endDate == null ? visit.endDate == null : this.endDate.equals(visit.endDate)) &&
        (this.dueDate == null ? visit.dueDate == null : this.dueDate.equals(visit.dueDate)) &&
        (this.visitDate == null ? visit.visitDate == null : this.visitDate.equals(visit.visitDate)) &&
        (this.visitDateForm == null ? visit.visitDateForm == null : this.visitDateForm.equals(visit.visitDateForm)) &&
        (this.visitDateQuestion == null ? visit.visitDateQuestion == null : this.visitDateQuestion.equals(visit.visitDateQuestion)) &&
        (this.deleted == null ? visit.deleted == null : this.deleted.equals(visit.deleted)) &&
        (this.dateCreated == null ? visit.dateCreated == null : this.dateCreated.equals(visit.dateCreated)) &&
        (this.dateModified == null ? visit.dateModified == null : this.dateModified.equals(visit.dateModified));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.visitId == null ? 0: this.visitId.hashCode());
    result = 31 * result + (this.intervalId == null ? 0: this.intervalId.hashCode());
    result = 31 * result + (this.intervalName == null ? 0: this.intervalName.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.dueDate == null ? 0: this.dueDate.hashCode());
    result = 31 * result + (this.visitDate == null ? 0: this.visitDate.hashCode());
    result = 31 * result + (this.visitDateForm == null ? 0: this.visitDateForm.hashCode());
    result = 31 * result + (this.visitDateQuestion == null ? 0: this.visitDateQuestion.hashCode());
    result = 31 * result + (this.deleted == null ? 0: this.deleted.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Visit {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  visitId: ").append(visitId).append("\n");
    sb.append("  intervalId: ").append(intervalId).append("\n");
    sb.append("  intervalName: ").append(intervalName).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  dueDate: ").append(dueDate).append("\n");
    sb.append("  visitDate: ").append(visitDate).append("\n");
    sb.append("  visitDateForm: ").append(visitDateForm).append("\n");
    sb.append("  visitDateQuestion: ").append(visitDateQuestion).append("\n");
    sb.append("  deleted: ").append(deleted).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
