/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class QueryComment {
  
  @SerializedName("sequence")
  private Integer sequence = null;
  @SerializedName("annotationStatus")
  private String annotationStatus = null;
  @SerializedName("user")
  private String user = null;
  @SerializedName("comment")
  private String comment = null;
  @SerializedName("closed")
  private Boolean closed = null;
  @SerializedName("date")
  private String date = null;

  /**
   * Sequence number of the comment/action in the query history
   **/
  @ApiModelProperty(value = "Sequence number of the comment/action in the query history")
  public Integer getSequence() {
    return sequence;
  }
  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  /**
   * Status of the query after this comment (e.g., Open, Closed)
   **/
  @ApiModelProperty(value = "Status of the query after this comment (e.g., Open, Closed)")
  public String getAnnotationStatus() {
    return annotationStatus;
  }
  public void setAnnotationStatus(String annotationStatus) {
    this.annotationStatus = annotationStatus;
  }

  /**
   * Username of the user who made the comment or action
   **/
  @ApiModelProperty(value = "Username of the user who made the comment or action")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }

  /**
   * Text of the comment
   **/
  @ApiModelProperty(value = "Text of the comment")
  public String getComment() {
    return comment;
  }
  public void setComment(String comment) {
    this.comment = comment;
  }

  /**
   * Whether the query was marked closed at this step
   **/
  @ApiModelProperty(value = "Whether the query was marked closed at this step")
  public Boolean getClosed() {
    return closed;
  }
  public void setClosed(Boolean closed) {
    this.closed = closed;
  }

  /**
   * Date of the comment or action
   **/
  @ApiModelProperty(value = "Date of the comment or action")
  public String getDate() {
    return date;
  }
  public void setDate(String date) {
    this.date = date;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryComment queryComment = (QueryComment) o;
    return (this.sequence == null ? queryComment.sequence == null : this.sequence.equals(queryComment.sequence)) &&
        (this.annotationStatus == null ? queryComment.annotationStatus == null : this.annotationStatus.equals(queryComment.annotationStatus)) &&
        (this.user == null ? queryComment.user == null : this.user.equals(queryComment.user)) &&
        (this.comment == null ? queryComment.comment == null : this.comment.equals(queryComment.comment)) &&
        (this.closed == null ? queryComment.closed == null : this.closed.equals(queryComment.closed)) &&
        (this.date == null ? queryComment.date == null : this.date.equals(queryComment.date));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sequence == null ? 0: this.sequence.hashCode());
    result = 31 * result + (this.annotationStatus == null ? 0: this.annotationStatus.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    result = 31 * result + (this.comment == null ? 0: this.comment.hashCode());
    result = 31 * result + (this.closed == null ? 0: this.closed.hashCode());
    result = 31 * result + (this.date == null ? 0: this.date.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryComment {\n");
    
    sb.append("  sequence: ").append(sequence).append("\n");
    sb.append("  annotationStatus: ").append(annotationStatus).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("  comment: ").append(comment).append("\n");
    sb.append("  closed: ").append(closed).append("\n");
    sb.append("  date: ").append(date).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
