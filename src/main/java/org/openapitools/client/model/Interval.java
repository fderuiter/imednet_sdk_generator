/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ComponentsSchemasIntervalFormsItem;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Interval {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("intervalId")
  private Integer intervalId = null;
  @SerializedName("intervalName")
  private String intervalName = null;
  @SerializedName("intervalDescription")
  private String intervalDescription = null;
  @SerializedName("intervalSequence")
  private Integer intervalSequence = null;
  @SerializedName("intervalGroupId")
  private Integer intervalGroupId = null;
  @SerializedName("intervalGroupName")
  private String intervalGroupName = null;
  @SerializedName("timeline")
  private String timeline = null;
  @SerializedName("definedUsingInterval")
  private String definedUsingInterval = null;
  @SerializedName("windowCalculationForm")
  private String windowCalculationForm = null;
  @SerializedName("windowCalculationDate")
  private String windowCalculationDate = null;
  @SerializedName("actualDateForm")
  private String actualDateForm = null;
  @SerializedName("actualDate")
  private String actualDate = null;
  @SerializedName("dueDateWillBeIn")
  private Integer dueDateWillBeIn = null;
  @SerializedName("negativeSlack")
  private Integer negativeSlack = null;
  @SerializedName("positiveSlack")
  private Integer positiveSlack = null;
  @SerializedName("eproGracePeriod")
  private Integer eproGracePeriod = null;
  @SerializedName("forms")
  private List<ComponentsSchemasIntervalFormsItem> forms = null;
  @SerializedName("disabled")
  private Boolean disabled = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Unique system identifier for the interval (visit definition)
   **/
  @ApiModelProperty(value = "Unique system identifier for the interval (visit definition)")
  public Integer getIntervalId() {
    return intervalId;
  }
  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Name of the interval (visit) as defined in the study
   **/
  @ApiModelProperty(value = "Name of the interval (visit) as defined in the study")
  public String getIntervalName() {
    return intervalName;
  }
  public void setIntervalName(String intervalName) {
    this.intervalName = intervalName;
  }

  /**
   * Description of the interval (visit)
   **/
  @ApiModelProperty(value = "Description of the interval (visit)")
  public String getIntervalDescription() {
    return intervalDescription;
  }
  public void setIntervalDescription(String intervalDescription) {
    this.intervalDescription = intervalDescription;
  }

  /**
   * Sequence number of the interval in the schedule
   **/
  @ApiModelProperty(value = "Sequence number of the interval in the schedule")
  public Integer getIntervalSequence() {
    return intervalSequence;
  }
  public void setIntervalSequence(Integer intervalSequence) {
    this.intervalSequence = intervalSequence;
  }

  /**
   * Identifier for the interval group (if intervals are grouped)
   **/
  @ApiModelProperty(value = "Identifier for the interval group (if intervals are grouped)")
  public Integer getIntervalGroupId() {
    return intervalGroupId;
  }
  public void setIntervalGroupId(Integer intervalGroupId) {
    this.intervalGroupId = intervalGroupId;
  }

  /**
   * Name of the interval group
   **/
  @ApiModelProperty(value = "Name of the interval group")
  public String getIntervalGroupName() {
    return intervalGroupName;
  }
  public void setIntervalGroupName(String intervalGroupName) {
    this.intervalGroupName = intervalGroupName;
  }

  /**
   * Type of interval visit window (e.g., None, Due Date, Start - End Date, Actual Date)
   **/
  @ApiModelProperty(value = "Type of interval visit window (e.g., None, Due Date, Start - End Date, Actual Date)")
  public String getTimeline() {
    return timeline;
  }
  public void setTimeline(String timeline) {
    this.timeline = timeline;
  }

  /**
   * Baseline interval used for calculating this interval’s dates
   **/
  @ApiModelProperty(value = "Baseline interval used for calculating this interval’s dates")
  public String getDefinedUsingInterval() {
    return definedUsingInterval;
  }
  public void setDefinedUsingInterval(String definedUsingInterval) {
    this.definedUsingInterval = definedUsingInterval;
  }

  /**
   * Baseline form (name) from which the calculation date is taken
   **/
  @ApiModelProperty(value = "Baseline form (name) from which the calculation date is taken")
  public String getWindowCalculationForm() {
    return windowCalculationForm;
  }
  public void setWindowCalculationForm(String windowCalculationForm) {
    this.windowCalculationForm = windowCalculationForm;
  }

  /**
   * Baseline field (variable name) from which the calculation date is taken
   **/
  @ApiModelProperty(value = "Baseline field (variable name) from which the calculation date is taken")
  public String getWindowCalculationDate() {
    return windowCalculationDate;
  }
  public void setWindowCalculationDate(String windowCalculationDate) {
    this.windowCalculationDate = windowCalculationDate;
  }

  /**
   * Form used to capture the actual date for this interval
   **/
  @ApiModelProperty(value = "Form used to capture the actual date for this interval")
  public String getActualDateForm() {
    return actualDateForm;
  }
  public void setActualDateForm(String actualDateForm) {
    this.actualDateForm = actualDateForm;
  }

  /**
   * Field (variable name) used to capture the actual date for this interval
   **/
  @ApiModelProperty(value = "Field (variable name) used to capture the actual date for this interval")
  public String getActualDate() {
    return actualDate;
  }
  public void setActualDate(String actualDate) {
    this.actualDate = actualDate;
  }

  /**
   * Number of days from the calculation date when the interval is due
   **/
  @ApiModelProperty(value = "Number of days from the calculation date when the interval is due")
  public Integer getDueDateWillBeIn() {
    return dueDateWillBeIn;
  }
  public void setDueDateWillBeIn(Integer dueDateWillBeIn) {
    this.dueDateWillBeIn = dueDateWillBeIn;
  }

  /**
   * Number of days before the due date that are allowed (negative window)
   **/
  @ApiModelProperty(value = "Number of days before the due date that are allowed (negative window)")
  public Integer getNegativeSlack() {
    return negativeSlack;
  }
  public void setNegativeSlack(Integer negativeSlack) {
    this.negativeSlack = negativeSlack;
  }

  /**
   * Number of days after the due date that are allowed (positive window)
   **/
  @ApiModelProperty(value = "Number of days after the due date that are allowed (positive window)")
  public Integer getPositiveSlack() {
    return positiveSlack;
  }
  public void setPositiveSlack(Integer positiveSlack) {
    this.positiveSlack = positiveSlack;
  }

  /**
   * Number of days of grace period for ePRO completion after due date
   **/
  @ApiModelProperty(value = "Number of days of grace period for ePRO completion after due date")
  public Integer getEproGracePeriod() {
    return eproGracePeriod;
  }
  public void setEproGracePeriod(Integer eproGracePeriod) {
    this.eproGracePeriod = eproGracePeriod;
  }

  /**
   * List of forms that are scheduled in this interval
   **/
  @ApiModelProperty(value = "List of forms that are scheduled in this interval")
  public List<ComponentsSchemasIntervalFormsItem> getForms() {
    return forms;
  }
  public void setForms(List<ComponentsSchemasIntervalFormsItem> forms) {
    this.forms = forms;
  }

  /**
   * Whether the interval is soft-deleted (disabled)
   **/
  @ApiModelProperty(value = "Whether the interval is soft-deleted (disabled)")
  public Boolean getDisabled() {
    return disabled;
  }
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  /**
   * Date when this interval was created
   **/
  @ApiModelProperty(value = "Date when this interval was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this interval was last modified
   **/
  @ApiModelProperty(value = "Date when this interval was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Interval interval = (Interval) o;
    return (this.studyKey == null ? interval.studyKey == null : this.studyKey.equals(interval.studyKey)) &&
        (this.intervalId == null ? interval.intervalId == null : this.intervalId.equals(interval.intervalId)) &&
        (this.intervalName == null ? interval.intervalName == null : this.intervalName.equals(interval.intervalName)) &&
        (this.intervalDescription == null ? interval.intervalDescription == null : this.intervalDescription.equals(interval.intervalDescription)) &&
        (this.intervalSequence == null ? interval.intervalSequence == null : this.intervalSequence.equals(interval.intervalSequence)) &&
        (this.intervalGroupId == null ? interval.intervalGroupId == null : this.intervalGroupId.equals(interval.intervalGroupId)) &&
        (this.intervalGroupName == null ? interval.intervalGroupName == null : this.intervalGroupName.equals(interval.intervalGroupName)) &&
        (this.timeline == null ? interval.timeline == null : this.timeline.equals(interval.timeline)) &&
        (this.definedUsingInterval == null ? interval.definedUsingInterval == null : this.definedUsingInterval.equals(interval.definedUsingInterval)) &&
        (this.windowCalculationForm == null ? interval.windowCalculationForm == null : this.windowCalculationForm.equals(interval.windowCalculationForm)) &&
        (this.windowCalculationDate == null ? interval.windowCalculationDate == null : this.windowCalculationDate.equals(interval.windowCalculationDate)) &&
        (this.actualDateForm == null ? interval.actualDateForm == null : this.actualDateForm.equals(interval.actualDateForm)) &&
        (this.actualDate == null ? interval.actualDate == null : this.actualDate.equals(interval.actualDate)) &&
        (this.dueDateWillBeIn == null ? interval.dueDateWillBeIn == null : this.dueDateWillBeIn.equals(interval.dueDateWillBeIn)) &&
        (this.negativeSlack == null ? interval.negativeSlack == null : this.negativeSlack.equals(interval.negativeSlack)) &&
        (this.positiveSlack == null ? interval.positiveSlack == null : this.positiveSlack.equals(interval.positiveSlack)) &&
        (this.eproGracePeriod == null ? interval.eproGracePeriod == null : this.eproGracePeriod.equals(interval.eproGracePeriod)) &&
        (this.forms == null ? interval.forms == null : this.forms.equals(interval.forms)) &&
        (this.disabled == null ? interval.disabled == null : this.disabled.equals(interval.disabled)) &&
        (this.dateCreated == null ? interval.dateCreated == null : this.dateCreated.equals(interval.dateCreated)) &&
        (this.dateModified == null ? interval.dateModified == null : this.dateModified.equals(interval.dateModified));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.intervalId == null ? 0: this.intervalId.hashCode());
    result = 31 * result + (this.intervalName == null ? 0: this.intervalName.hashCode());
    result = 31 * result + (this.intervalDescription == null ? 0: this.intervalDescription.hashCode());
    result = 31 * result + (this.intervalSequence == null ? 0: this.intervalSequence.hashCode());
    result = 31 * result + (this.intervalGroupId == null ? 0: this.intervalGroupId.hashCode());
    result = 31 * result + (this.intervalGroupName == null ? 0: this.intervalGroupName.hashCode());
    result = 31 * result + (this.timeline == null ? 0: this.timeline.hashCode());
    result = 31 * result + (this.definedUsingInterval == null ? 0: this.definedUsingInterval.hashCode());
    result = 31 * result + (this.windowCalculationForm == null ? 0: this.windowCalculationForm.hashCode());
    result = 31 * result + (this.windowCalculationDate == null ? 0: this.windowCalculationDate.hashCode());
    result = 31 * result + (this.actualDateForm == null ? 0: this.actualDateForm.hashCode());
    result = 31 * result + (this.actualDate == null ? 0: this.actualDate.hashCode());
    result = 31 * result + (this.dueDateWillBeIn == null ? 0: this.dueDateWillBeIn.hashCode());
    result = 31 * result + (this.negativeSlack == null ? 0: this.negativeSlack.hashCode());
    result = 31 * result + (this.positiveSlack == null ? 0: this.positiveSlack.hashCode());
    result = 31 * result + (this.eproGracePeriod == null ? 0: this.eproGracePeriod.hashCode());
    result = 31 * result + (this.forms == null ? 0: this.forms.hashCode());
    result = 31 * result + (this.disabled == null ? 0: this.disabled.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Interval {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  intervalId: ").append(intervalId).append("\n");
    sb.append("  intervalName: ").append(intervalName).append("\n");
    sb.append("  intervalDescription: ").append(intervalDescription).append("\n");
    sb.append("  intervalSequence: ").append(intervalSequence).append("\n");
    sb.append("  intervalGroupId: ").append(intervalGroupId).append("\n");
    sb.append("  intervalGroupName: ").append(intervalGroupName).append("\n");
    sb.append("  timeline: ").append(timeline).append("\n");
    sb.append("  definedUsingInterval: ").append(definedUsingInterval).append("\n");
    sb.append("  windowCalculationForm: ").append(windowCalculationForm).append("\n");
    sb.append("  windowCalculationDate: ").append(windowCalculationDate).append("\n");
    sb.append("  actualDateForm: ").append(actualDateForm).append("\n");
    sb.append("  actualDate: ").append(actualDate).append("\n");
    sb.append("  dueDateWillBeIn: ").append(dueDateWillBeIn).append("\n");
    sb.append("  negativeSlack: ").append(negativeSlack).append("\n");
    sb.append("  positiveSlack: ").append(positiveSlack).append("\n");
    sb.append("  eproGracePeriod: ").append(eproGracePeriod).append("\n");
    sb.append("  forms: ").append(forms).append("\n");
    sb.append("  disabled: ").append(disabled).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
