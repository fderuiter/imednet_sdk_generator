/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;




public class Sort  {
  
 /**
   * Name of the property by which the result is sorted
  **/
  private String property;

public enum DirectionEnum {

    ASC(String.valueOf("ASC")), DESC(String.valueOf("DESC"));

    String value;

    DirectionEnum (String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

}

 /**
   * Sort direction (ASC or DESC)
  **/
  private DirectionEnum direction;

 /**
   * Name of the property by which the result is sorted
   * @return property
  **/
  public String getProperty() {
    return property;
  }

  /**
    * Set property
  **/
  public void setProperty(String property) {
    this.property = property;
  }

  public Sort property(String property) {
    this.property = property;
    return this;
  }

 /**
   * Sort direction (ASC or DESC)
   * @return direction
  **/
  public DirectionEnum getDirection() {
    return direction;
  }

  /**
    * Set direction
  **/
  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public Sort direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sort {\n");
    
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

