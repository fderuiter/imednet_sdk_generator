/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Metadata;
import org.openapitools.client.model.Pagination;
import org.openapitools.client.model.Visit;




public class VisitList  {
  
  private Metadata metadata;

  private Pagination pagination;

  private List<Visit> data = null;

 /**
   * Get metadata
   * @return metadata
  **/
  public Metadata getMetadata() {
    return metadata;
  }

  /**
    * Set metadata
  **/
  public void setMetadata(Metadata metadata) {
    this.metadata = metadata;
  }

  public VisitList metadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

 /**
   * Get pagination
   * @return pagination
  **/
  public Pagination getPagination() {
    return pagination;
  }

  /**
    * Set pagination
  **/
  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }

  public VisitList pagination(Pagination pagination) {
    this.pagination = pagination;
    return this;
  }

 /**
   * Get data
   * @return data
  **/
  public List<Visit> getData() {
    return data;
  }

  /**
    * Set data
  **/
  public void setData(List<Visit> data) {
    this.data = data;
  }

  public VisitList data(List<Visit> data) {
    this.data = data;
    return this;
  }

  public VisitList addDataItem(Visit dataItem) {
    this.data.add(dataItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VisitList {\n");
    
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

