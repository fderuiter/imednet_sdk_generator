/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Coding {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("siteName")
  private String siteName = null;
  @SerializedName("siteId")
  private Integer siteId = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("formId")
  private Integer formId = null;
  @SerializedName("formName")
  private String formName = null;
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("revision")
  private Integer revision = null;
  @SerializedName("recordId")
  private Integer recordId = null;
  @SerializedName("variable")
  private String variable = null;
  @SerializedName("value")
  private String value = null;
  @SerializedName("codingId")
  private Integer codingId = null;
  @SerializedName("code")
  private String code = null;
  @SerializedName("codedBy")
  private String codedBy = null;
  @SerializedName("reason")
  private String reason = null;
  @SerializedName("dictionaryName")
  private String dictionaryName = null;
  @SerializedName("dictionaryVersion")
  private String dictionaryVersion = null;
  @SerializedName("dateCoded")
  private String dateCoded = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Name of the site associated with the coded data
   **/
  @ApiModelProperty(value = "Name of the site associated with the coded data")
  public String getSiteName() {
    return siteName;
  }
  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  /**
   * Site ID associated with the coded data
   **/
  @ApiModelProperty(value = "Site ID associated with the coded data")
  public Integer getSiteId() {
    return siteId;
  }
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  /**
   * Subject ID associated with the coded data
   **/
  @ApiModelProperty(value = "Subject ID associated with the coded data")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Subject key (display ID) associated with the coded data
   **/
  @ApiModelProperty(value = "Subject key (display ID) associated with the coded data")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Form ID where the coded data originates
   **/
  @ApiModelProperty(value = "Form ID where the coded data originates")
  public Integer getFormId() {
    return formId;
  }
  public void setFormId(Integer formId) {
    this.formId = formId;
  }

  /**
   * Name of the form where the coded data originates
   **/
  @ApiModelProperty(value = "Name of the form where the coded data originates")
  public String getFormName() {
    return formName;
  }
  public void setFormName(String formName) {
    this.formName = formName;
  }

  /**
   * Form key where the coded data originates
   **/
  @ApiModelProperty(value = "Form key where the coded data originates")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Revision number of the coding entry
   **/
  @ApiModelProperty(value = "Revision number of the coding entry")
  public Integer getRevision() {
    return revision;
  }
  public void setRevision(Integer revision) {
    this.revision = revision;
  }

  /**
   * Record ID associated with the coded data
   **/
  @ApiModelProperty(value = "Record ID associated with the coded data")
  public Integer getRecordId() {
    return recordId;
  }
  public void setRecordId(Integer recordId) {
    this.recordId = recordId;
  }

  /**
   * Variable name (field) that was coded
   **/
  @ApiModelProperty(value = "Variable name (field) that was coded")
  public String getVariable() {
    return variable;
  }
  public void setVariable(String variable) {
    this.variable = variable;
  }

  /**
   * Original value entered that required coding
   **/
  @ApiModelProperty(value = "Original value entered that required coding")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }

  /**
   * Mednet coding ID
   **/
  @ApiModelProperty(value = "Mednet coding ID")
  public Integer getCodingId() {
    return codingId;
  }
  public void setCodingId(Integer codingId) {
    this.codingId = codingId;
  }

  /**
   * Standardized code assigned (e.g., dictionary term)
   **/
  @ApiModelProperty(value = "Standardized code assigned (e.g., dictionary term)")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * Name of the user who performed the coding
   **/
  @ApiModelProperty(value = "Name of the user who performed the coding")
  public String getCodedBy() {
    return codedBy;
  }
  public void setCodedBy(String codedBy) {
    this.codedBy = codedBy;
  }

  /**
   * Reason for coding or any notes on changes
   **/
  @ApiModelProperty(value = "Reason for coding or any notes on changes")
  public String getReason() {
    return reason;
  }
  public void setReason(String reason) {
    this.reason = reason;
  }

  /**
   * Name of the dictionary used (e.g., MedDRA)
   **/
  @ApiModelProperty(value = "Name of the dictionary used (e.g., MedDRA)")
  public String getDictionaryName() {
    return dictionaryName;
  }
  public void setDictionaryName(String dictionaryName) {
    this.dictionaryName = dictionaryName;
  }

  /**
   * Version of the dictionary used
   **/
  @ApiModelProperty(value = "Version of the dictionary used")
  public String getDictionaryVersion() {
    return dictionaryVersion;
  }
  public void setDictionaryVersion(String dictionaryVersion) {
    this.dictionaryVersion = dictionaryVersion;
  }

  /**
   * Date when the coding was performed
   **/
  @ApiModelProperty(value = "Date when the coding was performed")
  public String getDateCoded() {
    return dateCoded;
  }
  public void setDateCoded(String dateCoded) {
    this.dateCoded = dateCoded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Coding coding = (Coding) o;
    return (this.studyKey == null ? coding.studyKey == null : this.studyKey.equals(coding.studyKey)) &&
        (this.siteName == null ? coding.siteName == null : this.siteName.equals(coding.siteName)) &&
        (this.siteId == null ? coding.siteId == null : this.siteId.equals(coding.siteId)) &&
        (this.subjectId == null ? coding.subjectId == null : this.subjectId.equals(coding.subjectId)) &&
        (this.subjectKey == null ? coding.subjectKey == null : this.subjectKey.equals(coding.subjectKey)) &&
        (this.formId == null ? coding.formId == null : this.formId.equals(coding.formId)) &&
        (this.formName == null ? coding.formName == null : this.formName.equals(coding.formName)) &&
        (this.formKey == null ? coding.formKey == null : this.formKey.equals(coding.formKey)) &&
        (this.revision == null ? coding.revision == null : this.revision.equals(coding.revision)) &&
        (this.recordId == null ? coding.recordId == null : this.recordId.equals(coding.recordId)) &&
        (this.variable == null ? coding.variable == null : this.variable.equals(coding.variable)) &&
        (this.value == null ? coding.value == null : this.value.equals(coding.value)) &&
        (this.codingId == null ? coding.codingId == null : this.codingId.equals(coding.codingId)) &&
        (this.code == null ? coding.code == null : this.code.equals(coding.code)) &&
        (this.codedBy == null ? coding.codedBy == null : this.codedBy.equals(coding.codedBy)) &&
        (this.reason == null ? coding.reason == null : this.reason.equals(coding.reason)) &&
        (this.dictionaryName == null ? coding.dictionaryName == null : this.dictionaryName.equals(coding.dictionaryName)) &&
        (this.dictionaryVersion == null ? coding.dictionaryVersion == null : this.dictionaryVersion.equals(coding.dictionaryVersion)) &&
        (this.dateCoded == null ? coding.dateCoded == null : this.dateCoded.equals(coding.dateCoded));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.siteName == null ? 0: this.siteName.hashCode());
    result = 31 * result + (this.siteId == null ? 0: this.siteId.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.formId == null ? 0: this.formId.hashCode());
    result = 31 * result + (this.formName == null ? 0: this.formName.hashCode());
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.revision == null ? 0: this.revision.hashCode());
    result = 31 * result + (this.recordId == null ? 0: this.recordId.hashCode());
    result = 31 * result + (this.variable == null ? 0: this.variable.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    result = 31 * result + (this.codingId == null ? 0: this.codingId.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.codedBy == null ? 0: this.codedBy.hashCode());
    result = 31 * result + (this.reason == null ? 0: this.reason.hashCode());
    result = 31 * result + (this.dictionaryName == null ? 0: this.dictionaryName.hashCode());
    result = 31 * result + (this.dictionaryVersion == null ? 0: this.dictionaryVersion.hashCode());
    result = 31 * result + (this.dateCoded == null ? 0: this.dateCoded.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Coding {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  siteName: ").append(siteName).append("\n");
    sb.append("  siteId: ").append(siteId).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  formId: ").append(formId).append("\n");
    sb.append("  formName: ").append(formName).append("\n");
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  revision: ").append(revision).append("\n");
    sb.append("  recordId: ").append(recordId).append("\n");
    sb.append("  variable: ").append(variable).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("  codingId: ").append(codingId).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("  codedBy: ").append(codedBy).append("\n");
    sb.append("  reason: ").append(reason).append("\n");
    sb.append("  dictionaryName: ").append(dictionaryName).append("\n");
    sb.append("  dictionaryVersion: ").append(dictionaryVersion).append("\n");
    sb.append("  dateCoded: ").append(dateCoded).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
