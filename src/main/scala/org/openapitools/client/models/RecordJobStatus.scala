/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param jobId Unique job identifier
  * @param batchId Batch ID used to track the job (identical to jobId in most cases)
  * @param state Current state of the job (e.g., created, completed)
  */
case class RecordJobStatus(
    jobId: Option[String] = None,
    batchId: Option[String] = None,
    state: Option[String] = None
)
  
object RecordJobStatus {
  given encoderRecordJobStatus: Encoder[RecordJobStatus] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.jobId.map(v => "jobId" -> v.asJson),
        t.batchId.map(v => "batchId" -> v.asJson),
        t.state.map(v => "state" -> v.asJson)
      ).flatten
    }
  }
  given decoderRecordJobStatus: Decoder[RecordJobStatus] = Decoder.instance { c =>
    for {
      jobId <- c.downField("jobId").as[Option[String]]
      batchId <- c.downField("batchId").as[Option[String]]
      state <- c.downField("state").as[Option[String]]
    } yield RecordJobStatus(
      jobId = jobId,
      batchId = batchId,
      state = state
    )
  }
}

