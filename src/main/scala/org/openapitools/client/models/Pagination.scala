/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param currentPage Current index page returned
  * @param size Number of items per page returned
  * @param totalPages Total number of pages available
  * @param totalElements Total number of elements (items) available
  * @param sort 
  */
case class Pagination(
    currentPage: Option[Int] = None,
    size: Option[Int] = None,
    totalPages: Option[Int] = None,
    totalElements: Option[Int] = None,
    sort: Option[Seq[Sort]] = None
)
  
object Pagination {
  given encoderPagination: Encoder[Pagination] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.currentPage.map(v => "currentPage" -> v.asJson),
        t.size.map(v => "size" -> v.asJson),
        t.totalPages.map(v => "totalPages" -> v.asJson),
        t.totalElements.map(v => "totalElements" -> v.asJson),
        t.sort.map(v => "sort" -> v.asJson)
      ).flatten
    }
  }
  given decoderPagination: Decoder[Pagination] = Decoder.instance { c =>
    for {
      currentPage <- c.downField("currentPage").as[Option[Int]]
      size <- c.downField("size").as[Option[Int]]
      totalPages <- c.downField("totalPages").as[Option[Int]]
      totalElements <- c.downField("totalElements").as[Option[Int]]
      sort <- c.downField("sort").as[Option[Seq[Sort]]]
    } yield Pagination(
      currentPage = currentPage,
      size = size,
      totalPages = totalPages,
      totalElements = totalElements,
      sort = sort
    )
  }
}

