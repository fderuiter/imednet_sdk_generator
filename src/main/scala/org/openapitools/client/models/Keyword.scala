/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param keywordName Name of the keyword
  * @param keywordKey Key of the keyword (short code)
  * @param keywordId Internal keyword ID
  * @param dateAdded Date when this keyword was added
  */
case class Keyword(
    keywordName: Option[String] = None,
    keywordKey: Option[String] = None,
    keywordId: Option[Int] = None,
    dateAdded: Option[String] = None
)
  
object Keyword {
  given encoderKeyword: Encoder[Keyword] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.keywordName.map(v => "keywordName" -> v.asJson),
        t.keywordKey.map(v => "keywordKey" -> v.asJson),
        t.keywordId.map(v => "keywordId" -> v.asJson),
        t.dateAdded.map(v => "dateAdded" -> v.asJson)
      ).flatten
    }
  }
  given decoderKeyword: Decoder[Keyword] = Decoder.instance { c =>
    for {
      keywordName <- c.downField("keywordName").as[Option[String]]
      keywordKey <- c.downField("keywordKey").as[Option[String]]
      keywordId <- c.downField("keywordId").as[Option[Int]]
      dateAdded <- c.downField("dateAdded").as[Option[String]]
    } yield Keyword(
      keywordName = keywordName,
      keywordKey = keywordKey,
      keywordId = keywordId,
      dateAdded = dateAdded
    )
  }
}

