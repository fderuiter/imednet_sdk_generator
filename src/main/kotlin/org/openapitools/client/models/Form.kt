/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param studyKey Unique study key
 * @param formId Mednet Form ID
 * @param formKey User-defined form key
 * @param formName Name of the form (eCRF)
 * @param formType Type of the form (e.g., Subject or Site)
 * @param revision Number of modifications (revisions) of the form metadata
 * @param embeddedLog Whether the form has an embedded log
 * @param enforceOwnership Whether the form enforces record ownership
 * @param userAgreement Whether the form requires a user agreement
 * @param subjectRecordReport Whether the form is marked as a subject record report
 * @param unscheduledVisit Whether the form is included in unscheduled visits
 * @param otherForms Whether the form is included in Other Forms category
 * @param eproForm Whether the form is an ePRO (electronic patient reported outcome) form
 * @param allowCopy Whether the form allows copying of data
 * @param disabled Whether the form is soft-deleted (disabled)
 * @param dateCreated Date when this form was created
 * @param dateModified Date when this form was last modified
 */


data class Form (

    /* Unique study key */
    @Json(name = "studyKey")
    val studyKey: kotlin.String? = null,

    /* Mednet Form ID */
    @Json(name = "formId")
    val formId: kotlin.Int? = null,

    /* User-defined form key */
    @Json(name = "formKey")
    val formKey: kotlin.String? = null,

    /* Name of the form (eCRF) */
    @Json(name = "formName")
    val formName: kotlin.String? = null,

    /* Type of the form (e.g., Subject or Site) */
    @Json(name = "formType")
    val formType: kotlin.String? = null,

    /* Number of modifications (revisions) of the form metadata */
    @Json(name = "revision")
    val revision: kotlin.Int? = null,

    /* Whether the form has an embedded log */
    @Json(name = "embeddedLog")
    val embeddedLog: kotlin.Boolean? = null,

    /* Whether the form enforces record ownership */
    @Json(name = "enforceOwnership")
    val enforceOwnership: kotlin.Boolean? = null,

    /* Whether the form requires a user agreement */
    @Json(name = "userAgreement")
    val userAgreement: kotlin.Boolean? = null,

    /* Whether the form is marked as a subject record report */
    @Json(name = "subjectRecordReport")
    val subjectRecordReport: kotlin.Boolean? = null,

    /* Whether the form is included in unscheduled visits */
    @Json(name = "unscheduledVisit")
    val unscheduledVisit: kotlin.Boolean? = null,

    /* Whether the form is included in Other Forms category */
    @Json(name = "otherForms")
    val otherForms: kotlin.Boolean? = null,

    /* Whether the form is an ePRO (electronic patient reported outcome) form */
    @Json(name = "eproForm")
    val eproForm: kotlin.Boolean? = null,

    /* Whether the form allows copying of data */
    @Json(name = "allowCopy")
    val allowCopy: kotlin.Boolean? = null,

    /* Whether the form is soft-deleted (disabled) */
    @Json(name = "disabled")
    val disabled: kotlin.Boolean? = null,

    /* Date when this form was created */
    @Json(name = "dateCreated")
    val dateCreated: kotlin.String? = null,

    /* Date when this form was last modified */
    @Json(name = "dateModified")
    val dateModified: kotlin.String? = null

) {


}

