/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.QueryComment

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param studyKey Unique study key
 * @param subjectId Mednet subject ID associated with the query (if applicable)
 * @param subjectOid Client-assigned subject OID (if applicable)
 * @param annotationType Category/type of the query (e.g., subject, record, question)
 * @param annotationId Unique system identifier for the query
 * @param type System text identifier for the query type/location (subject, record, question)
 * @param description Description of the query (e.g., reason or context)
 * @param recordId Record ID associated with the query (if applicable)
 * @param variable Variable name (field) associated with the query (if applicable)
 * @param subjectKey Subject display ID associated with the query (if applicable)
 * @param dateCreated Date when the query was created
 * @param dateModified Date when the query was last modified
 * @param queryComments History of comments/actions on the query
 */


data class Query (

    /* Unique study key */
    @Json(name = "studyKey")
    val studyKey: kotlin.String? = null,

    /* Mednet subject ID associated with the query (if applicable) */
    @Json(name = "subjectId")
    val subjectId: kotlin.Int? = null,

    /* Client-assigned subject OID (if applicable) */
    @Json(name = "subjectOid")
    val subjectOid: kotlin.String? = null,

    /* Category/type of the query (e.g., subject, record, question) */
    @Json(name = "annotationType")
    val annotationType: kotlin.String? = null,

    /* Unique system identifier for the query */
    @Json(name = "annotationId")
    val annotationId: kotlin.Int? = null,

    /* System text identifier for the query type/location (subject, record, question) */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* Description of the query (e.g., reason or context) */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Record ID associated with the query (if applicable) */
    @Json(name = "recordId")
    val recordId: kotlin.Int? = null,

    /* Variable name (field) associated with the query (if applicable) */
    @Json(name = "variable")
    val variable: kotlin.String? = null,

    /* Subject display ID associated with the query (if applicable) */
    @Json(name = "subjectKey")
    val subjectKey: kotlin.String? = null,

    /* Date when the query was created */
    @Json(name = "dateCreated")
    val dateCreated: kotlin.String? = null,

    /* Date when the query was last modified */
    @Json(name = "dateModified")
    val dateModified: kotlin.String? = null,

    /* History of comments/actions on the query */
    @Json(name = "queryComments")
    val queryComments: kotlin.collections.List<QueryComment>? = null

) {


}

