# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RecordRevision

    RecordRevision(;
        studyKey=nothing,
        recordRevisionId=nothing,
        recordId=nothing,
        recordOid=nothing,
        recordRevision=nothing,
        dataRevision=nothing,
        recordStatus=nothing,
        subjectId=nothing,
        subjectOid=nothing,
        subjectKey=nothing,
        siteId=nothing,
        formKey=nothing,
        intervalId=nothing,
        role=nothing,
        user=nothing,
        reasonForChange=nothing,
        deleted=nothing,
        dateCreated=nothing,
    )

    - studyKey::String : Unique study key
    - recordRevisionId::Int64 : Unique system identifier for the record revision
    - recordId::Int64 : Unique system identifier of the related record
    - recordOid::String : Client-assigned record OID (if any)
    - recordRevision::Int64 : Revision number of the record (version of the record status)
    - dataRevision::Int64 : Revision number of the data within the record
    - recordStatus::String : Status of the record at this revision (user-defined status label)
    - subjectId::Int64 : Mednet subject ID related to the record
    - subjectOid::String : Client-assigned subject OID related to the record
    - subjectKey::String : Subject display ID related to the record
    - siteId::Int64 : Site ID related to the record
    - formKey::String : Form key of the form that the record belongs to
    - intervalId::Int64 : Interval ID (visit definition) related to the record
    - role::String : Role name of the user who saved the record revision
    - user::String : Username of the user who saved the record revision
    - reasonForChange::String : Reason for change, if provided (for audit trail)
    - deleted::Bool : Whether the record was deleted in this revision
    - dateCreated::String : Date when this record revision was created
"""
Base.@kwdef mutable struct RecordRevision <: OpenAPI.APIModel
    studyKey::Union{Nothing, String} = nothing
    recordRevisionId::Union{Nothing, Int64} = nothing
    recordId::Union{Nothing, Int64} = nothing
    recordOid::Union{Nothing, String} = nothing
    recordRevision::Union{Nothing, Int64} = nothing
    dataRevision::Union{Nothing, Int64} = nothing
    recordStatus::Union{Nothing, String} = nothing
    subjectId::Union{Nothing, Int64} = nothing
    subjectOid::Union{Nothing, String} = nothing
    subjectKey::Union{Nothing, String} = nothing
    siteId::Union{Nothing, Int64} = nothing
    formKey::Union{Nothing, String} = nothing
    intervalId::Union{Nothing, Int64} = nothing
    role::Union{Nothing, String} = nothing
    user::Union{Nothing, String} = nothing
    reasonForChange::Union{Nothing, String} = nothing
    deleted::Union{Nothing, Bool} = nothing
    dateCreated::Union{Nothing, String} = nothing

    function RecordRevision(studyKey, recordRevisionId, recordId, recordOid, recordRevision, dataRevision, recordStatus, subjectId, subjectOid, subjectKey, siteId, formKey, intervalId, role, user, reasonForChange, deleted, dateCreated, )
        o = new(studyKey, recordRevisionId, recordId, recordOid, recordRevision, dataRevision, recordStatus, subjectId, subjectOid, subjectKey, siteId, formKey, intervalId, role, user, reasonForChange, deleted, dateCreated, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RecordRevision

const _property_types_RecordRevision = Dict{Symbol,String}(Symbol("studyKey")=>"String", Symbol("recordRevisionId")=>"Int64", Symbol("recordId")=>"Int64", Symbol("recordOid")=>"String", Symbol("recordRevision")=>"Int64", Symbol("dataRevision")=>"Int64", Symbol("recordStatus")=>"String", Symbol("subjectId")=>"Int64", Symbol("subjectOid")=>"String", Symbol("subjectKey")=>"String", Symbol("siteId")=>"Int64", Symbol("formKey")=>"String", Symbol("intervalId")=>"Int64", Symbol("role")=>"String", Symbol("user")=>"String", Symbol("reasonForChange")=>"String", Symbol("deleted")=>"Bool", Symbol("dateCreated")=>"String", )
OpenAPI.property_type(::Type{ RecordRevision }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RecordRevision[name]))}

function OpenAPI.check_required(o::RecordRevision)
    true
end

function OpenAPI.validate_properties(o::RecordRevision)
    OpenAPI.validate_property(RecordRevision, Symbol("studyKey"), o.studyKey)
    OpenAPI.validate_property(RecordRevision, Symbol("recordRevisionId"), o.recordRevisionId)
    OpenAPI.validate_property(RecordRevision, Symbol("recordId"), o.recordId)
    OpenAPI.validate_property(RecordRevision, Symbol("recordOid"), o.recordOid)
    OpenAPI.validate_property(RecordRevision, Symbol("recordRevision"), o.recordRevision)
    OpenAPI.validate_property(RecordRevision, Symbol("dataRevision"), o.dataRevision)
    OpenAPI.validate_property(RecordRevision, Symbol("recordStatus"), o.recordStatus)
    OpenAPI.validate_property(RecordRevision, Symbol("subjectId"), o.subjectId)
    OpenAPI.validate_property(RecordRevision, Symbol("subjectOid"), o.subjectOid)
    OpenAPI.validate_property(RecordRevision, Symbol("subjectKey"), o.subjectKey)
    OpenAPI.validate_property(RecordRevision, Symbol("siteId"), o.siteId)
    OpenAPI.validate_property(RecordRevision, Symbol("formKey"), o.formKey)
    OpenAPI.validate_property(RecordRevision, Symbol("intervalId"), o.intervalId)
    OpenAPI.validate_property(RecordRevision, Symbol("role"), o.role)
    OpenAPI.validate_property(RecordRevision, Symbol("user"), o.user)
    OpenAPI.validate_property(RecordRevision, Symbol("reasonForChange"), o.reasonForChange)
    OpenAPI.validate_property(RecordRevision, Symbol("deleted"), o.deleted)
    OpenAPI.validate_property(RecordRevision, Symbol("dateCreated"), o.dateCreated)
end

function OpenAPI.validate_property(::Type{ RecordRevision }, name::Symbol, val)


















end
