# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""components_schemas_RecordCreateRequest_item

    ComponentsSchemasRecordCreateRequestItem(;
        formKey=nothing,
        formId=nothing,
        siteName=nothing,
        siteId=nothing,
        subjectKey=nothing,
        subjectId=nothing,
        subjectOid=nothing,
        intervalName=nothing,
        intervalId=nothing,
        recordId=nothing,
        recordOid=nothing,
        data=nothing,
    )

    - formKey::String : Form key identifying the eCRF to create or update
    - formId::Int64 : Form ID identifying the eCRF to create or update (alternative to formKey)
    - siteName::String : Name of the site where the record should be created (for new subject registration)
    - siteId::Int64 : Site ID for the record (alternative to siteName)
    - subjectKey::String : Subject identifier (display ID) for which to create or update the record
    - subjectId::Int64 : Subject ID for which to create or update the record (alternative to subjectKey)
    - subjectOid::String : Subject OID for which to create or update the record (alternative to subjectKey)
    - intervalName::String : Name of the interval (visit) for a scheduled record update
    - intervalId::Int64 : Interval ID for a scheduled record update (alternative to intervalName)
    - recordId::Int64 : Record ID for updating an existing unscheduled record (if applicable)
    - recordOid::String : Record OID for updating an existing unscheduled record (if applicable)
    - data::Dict{String, Any} : Key-value pairs of field names and values for the record data
"""
Base.@kwdef mutable struct ComponentsSchemasRecordCreateRequestItem <: OpenAPI.APIModel
    formKey::Union{Nothing, String} = nothing
    formId::Union{Nothing, Int64} = nothing
    siteName::Union{Nothing, String} = nothing
    siteId::Union{Nothing, Int64} = nothing
    subjectKey::Union{Nothing, String} = nothing
    subjectId::Union{Nothing, Int64} = nothing
    subjectOid::Union{Nothing, String} = nothing
    intervalName::Union{Nothing, String} = nothing
    intervalId::Union{Nothing, Int64} = nothing
    recordId::Union{Nothing, Int64} = nothing
    recordOid::Union{Nothing, String} = nothing
    data::Union{Nothing, Dict{String, Any}} = nothing

    function ComponentsSchemasRecordCreateRequestItem(formKey, formId, siteName, siteId, subjectKey, subjectId, subjectOid, intervalName, intervalId, recordId, recordOid, data, )
        o = new(formKey, formId, siteName, siteId, subjectKey, subjectId, subjectOid, intervalName, intervalId, recordId, recordOid, data, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ComponentsSchemasRecordCreateRequestItem

const _property_types_ComponentsSchemasRecordCreateRequestItem = Dict{Symbol,String}(Symbol("formKey")=>"String", Symbol("formId")=>"Int64", Symbol("siteName")=>"String", Symbol("siteId")=>"Int64", Symbol("subjectKey")=>"String", Symbol("subjectId")=>"Int64", Symbol("subjectOid")=>"String", Symbol("intervalName")=>"String", Symbol("intervalId")=>"Int64", Symbol("recordId")=>"Int64", Symbol("recordOid")=>"String", Symbol("data")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ ComponentsSchemasRecordCreateRequestItem }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ComponentsSchemasRecordCreateRequestItem[name]))}

function OpenAPI.check_required(o::ComponentsSchemasRecordCreateRequestItem)
    o.formKey === nothing && (return false)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::ComponentsSchemasRecordCreateRequestItem)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("formKey"), o.formKey)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("formId"), o.formId)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("siteName"), o.siteName)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("siteId"), o.siteId)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("subjectKey"), o.subjectKey)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("subjectId"), o.subjectId)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("subjectOid"), o.subjectOid)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("intervalName"), o.intervalName)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("intervalId"), o.intervalId)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("recordId"), o.recordId)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("recordOid"), o.recordOid)
    OpenAPI.validate_property(ComponentsSchemasRecordCreateRequestItem, Symbol("data"), o.data)
end

function OpenAPI.validate_property(::Type{ ComponentsSchemasRecordCreateRequestItem }, name::Symbol, val)












end
