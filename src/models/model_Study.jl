# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Study

    Study(;
        sponsorKey=nothing,
        studyKey=nothing,
        studyId=nothing,
        studyName=nothing,
        studyDescription=nothing,
        studyType=nothing,
        dateCreated=nothing,
        dateModified=nothing,
    )

    - sponsorKey::String : Sponsor key that this study belongs to
    - studyKey::String : Unique study key
    - studyId::Int64 : Mednet study ID (internal numeric identifier)
    - studyName::String : Name of the study
    - studyDescription::String : Description of the study
    - studyType::String : Type of study (e.g., STUDY)
    - dateCreated::String : Date when the study record was created
    - dateModified::String : Date when the study record was last modified
"""
Base.@kwdef mutable struct Study <: OpenAPI.APIModel
    sponsorKey::Union{Nothing, String} = nothing
    studyKey::Union{Nothing, String} = nothing
    studyId::Union{Nothing, Int64} = nothing
    studyName::Union{Nothing, String} = nothing
    studyDescription::Union{Nothing, String} = nothing
    studyType::Union{Nothing, String} = nothing
    dateCreated::Union{Nothing, String} = nothing
    dateModified::Union{Nothing, String} = nothing

    function Study(sponsorKey, studyKey, studyId, studyName, studyDescription, studyType, dateCreated, dateModified, )
        o = new(sponsorKey, studyKey, studyId, studyName, studyDescription, studyType, dateCreated, dateModified, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type Study

const _property_types_Study = Dict{Symbol,String}(Symbol("sponsorKey")=>"String", Symbol("studyKey")=>"String", Symbol("studyId")=>"Int64", Symbol("studyName")=>"String", Symbol("studyDescription")=>"String", Symbol("studyType")=>"String", Symbol("dateCreated")=>"String", Symbol("dateModified")=>"String", )
OpenAPI.property_type(::Type{ Study }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Study[name]))}

function OpenAPI.check_required(o::Study)
    true
end

function OpenAPI.validate_properties(o::Study)
    OpenAPI.validate_property(Study, Symbol("sponsorKey"), o.sponsorKey)
    OpenAPI.validate_property(Study, Symbol("studyKey"), o.studyKey)
    OpenAPI.validate_property(Study, Symbol("studyId"), o.studyId)
    OpenAPI.validate_property(Study, Symbol("studyName"), o.studyName)
    OpenAPI.validate_property(Study, Symbol("studyDescription"), o.studyDescription)
    OpenAPI.validate_property(Study, Symbol("studyType"), o.studyType)
    OpenAPI.validate_property(Study, Symbol("dateCreated"), o.dateCreated)
    OpenAPI.validate_property(Study, Symbol("dateModified"), o.dateModified)
end

function OpenAPI.validate_property(::Type{ Study }, name::Symbol, val)








end
