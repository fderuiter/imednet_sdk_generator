# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""QueryList

    QueryList(;
        metadata=nothing,
        pagination=nothing,
        data=nothing,
    )

    - metadata::Metadata
    - pagination::Pagination
    - data::Vector{Query}
"""
Base.@kwdef mutable struct QueryList <: OpenAPI.APIModel
    metadata = nothing # spec type: Union{ Nothing, Metadata }
    pagination = nothing # spec type: Union{ Nothing, Pagination }
    data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Query} }

    function QueryList(metadata, pagination, data, )
        o = new(metadata, pagination, data, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type QueryList

const _property_types_QueryList = Dict{Symbol,String}(Symbol("metadata")=>"Metadata", Symbol("pagination")=>"Pagination", Symbol("data")=>"Vector{Query}", )
OpenAPI.property_type(::Type{ QueryList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QueryList[name]))}

function OpenAPI.check_required(o::QueryList)
    true
end

function OpenAPI.validate_properties(o::QueryList)
    OpenAPI.validate_property(QueryList, Symbol("metadata"), o.metadata)
    OpenAPI.validate_property(QueryList, Symbol("pagination"), o.pagination)
    OpenAPI.validate_property(QueryList, Symbol("data"), o.data)
end

function OpenAPI.validate_property(::Type{ QueryList }, name::Symbol, val)



end
