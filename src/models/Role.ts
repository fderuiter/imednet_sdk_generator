// tslint:disable
/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Role
 */
export interface Role  {
    /**
     * Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond])
     * @type {Array<number>}
     * @memberof Role
     */
    dateCreated?: Array<number>;
    /**
     * Timestamp when the role assignment was last modified
     * @type {Array<number>}
     * @memberof Role
     */
    dateModified?: Array<number>;
    /**
     * Unique role ID (UUID)
     * @type {string}
     * @memberof Role
     */
    roleId?: string;
    /**
     * Community ID or level associated with the role
     * @type {number}
     * @memberof Role
     */
    communityId?: number;
    /**
     * Name of the role
     * @type {string}
     * @memberof Role
     */
    name?: string;
    /**
     * Description of the role
     * @type {string}
     * @memberof Role
     */
    description?: string;
    /**
     * Role level or hierarchy
     * @type {number}
     * @memberof Role
     */
    level?: number;
    /**
     * Role type/category
     * @type {string}
     * @memberof Role
     */
    type?: string;
    /**
     * Whether the role is inactive
     * @type {boolean}
     * @memberof Role
     */
    inactive?: boolean;
}

export function RoleFromJSON(json: any): Role {
    return {
        'dateCreated': !exists(json, 'dateCreated') ? undefined : json['dateCreated'],
        'dateModified': !exists(json, 'dateModified') ? undefined : json['dateModified'],
        'roleId': !exists(json, 'roleId') ? undefined : json['roleId'],
        'communityId': !exists(json, 'communityId') ? undefined : json['communityId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'level': !exists(json, 'level') ? undefined : json['level'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
    };
}

export function RoleToJSON(value?: Role): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'dateCreated': value.dateCreated,
        'dateModified': value.dateModified,
        'roleId': value.roleId,
        'communityId': value.communityId,
        'name': value.name,
        'description': value.description,
        'level': value.level,
        'type': value.type,
        'inactive': value.inactive,
    };
}


