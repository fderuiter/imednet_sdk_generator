# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RecordJobStatus

    RecordJobStatus(;
        jobId=nothing,
        batchId=nothing,
        state=nothing,
    )

    - jobId::String : Unique job identifier
    - batchId::String : Batch ID used to track the job (identical to jobId in most cases)
    - state::String : Current state of the job (e.g., created, completed)
"""
Base.@kwdef mutable struct RecordJobStatus <: OpenAPI.APIModel
    jobId::Union{Nothing, String} = nothing
    batchId::Union{Nothing, String} = nothing
    state::Union{Nothing, String} = nothing

    function RecordJobStatus(jobId, batchId, state, )
        o = new(jobId, batchId, state, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RecordJobStatus

const _property_types_RecordJobStatus = Dict{Symbol,String}(Symbol("jobId")=>"String", Symbol("batchId")=>"String", Symbol("state")=>"String", )
OpenAPI.property_type(::Type{ RecordJobStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RecordJobStatus[name]))}

function OpenAPI.check_required(o::RecordJobStatus)
    true
end

function OpenAPI.validate_properties(o::RecordJobStatus)
    OpenAPI.validate_property(RecordJobStatus, Symbol("jobId"), o.jobId)
    OpenAPI.validate_property(RecordJobStatus, Symbol("batchId"), o.batchId)
    OpenAPI.validate_property(RecordJobStatus, Symbol("state"), o.state)
end

function OpenAPI.validate_property(::Type{ RecordJobStatus }, name::Symbol, val)



end
