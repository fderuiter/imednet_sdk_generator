/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Components_schemas_Interval_forms_item.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Components_schemas_Interval_forms_item_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Components_schemas_Interval_forms_item_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  Components_schemas_Interval_forms_item
    : public ModelBase
{
public:
    Components_schemas_Interval_forms_item();
    virtual ~Components_schemas_Interval_forms_item();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Components_schemas_Interval_forms_item members


    /// <summary>
    /// Form ID scheduled in the interval
    /// </summary>
    int32_t getFormId() const;
    bool formIdIsSet() const;
    void unsetFormId();
    void setFormId(int32_t value);

    /// <summary>
    /// Form key scheduled in the interval
    /// </summary>
    utility::string_t getFormKey() const;
    bool formKeyIsSet() const;
    void unsetFormKey();
    void setFormKey(const utility::string_t& value);

    /// <summary>
    /// Form name scheduled in the interval
    /// </summary>
    utility::string_t getFormName() const;
    bool formNameIsSet() const;
    void unsetFormName();
    void setFormName(const utility::string_t& value);


protected:
    int32_t m_FormId;
    bool m_FormIdIsSet;

    utility::string_t m_FormKey;
    bool m_FormKeyIsSet;

    utility::string_t m_FormName;
    bool m_FormNameIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Components_schemas_Interval_forms_item_H_ */
