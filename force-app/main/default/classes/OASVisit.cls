/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.\nThis specification documents all available endpoints in the latest version of the API.\n
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASVisit
 */
public class OASVisit {
    /**
     * Unique study key
     * @return studyKey
     */
    public String studyKey { get; set; }

    /**
     * Unique system identifier for the subject visit instance
     * @return visitId
     */
    public Integer visitId { get; set; }

    /**
     * Unique system identifier of the interval definition for this visit
     * @return intervalId
     */
    public Integer intervalId { get; set; }

    /**
     * Name of the interval (visit) for this visit instance
     * @return intervalName
     */
    public String intervalName { get; set; }

    /**
     * Mednet subject ID of the subject
     * @return subjectId
     */
    public Integer subjectId { get; set; }

    /**
     * Protocol-assigned subject identifier
     * @return subjectKey
     */
    public String subjectKey { get; set; }

    /**
     * Start date of the visit window (in YYYY-MM-DD format)
     * @return startDate
     */
    public String startDate { get; set; }

    /**
     * End date of the visit window (in YYYY-MM-DD format)
     * @return endDate
     */
    public String endDate { get; set; }

    /**
     * Due date of the visit (in YYYY-MM-DD format), if applicable
     * @return dueDate
     */
    public String dueDate { get; set; }

    /**
     * Actual date the visit took place (in YYYY-MM-DD format)
     * @return visitDate
     */
    public String visitDate { get; set; }

    /**
     * Name of the form used to capture the actual visit date
     * @return visitDateForm
     */
    public String visitDateForm { get; set; }

    /**
     * Variable name of the field capturing the actual visit date
     * @return visitDateQuestion
     */
    public String visitDateQuestion { get; set; }

    /**
     * Whether the visit instance is marked as deleted
     * @return deleted
     */
    public Boolean deleted { get; set; }

    /**
     * Date when this visit record was created
     * @return dateCreated
     */
    public String dateCreated { get; set; }

    /**
     * Date when this visit record was last modified
     * @return dateModified
     */
    public String dateModified { get; set; }

    public static OASVisit getExample() {
        OASVisit visit = new OASVisit();
          visit.studyKey = '';
          visit.visitId = 0;
          visit.intervalId = 0;
          visit.intervalName = '';
          visit.subjectId = 0;
          visit.subjectKey = '';
          visit.startDate = '';
          visit.endDate = '';
          visit.dueDate = '';
          visit.visitDate = '';
          visit.visitDateForm = '';
          visit.visitDateQuestion = '';
          visit.deleted = true;
          visit.dateCreated = '';
          visit.dateModified = '';
        return visit;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASVisit) {           
            OASVisit visit = (OASVisit) obj;
            return this.studyKey == visit.studyKey
                && this.visitId == visit.visitId
                && this.intervalId == visit.intervalId
                && this.intervalName == visit.intervalName
                && this.subjectId == visit.subjectId
                && this.subjectKey == visit.subjectKey
                && this.startDate == visit.startDate
                && this.endDate == visit.endDate
                && this.dueDate == visit.dueDate
                && this.visitDate == visit.visitDate
                && this.visitDateForm == visit.visitDateForm
                && this.visitDateQuestion == visit.visitDateQuestion
                && this.deleted == visit.deleted
                && this.dateCreated == visit.dateCreated
                && this.dateModified == visit.dateModified;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (studyKey == null ? 0 : System.hashCode(studyKey));
        hashCode = (17 * hashCode) + (visitId == null ? 0 : System.hashCode(visitId));
        hashCode = (17 * hashCode) + (intervalId == null ? 0 : System.hashCode(intervalId));
        hashCode = (17 * hashCode) + (intervalName == null ? 0 : System.hashCode(intervalName));
        hashCode = (17 * hashCode) + (subjectId == null ? 0 : System.hashCode(subjectId));
        hashCode = (17 * hashCode) + (subjectKey == null ? 0 : System.hashCode(subjectKey));
        hashCode = (17 * hashCode) + (startDate == null ? 0 : System.hashCode(startDate));
        hashCode = (17 * hashCode) + (endDate == null ? 0 : System.hashCode(endDate));
        hashCode = (17 * hashCode) + (dueDate == null ? 0 : System.hashCode(dueDate));
        hashCode = (17 * hashCode) + (visitDate == null ? 0 : System.hashCode(visitDate));
        hashCode = (17 * hashCode) + (visitDateForm == null ? 0 : System.hashCode(visitDateForm));
        hashCode = (17 * hashCode) + (visitDateQuestion == null ? 0 : System.hashCode(visitDateQuestion));
        hashCode = (17 * hashCode) + (deleted == null ? 0 : System.hashCode(deleted));
        hashCode = (17 * hashCode) + (dateCreated == null ? 0 : System.hashCode(dateCreated));
        hashCode = (17 * hashCode) + (dateModified == null ? 0 : System.hashCode(dateModified));
        return hashCode;
    }
}

