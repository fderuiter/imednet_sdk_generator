/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.\nThis specification documents all available endpoints in the latest version of the API.\n
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASRecordRevision
 */
public class OASRecordRevision {
    /**
     * Unique study key
     * @return studyKey
     */
    public String studyKey { get; set; }

    /**
     * Unique system identifier for the record revision
     * @return recordRevisionId
     */
    public Integer recordRevisionId { get; set; }

    /**
     * Unique system identifier of the related record
     * @return recordId
     */
    public Integer recordId { get; set; }

    /**
     * Client-assigned record OID (if any)
     * @return recordOid
     */
    public String recordOid { get; set; }

    /**
     * Revision number of the record (version of the record status)
     * @return recordRevision
     */
    public Integer recordRevision { get; set; }

    /**
     * Revision number of the data within the record
     * @return dataRevision
     */
    public Integer dataRevision { get; set; }

    /**
     * Status of the record at this revision (user-defined status label)
     * @return recordStatus
     */
    public String recordStatus { get; set; }

    /**
     * Mednet subject ID related to the record
     * @return subjectId
     */
    public Integer subjectId { get; set; }

    /**
     * Client-assigned subject OID related to the record
     * @return subjectOid
     */
    public String subjectOid { get; set; }

    /**
     * Subject display ID related to the record
     * @return subjectKey
     */
    public String subjectKey { get; set; }

    /**
     * Site ID related to the record
     * @return siteId
     */
    public Integer siteId { get; set; }

    /**
     * Form key of the form that the record belongs to
     * @return formKey
     */
    public String formKey { get; set; }

    /**
     * Interval ID (visit definition) related to the record
     * @return intervalId
     */
    public Integer intervalId { get; set; }

    /**
     * Role name of the user who saved the record revision
     * @return role
     */
    public String role { get; set; }

    /**
     * Username of the user who saved the record revision
     * @return user
     */
    public String user { get; set; }

    /**
     * Reason for change, if provided (for audit trail)
     * @return reasonForChange
     */
    public String reasonForChange { get; set; }

    /**
     * Whether the record was deleted in this revision
     * @return deleted
     */
    public Boolean deleted { get; set; }

    /**
     * Date when this record revision was created
     * @return dateCreated
     */
    public String dateCreated { get; set; }

    public static OASRecordRevision getExample() {
        OASRecordRevision recordRevision = new OASRecordRevision();
          recordRevision.studyKey = '';
          recordRevision.recordRevisionId = 0;
          recordRevision.recordId = 0;
          recordRevision.recordOid = '';
          recordRevision.recordRevision = 0;
          recordRevision.dataRevision = 0;
          recordRevision.recordStatus = '';
          recordRevision.subjectId = 0;
          recordRevision.subjectOid = '';
          recordRevision.subjectKey = '';
          recordRevision.siteId = 0;
          recordRevision.formKey = '';
          recordRevision.intervalId = 0;
          recordRevision.role = '';
          recordRevision.user = '';
          recordRevision.reasonForChange = '';
          recordRevision.deleted = true;
          recordRevision.dateCreated = '';
        return recordRevision;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRecordRevision) {           
            OASRecordRevision recordRevision = (OASRecordRevision) obj;
            return this.studyKey == recordRevision.studyKey
                && this.recordRevisionId == recordRevision.recordRevisionId
                && this.recordId == recordRevision.recordId
                && this.recordOid == recordRevision.recordOid
                && this.recordRevision == recordRevision.recordRevision
                && this.dataRevision == recordRevision.dataRevision
                && this.recordStatus == recordRevision.recordStatus
                && this.subjectId == recordRevision.subjectId
                && this.subjectOid == recordRevision.subjectOid
                && this.subjectKey == recordRevision.subjectKey
                && this.siteId == recordRevision.siteId
                && this.formKey == recordRevision.formKey
                && this.intervalId == recordRevision.intervalId
                && this.role == recordRevision.role
                && this.user == recordRevision.user
                && this.reasonForChange == recordRevision.reasonForChange
                && this.deleted == recordRevision.deleted
                && this.dateCreated == recordRevision.dateCreated;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (studyKey == null ? 0 : System.hashCode(studyKey));
        hashCode = (17 * hashCode) + (recordRevisionId == null ? 0 : System.hashCode(recordRevisionId));
        hashCode = (17 * hashCode) + (recordId == null ? 0 : System.hashCode(recordId));
        hashCode = (17 * hashCode) + (recordOid == null ? 0 : System.hashCode(recordOid));
        hashCode = (17 * hashCode) + (recordRevision == null ? 0 : System.hashCode(recordRevision));
        hashCode = (17 * hashCode) + (dataRevision == null ? 0 : System.hashCode(dataRevision));
        hashCode = (17 * hashCode) + (recordStatus == null ? 0 : System.hashCode(recordStatus));
        hashCode = (17 * hashCode) + (subjectId == null ? 0 : System.hashCode(subjectId));
        hashCode = (17 * hashCode) + (subjectOid == null ? 0 : System.hashCode(subjectOid));
        hashCode = (17 * hashCode) + (subjectKey == null ? 0 : System.hashCode(subjectKey));
        hashCode = (17 * hashCode) + (siteId == null ? 0 : System.hashCode(siteId));
        hashCode = (17 * hashCode) + (formKey == null ? 0 : System.hashCode(formKey));
        hashCode = (17 * hashCode) + (intervalId == null ? 0 : System.hashCode(intervalId));
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        hashCode = (17 * hashCode) + (reasonForChange == null ? 0 : System.hashCode(reasonForChange));
        hashCode = (17 * hashCode) + (deleted == null ? 0 : System.hashCode(deleted));
        hashCode = (17 * hashCode) + (dateCreated == null ? 0 : System.hashCode(dateCreated));
        return hashCode;
    }
}

