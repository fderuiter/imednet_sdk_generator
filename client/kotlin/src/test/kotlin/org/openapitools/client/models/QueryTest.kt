/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.Query
import org.openapitools.client.models.QueryComment

class QueryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Query
        //val modelInstance = Query()

        // to test the property `studyKey` - Unique study key
        should("test studyKey") {
            // uncomment below to test the property
            //modelInstance.studyKey shouldBe ("TODO")
        }

        // to test the property `subjectId` - Mednet subject ID associated with the query (if applicable)
        should("test subjectId") {
            // uncomment below to test the property
            //modelInstance.subjectId shouldBe ("TODO")
        }

        // to test the property `subjectOid` - Client-assigned subject OID (if applicable)
        should("test subjectOid") {
            // uncomment below to test the property
            //modelInstance.subjectOid shouldBe ("TODO")
        }

        // to test the property `annotationType` - Category/type of the query (e.g., subject, record, question)
        should("test annotationType") {
            // uncomment below to test the property
            //modelInstance.annotationType shouldBe ("TODO")
        }

        // to test the property `annotationId` - Unique system identifier for the query
        should("test annotationId") {
            // uncomment below to test the property
            //modelInstance.annotationId shouldBe ("TODO")
        }

        // to test the property `type` - System text identifier for the query type/location (subject, record, question)
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `description` - Description of the query (e.g., reason or context)
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `recordId` - Record ID associated with the query (if applicable)
        should("test recordId") {
            // uncomment below to test the property
            //modelInstance.recordId shouldBe ("TODO")
        }

        // to test the property `variable` - Variable name (field) associated with the query (if applicable)
        should("test variable") {
            // uncomment below to test the property
            //modelInstance.variable shouldBe ("TODO")
        }

        // to test the property `subjectKey` - Subject display ID associated with the query (if applicable)
        should("test subjectKey") {
            // uncomment below to test the property
            //modelInstance.subjectKey shouldBe ("TODO")
        }

        // to test the property `dateCreated` - Date when the query was created
        should("test dateCreated") {
            // uncomment below to test the property
            //modelInstance.dateCreated shouldBe ("TODO")
        }

        // to test the property `dateModified` - Date when the query was last modified
        should("test dateModified") {
            // uncomment below to test the property
            //modelInstance.dateModified shouldBe ("TODO")
        }

        // to test the property `queryComments` - History of comments/actions on the query
        should("test queryComments") {
            // uncomment below to test the property
            //modelInstance.queryComments shouldBe ("TODO")
        }

    }
}
