/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Keyword

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param studyKey Unique study key
 * @param intervalId Interval ID (visit definition) that this record is associated with
 * @param formId Form ID of the form this record instance belongs to
 * @param formKey Form key of the form for this record instance
 * @param siteId Site ID associated with the record
 * @param recordId Unique record ID
 * @param recordOid Client-assigned record OID
 * @param recordType Type of record (e.g., SUBJECT for subject-related forms)
 * @param recordStatus Current status of the record (e.g., Record Incomplete, Record Complete)
 * @param deleted Whether the record is marked as deleted
 * @param dateCreated Date when this record was created
 * @param dateModified Date when this record was last modified
 * @param subjectId Mednet subject ID that this record is associated with
 * @param subjectOid Client-assigned subject OID for the subject this record is associated with
 * @param subjectKey Subject display ID that this record is associated with
 * @param visitId Visit instance ID that this record is associated with (if applicable)
 * @param parentRecordId Record ID of the parent record if this record is a subrecord (if applicable)
 * @param keywords List of keywords associated with the record
 * @param recordData Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.
 */


data class Record (

    /* Unique study key */
    @Json(name = "studyKey")
    val studyKey: kotlin.String? = null,

    /* Interval ID (visit definition) that this record is associated with */
    @Json(name = "intervalId")
    val intervalId: kotlin.Int? = null,

    /* Form ID of the form this record instance belongs to */
    @Json(name = "formId")
    val formId: kotlin.Int? = null,

    /* Form key of the form for this record instance */
    @Json(name = "formKey")
    val formKey: kotlin.String? = null,

    /* Site ID associated with the record */
    @Json(name = "siteId")
    val siteId: kotlin.Int? = null,

    /* Unique record ID */
    @Json(name = "recordId")
    val recordId: kotlin.Int? = null,

    /* Client-assigned record OID */
    @Json(name = "recordOid")
    val recordOid: kotlin.String? = null,

    /* Type of record (e.g., SUBJECT for subject-related forms) */
    @Json(name = "recordType")
    val recordType: kotlin.String? = null,

    /* Current status of the record (e.g., Record Incomplete, Record Complete) */
    @Json(name = "recordStatus")
    val recordStatus: kotlin.String? = null,

    /* Whether the record is marked as deleted */
    @Json(name = "deleted")
    val deleted: kotlin.Boolean? = null,

    /* Date when this record was created */
    @Json(name = "dateCreated")
    val dateCreated: kotlin.String? = null,

    /* Date when this record was last modified */
    @Json(name = "dateModified")
    val dateModified: kotlin.String? = null,

    /* Mednet subject ID that this record is associated with */
    @Json(name = "subjectId")
    val subjectId: kotlin.Int? = null,

    /* Client-assigned subject OID for the subject this record is associated with */
    @Json(name = "subjectOid")
    val subjectOid: kotlin.String? = null,

    /* Subject display ID that this record is associated with */
    @Json(name = "subjectKey")
    val subjectKey: kotlin.String? = null,

    /* Visit instance ID that this record is associated with (if applicable) */
    @Json(name = "visitId")
    val visitId: kotlin.Int? = null,

    /* Record ID of the parent record if this record is a subrecord (if applicable) */
    @Json(name = "parentRecordId")
    val parentRecordId: kotlin.Int? = null,

    /* List of keywords associated with the record */
    @Json(name = "keywords")
    val keywords: kotlin.collections.List<Keyword>? = null,

    /* Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names. */
    @Json(name = "recordData")
    val recordData: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null

) {


}

