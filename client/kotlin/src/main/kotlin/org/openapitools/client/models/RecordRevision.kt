/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param studyKey Unique study key
 * @param recordRevisionId Unique system identifier for the record revision
 * @param recordId Unique system identifier of the related record
 * @param recordOid Client-assigned record OID (if any)
 * @param recordRevision Revision number of the record (version of the record status)
 * @param dataRevision Revision number of the data within the record
 * @param recordStatus Status of the record at this revision (user-defined status label)
 * @param subjectId Mednet subject ID related to the record
 * @param subjectOid Client-assigned subject OID related to the record
 * @param subjectKey Subject display ID related to the record
 * @param siteId Site ID related to the record
 * @param formKey Form key of the form that the record belongs to
 * @param intervalId Interval ID (visit definition) related to the record
 * @param role Role name of the user who saved the record revision
 * @param user Username of the user who saved the record revision
 * @param reasonForChange Reason for change, if provided (for audit trail)
 * @param deleted Whether the record was deleted in this revision
 * @param dateCreated Date when this record revision was created
 */


data class RecordRevision (

    /* Unique study key */
    @Json(name = "studyKey")
    val studyKey: kotlin.String? = null,

    /* Unique system identifier for the record revision */
    @Json(name = "recordRevisionId")
    val recordRevisionId: kotlin.Int? = null,

    /* Unique system identifier of the related record */
    @Json(name = "recordId")
    val recordId: kotlin.Int? = null,

    /* Client-assigned record OID (if any) */
    @Json(name = "recordOid")
    val recordOid: kotlin.String? = null,

    /* Revision number of the record (version of the record status) */
    @Json(name = "recordRevision")
    val recordRevision: kotlin.Int? = null,

    /* Revision number of the data within the record */
    @Json(name = "dataRevision")
    val dataRevision: kotlin.Int? = null,

    /* Status of the record at this revision (user-defined status label) */
    @Json(name = "recordStatus")
    val recordStatus: kotlin.String? = null,

    /* Mednet subject ID related to the record */
    @Json(name = "subjectId")
    val subjectId: kotlin.Int? = null,

    /* Client-assigned subject OID related to the record */
    @Json(name = "subjectOid")
    val subjectOid: kotlin.String? = null,

    /* Subject display ID related to the record */
    @Json(name = "subjectKey")
    val subjectKey: kotlin.String? = null,

    /* Site ID related to the record */
    @Json(name = "siteId")
    val siteId: kotlin.Int? = null,

    /* Form key of the form that the record belongs to */
    @Json(name = "formKey")
    val formKey: kotlin.String? = null,

    /* Interval ID (visit definition) related to the record */
    @Json(name = "intervalId")
    val intervalId: kotlin.Int? = null,

    /* Role name of the user who saved the record revision */
    @Json(name = "role")
    val role: kotlin.String? = null,

    /* Username of the user who saved the record revision */
    @Json(name = "user")
    val user: kotlin.String? = null,

    /* Reason for change, if provided (for audit trail) */
    @Json(name = "reasonForChange")
    val reasonForChange: kotlin.String? = null,

    /* Whether the record was deleted in this revision */
    @Json(name = "deleted")
    val deleted: kotlin.Boolean? = null,

    /* Date when this record revision was created */
    @Json(name = "dateCreated")
    val dateCreated: kotlin.String? = null

) {


}

