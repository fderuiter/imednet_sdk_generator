/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param formKey Form key identifying the eCRF to create or update
 * @param `data` Key-value pairs of field names and values for the record data
 * @param formId Form ID identifying the eCRF to create or update (alternative to formKey)
 * @param siteName Name of the site where the record should be created (for new subject registration)
 * @param siteId Site ID for the record (alternative to siteName)
 * @param subjectKey Subject identifier (display ID) for which to create or update the record
 * @param subjectId Subject ID for which to create or update the record (alternative to subjectKey)
 * @param subjectOid Subject OID for which to create or update the record (alternative to subjectKey)
 * @param intervalName Name of the interval (visit) for a scheduled record update
 * @param intervalId Interval ID for a scheduled record update (alternative to intervalName)
 * @param recordId Record ID for updating an existing unscheduled record (if applicable)
 * @param recordOid Record OID for updating an existing unscheduled record (if applicable)
 */


data class ComponentsSchemasRecordCreateRequestItem (

    /* Form key identifying the eCRF to create or update */
    @Json(name = "formKey")
    val formKey: kotlin.String,

    /* Key-value pairs of field names and values for the record data */
    @Json(name = "data")
    val `data`: kotlin.collections.Map<kotlin.String, kotlin.Any>,

    /* Form ID identifying the eCRF to create or update (alternative to formKey) */
    @Json(name = "formId")
    val formId: kotlin.Int? = null,

    /* Name of the site where the record should be created (for new subject registration) */
    @Json(name = "siteName")
    val siteName: kotlin.String? = null,

    /* Site ID for the record (alternative to siteName) */
    @Json(name = "siteId")
    val siteId: kotlin.Int? = null,

    /* Subject identifier (display ID) for which to create or update the record */
    @Json(name = "subjectKey")
    val subjectKey: kotlin.String? = null,

    /* Subject ID for which to create or update the record (alternative to subjectKey) */
    @Json(name = "subjectId")
    val subjectId: kotlin.Int? = null,

    /* Subject OID for which to create or update the record (alternative to subjectKey) */
    @Json(name = "subjectOid")
    val subjectOid: kotlin.String? = null,

    /* Name of the interval (visit) for a scheduled record update */
    @Json(name = "intervalName")
    val intervalName: kotlin.String? = null,

    /* Interval ID for a scheduled record update (alternative to intervalName) */
    @Json(name = "intervalId")
    val intervalId: kotlin.Int? = null,

    /* Record ID for updating an existing unscheduled record (if applicable) */
    @Json(name = "recordId")
    val recordId: kotlin.Int? = null,

    /* Record OID for updating an existing unscheduled record (if applicable) */
    @Json(name = "recordOid")
    val recordOid: kotlin.String? = null

) {


}

