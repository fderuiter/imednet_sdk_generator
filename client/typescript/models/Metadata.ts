/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * OpenAPI spec version: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ComponentsSchemasMetadataError } from '../models/ComponentsSchemasMetadataError';
import { HttpFile } from '../http/http';

export class Metadata {
    /**
    * HTTP status of the response (e.g., OK or ERROR)
    */
    'status'?: string;
    /**
    * HTTP method of the request
    */
    'method'?: string;
    /**
    * Requested URI path
    */
    'path'?: string;
    /**
    * Timestamp when response was generated
    */
    'timestamp'?: Date;
    'error'?: ComponentsSchemasMetadataError;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "method",
            "baseName": "method",
            "type": "string",
            "format": ""
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "ComponentsSchemasMetadataError",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Metadata.attributeTypeMap;
    }

    public constructor() {
    }
}
