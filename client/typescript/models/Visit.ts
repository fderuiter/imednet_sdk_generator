/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * OpenAPI spec version: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Visit {
    /**
    * Unique study key
    */
    'studyKey'?: string;
    /**
    * Unique system identifier for the subject visit instance
    */
    'visitId'?: number;
    /**
    * Unique system identifier of the interval definition for this visit
    */
    'intervalId'?: number;
    /**
    * Name of the interval (visit) for this visit instance
    */
    'intervalName'?: string;
    /**
    * Mednet subject ID of the subject
    */
    'subjectId'?: number;
    /**
    * Protocol-assigned subject identifier
    */
    'subjectKey'?: string;
    /**
    * Start date of the visit window (in YYYY-MM-DD format)
    */
    'startDate'?: string;
    /**
    * End date of the visit window (in YYYY-MM-DD format)
    */
    'endDate'?: string;
    /**
    * Due date of the visit (in YYYY-MM-DD format), if applicable
    */
    'dueDate'?: string;
    /**
    * Actual date the visit took place (in YYYY-MM-DD format)
    */
    'visitDate'?: string;
    /**
    * Name of the form used to capture the actual visit date
    */
    'visitDateForm'?: string;
    /**
    * Variable name of the field capturing the actual visit date
    */
    'visitDateQuestion'?: string;
    /**
    * Whether the visit instance is marked as deleted
    */
    'deleted'?: boolean;
    /**
    * Date when this visit record was created
    */
    'dateCreated'?: string;
    /**
    * Date when this visit record was last modified
    */
    'dateModified'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "studyKey",
            "baseName": "studyKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "visitId",
            "baseName": "visitId",
            "type": "number",
            "format": ""
        },
        {
            "name": "intervalId",
            "baseName": "intervalId",
            "type": "number",
            "format": ""
        },
        {
            "name": "intervalName",
            "baseName": "intervalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "subjectId",
            "baseName": "subjectId",
            "type": "number",
            "format": ""
        },
        {
            "name": "subjectKey",
            "baseName": "subjectKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "endDate",
            "baseName": "endDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "dueDate",
            "baseName": "dueDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "visitDate",
            "baseName": "visitDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "visitDateForm",
            "baseName": "visitDateForm",
            "type": "string",
            "format": ""
        },
        {
            "name": "visitDateQuestion",
            "baseName": "visitDateQuestion",
            "type": "string",
            "format": ""
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "dateCreated",
            "baseName": "dateCreated",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateModified",
            "baseName": "dateModified",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Visit.attributeTypeMap;
    }

    public constructor() {
    }
}
