/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class Variable {
    /**
    * Unique study key
    */
    'studyKey'?: string;
    /**
    * Mednet variable ID
    */
    'variableId'?: number;
    /**
    * Type of the variable (field type), e.g., RADIO, TEXT, etc.
    */
    'variableType'?: Variable.VariableTypeEnum;
    /**
    * Name of the variable (question text or label)
    */
    'variableName'?: string;
    /**
    * Sequence of the variable on the form
    */
    'sequence'?: number;
    /**
    * Number of modifications of the variable (via form metadata revisions)
    */
    'revision'?: number;
    /**
    * Whether the variable is marked as disabled (deleted)
    */
    'disabled'?: boolean;
    /**
    * Date when this variable was created
    */
    'dateCreated'?: string;
    /**
    * Date when this variable was last modified
    */
    'dateModified'?: string;
    /**
    * ID of the form that this variable belongs to
    */
    'formId'?: number;
    /**
    * Client-assigned variable OID
    */
    'variableOid'?: string;
    /**
    * Whether the variable is marked as deleted
    */
    'deleted'?: boolean;
    /**
    * Form key of the form that this variable belongs to
    */
    'formKey'?: string;
    /**
    * Name of the form that this variable belongs to
    */
    'formName'?: string;
    /**
    * User-defined identifier (field name) for the variable
    */
    'label'?: string;
    /**
    * Whether the variable is flagged as blinded (hidden in certain contexts)
    */
    'blinded'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "studyKey",
            "baseName": "studyKey",
            "type": "string"
        },
        {
            "name": "variableId",
            "baseName": "variableId",
            "type": "number"
        },
        {
            "name": "variableType",
            "baseName": "variableType",
            "type": "Variable.VariableTypeEnum"
        },
        {
            "name": "variableName",
            "baseName": "variableName",
            "type": "string"
        },
        {
            "name": "sequence",
            "baseName": "sequence",
            "type": "number"
        },
        {
            "name": "revision",
            "baseName": "revision",
            "type": "number"
        },
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean"
        },
        {
            "name": "dateCreated",
            "baseName": "dateCreated",
            "type": "string"
        },
        {
            "name": "dateModified",
            "baseName": "dateModified",
            "type": "string"
        },
        {
            "name": "formId",
            "baseName": "formId",
            "type": "number"
        },
        {
            "name": "variableOid",
            "baseName": "variableOid",
            "type": "string"
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean"
        },
        {
            "name": "formKey",
            "baseName": "formKey",
            "type": "string"
        },
        {
            "name": "formName",
            "baseName": "formName",
            "type": "string"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string"
        },
        {
            "name": "blinded",
            "baseName": "blinded",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Variable.attributeTypeMap;
    }
}

export namespace Variable {
    export enum VariableTypeEnum {
        Text = <any> 'TEXT',
        Textarea = <any> 'TEXTAREA',
        Radio = <any> 'RADIO',
        Checkbox = <any> 'CHECKBOX',
        Dropdown = <any> 'DROPDOWN',
        Date = <any> 'DATE',
        Number = <any> 'NUMBER'
    }
}
