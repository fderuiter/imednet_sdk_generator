/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class RecordRevision {
    /**
    * Unique study key
    */
    'studyKey'?: string;
    /**
    * Unique system identifier for the record revision
    */
    'recordRevisionId'?: number;
    /**
    * Unique system identifier of the related record
    */
    'recordId'?: number;
    /**
    * Client-assigned record OID (if any)
    */
    'recordOid'?: string;
    /**
    * Revision number of the record (version of the record status)
    */
    'recordRevision'?: number;
    /**
    * Revision number of the data within the record
    */
    'dataRevision'?: number;
    /**
    * Status of the record at this revision (user-defined status label)
    */
    'recordStatus'?: string;
    /**
    * Mednet subject ID related to the record
    */
    'subjectId'?: number;
    /**
    * Client-assigned subject OID related to the record
    */
    'subjectOid'?: string;
    /**
    * Subject display ID related to the record
    */
    'subjectKey'?: string;
    /**
    * Site ID related to the record
    */
    'siteId'?: number;
    /**
    * Form key of the form that the record belongs to
    */
    'formKey'?: string;
    /**
    * Interval ID (visit definition) related to the record
    */
    'intervalId'?: number;
    /**
    * Role name of the user who saved the record revision
    */
    'role'?: string;
    /**
    * Username of the user who saved the record revision
    */
    'user'?: string;
    /**
    * Reason for change, if provided (for audit trail)
    */
    'reasonForChange'?: string;
    /**
    * Whether the record was deleted in this revision
    */
    'deleted'?: boolean;
    /**
    * Date when this record revision was created
    */
    'dateCreated'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "studyKey",
            "baseName": "studyKey",
            "type": "string"
        },
        {
            "name": "recordRevisionId",
            "baseName": "recordRevisionId",
            "type": "number"
        },
        {
            "name": "recordId",
            "baseName": "recordId",
            "type": "number"
        },
        {
            "name": "recordOid",
            "baseName": "recordOid",
            "type": "string"
        },
        {
            "name": "recordRevision",
            "baseName": "recordRevision",
            "type": "number"
        },
        {
            "name": "dataRevision",
            "baseName": "dataRevision",
            "type": "number"
        },
        {
            "name": "recordStatus",
            "baseName": "recordStatus",
            "type": "string"
        },
        {
            "name": "subjectId",
            "baseName": "subjectId",
            "type": "number"
        },
        {
            "name": "subjectOid",
            "baseName": "subjectOid",
            "type": "string"
        },
        {
            "name": "subjectKey",
            "baseName": "subjectKey",
            "type": "string"
        },
        {
            "name": "siteId",
            "baseName": "siteId",
            "type": "number"
        },
        {
            "name": "formKey",
            "baseName": "formKey",
            "type": "string"
        },
        {
            "name": "intervalId",
            "baseName": "intervalId",
            "type": "number"
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "string"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "string"
        },
        {
            "name": "reasonForChange",
            "baseName": "reasonForChange",
            "type": "string"
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean"
        },
        {
            "name": "dateCreated",
            "baseName": "dateCreated",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return RecordRevision.attributeTypeMap;
    }
}

