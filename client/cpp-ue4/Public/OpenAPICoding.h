/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * OpenAPI spec version: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

/*
 * OpenAPICoding
 *
 * 
 */
class OPENAPI_API OpenAPICoding : public Model
{
public:
    virtual ~OpenAPICoding() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* Unique study key */
	TOptional<FString> StudyKey;
	/* Name of the site associated with the coded data */
	TOptional<FString> SiteName;
	/* Site ID associated with the coded data */
	TOptional<int32> SiteId;
	/* Subject ID associated with the coded data */
	TOptional<int32> SubjectId;
	/* Subject key (display ID) associated with the coded data */
	TOptional<FString> SubjectKey;
	/* Form ID where the coded data originates */
	TOptional<int32> FormId;
	/* Name of the form where the coded data originates */
	TOptional<FString> FormName;
	/* Form key where the coded data originates */
	TOptional<FString> FormKey;
	/* Revision number of the coding entry */
	TOptional<int32> Revision;
	/* Record ID associated with the coded data */
	TOptional<int32> RecordId;
	/* Variable name (field) that was coded */
	TOptional<FString> Variable;
	/* Original value entered that required coding */
	TOptional<FString> Value;
	/* Mednet coding ID */
	TOptional<int32> CodingId;
	/* Standardized code assigned (e.g., dictionary term) */
	TOptional<FString> Code;
	/* Name of the user who performed the coding */
	TOptional<FString> CodedBy;
	/* Reason for coding or any notes on changes */
	TOptional<FString> Reason;
	/* Name of the dictionary used (e.g., MedDRA) */
	TOptional<FString> DictionaryName;
	/* Version of the dictionary used */
	TOptional<FString> DictionaryVersion;
	/* Date when the coding was performed */
	TOptional<FString> DateCoded;
};

}
