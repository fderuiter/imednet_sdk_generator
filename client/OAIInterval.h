/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInterval.h
 *
 * 
 */

#ifndef OAIInterval_H
#define OAIInterval_H

#include <QJsonObject>

#include "OAIComponents_schemas_Interval_forms_item.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComponents_schemas_Interval_forms_item;

class OAIInterval : public OAIObject {
public:
    OAIInterval();
    OAIInterval(QString json);
    ~OAIInterval() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getIntervalId() const;
    void setIntervalId(const qint32 &interval_id);
    bool is_interval_id_Set() const;
    bool is_interval_id_Valid() const;

    QString getIntervalName() const;
    void setIntervalName(const QString &interval_name);
    bool is_interval_name_Set() const;
    bool is_interval_name_Valid() const;

    QString getIntervalDescription() const;
    void setIntervalDescription(const QString &interval_description);
    bool is_interval_description_Set() const;
    bool is_interval_description_Valid() const;

    qint32 getIntervalSequence() const;
    void setIntervalSequence(const qint32 &interval_sequence);
    bool is_interval_sequence_Set() const;
    bool is_interval_sequence_Valid() const;

    qint32 getIntervalGroupId() const;
    void setIntervalGroupId(const qint32 &interval_group_id);
    bool is_interval_group_id_Set() const;
    bool is_interval_group_id_Valid() const;

    QString getIntervalGroupName() const;
    void setIntervalGroupName(const QString &interval_group_name);
    bool is_interval_group_name_Set() const;
    bool is_interval_group_name_Valid() const;

    QString getTimeline() const;
    void setTimeline(const QString &timeline);
    bool is_timeline_Set() const;
    bool is_timeline_Valid() const;

    QString getDefinedUsingInterval() const;
    void setDefinedUsingInterval(const QString &defined_using_interval);
    bool is_defined_using_interval_Set() const;
    bool is_defined_using_interval_Valid() const;

    QString getWindowCalculationForm() const;
    void setWindowCalculationForm(const QString &window_calculation_form);
    bool is_window_calculation_form_Set() const;
    bool is_window_calculation_form_Valid() const;

    QString getWindowCalculationDate() const;
    void setWindowCalculationDate(const QString &window_calculation_date);
    bool is_window_calculation_date_Set() const;
    bool is_window_calculation_date_Valid() const;

    QString getActualDateForm() const;
    void setActualDateForm(const QString &actual_date_form);
    bool is_actual_date_form_Set() const;
    bool is_actual_date_form_Valid() const;

    QString getActualDate() const;
    void setActualDate(const QString &actual_date);
    bool is_actual_date_Set() const;
    bool is_actual_date_Valid() const;

    qint32 getDueDateWillBeIn() const;
    void setDueDateWillBeIn(const qint32 &due_date_will_be_in);
    bool is_due_date_will_be_in_Set() const;
    bool is_due_date_will_be_in_Valid() const;

    qint32 getNegativeSlack() const;
    void setNegativeSlack(const qint32 &negative_slack);
    bool is_negative_slack_Set() const;
    bool is_negative_slack_Valid() const;

    qint32 getPositiveSlack() const;
    void setPositiveSlack(const qint32 &positive_slack);
    bool is_positive_slack_Set() const;
    bool is_positive_slack_Valid() const;

    qint32 getEproGracePeriod() const;
    void setEproGracePeriod(const qint32 &epro_grace_period);
    bool is_epro_grace_period_Set() const;
    bool is_epro_grace_period_Valid() const;

    QList<OAIComponents_schemas_Interval_forms_item> getForms() const;
    void setForms(const QList<OAIComponents_schemas_Interval_forms_item> &forms);
    bool is_forms_Set() const;
    bool is_forms_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_interval_id;
    bool m_interval_id_isSet;
    bool m_interval_id_isValid;

    QString m_interval_name;
    bool m_interval_name_isSet;
    bool m_interval_name_isValid;

    QString m_interval_description;
    bool m_interval_description_isSet;
    bool m_interval_description_isValid;

    qint32 m_interval_sequence;
    bool m_interval_sequence_isSet;
    bool m_interval_sequence_isValid;

    qint32 m_interval_group_id;
    bool m_interval_group_id_isSet;
    bool m_interval_group_id_isValid;

    QString m_interval_group_name;
    bool m_interval_group_name_isSet;
    bool m_interval_group_name_isValid;

    QString m_timeline;
    bool m_timeline_isSet;
    bool m_timeline_isValid;

    QString m_defined_using_interval;
    bool m_defined_using_interval_isSet;
    bool m_defined_using_interval_isValid;

    QString m_window_calculation_form;
    bool m_window_calculation_form_isSet;
    bool m_window_calculation_form_isValid;

    QString m_window_calculation_date;
    bool m_window_calculation_date_isSet;
    bool m_window_calculation_date_isValid;

    QString m_actual_date_form;
    bool m_actual_date_form_isSet;
    bool m_actual_date_form_isValid;

    QString m_actual_date;
    bool m_actual_date_isSet;
    bool m_actual_date_isValid;

    qint32 m_due_date_will_be_in;
    bool m_due_date_will_be_in_isSet;
    bool m_due_date_will_be_in_isValid;

    qint32 m_negative_slack;
    bool m_negative_slack_isSet;
    bool m_negative_slack_isValid;

    qint32 m_positive_slack;
    bool m_positive_slack_isSet;
    bool m_positive_slack_isValid;

    qint32 m_epro_grace_period;
    bool m_epro_grace_period_isSet;
    bool m_epro_grace_period_isValid;

    QList<OAIComponents_schemas_Interval_forms_item> m_forms;
    bool m_forms_isSet;
    bool m_forms_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInterval)

#endif // OAIInterval_H
