note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CODING




feature --Access

    study_key: detachable STRING_32
      -- Unique study key
    site_name: detachable STRING_32
      -- Name of the site associated with the coded data
    site_id: INTEGER_32
      -- Site ID associated with the coded data
    subject_id: INTEGER_32
      -- Subject ID associated with the coded data
    subject_key: detachable STRING_32
      -- Subject key (display ID) associated with the coded data
    form_id: INTEGER_32
      -- Form ID where the coded data originates
    form_name: detachable STRING_32
      -- Name of the form where the coded data originates
    form_key: detachable STRING_32
      -- Form key where the coded data originates
    revision: INTEGER_32
      -- Revision number of the coding entry
    record_id: INTEGER_32
      -- Record ID associated with the coded data
    variable: detachable STRING_32
      -- Variable name (field) that was coded
    value: detachable STRING_32
      -- Original value entered that required coding
    coding_id: INTEGER_32
      -- Mednet coding ID
    code: detachable STRING_32
      -- Standardized code assigned (e.g., dictionary term)
    coded_by: detachable STRING_32
      -- Name of the user who performed the coding
    reason: detachable STRING_32
      -- Reason for coding or any notes on changes
    dictionary_name: detachable STRING_32
      -- Name of the dictionary used (e.g., MedDRA)
    dictionary_version: detachable STRING_32
      -- Version of the dictionary used
    date_coded: detachable STRING_32
      -- Date when the coding was performed

feature -- Change Element

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_site_name (a_name: like site_name)
        -- Set 'site_name' with 'a_name'.
      do
        site_name := a_name
      ensure
        site_name_set: site_name = a_name
      end

    set_site_id (a_name: like site_id)
        -- Set 'site_id' with 'a_name'.
      do
        site_id := a_name
      ensure
        site_id_set: site_id = a_name
      end

    set_subject_id (a_name: like subject_id)
        -- Set 'subject_id' with 'a_name'.
      do
        subject_id := a_name
      ensure
        subject_id_set: subject_id = a_name
      end

    set_subject_key (a_name: like subject_key)
        -- Set 'subject_key' with 'a_name'.
      do
        subject_key := a_name
      ensure
        subject_key_set: subject_key = a_name
      end

    set_form_id (a_name: like form_id)
        -- Set 'form_id' with 'a_name'.
      do
        form_id := a_name
      ensure
        form_id_set: form_id = a_name
      end

    set_form_name (a_name: like form_name)
        -- Set 'form_name' with 'a_name'.
      do
        form_name := a_name
      ensure
        form_name_set: form_name = a_name
      end

    set_form_key (a_name: like form_key)
        -- Set 'form_key' with 'a_name'.
      do
        form_key := a_name
      ensure
        form_key_set: form_key = a_name
      end

    set_revision (a_name: like revision)
        -- Set 'revision' with 'a_name'.
      do
        revision := a_name
      ensure
        revision_set: revision = a_name
      end

    set_record_id (a_name: like record_id)
        -- Set 'record_id' with 'a_name'.
      do
        record_id := a_name
      ensure
        record_id_set: record_id = a_name
      end

    set_variable (a_name: like variable)
        -- Set 'variable' with 'a_name'.
      do
        variable := a_name
      ensure
        variable_set: variable = a_name
      end

    set_value (a_name: like value)
        -- Set 'value' with 'a_name'.
      do
        value := a_name
      ensure
        value_set: value = a_name
      end

    set_coding_id (a_name: like coding_id)
        -- Set 'coding_id' with 'a_name'.
      do
        coding_id := a_name
      ensure
        coding_id_set: coding_id = a_name
      end

    set_code (a_name: like code)
        -- Set 'code' with 'a_name'.
      do
        code := a_name
      ensure
        code_set: code = a_name
      end

    set_coded_by (a_name: like coded_by)
        -- Set 'coded_by' with 'a_name'.
      do
        coded_by := a_name
      ensure
        coded_by_set: coded_by = a_name
      end

    set_reason (a_name: like reason)
        -- Set 'reason' with 'a_name'.
      do
        reason := a_name
      ensure
        reason_set: reason = a_name
      end

    set_dictionary_name (a_name: like dictionary_name)
        -- Set 'dictionary_name' with 'a_name'.
      do
        dictionary_name := a_name
      ensure
        dictionary_name_set: dictionary_name = a_name
      end

    set_dictionary_version (a_name: like dictionary_version)
        -- Set 'dictionary_version' with 'a_name'.
      do
        dictionary_version := a_name
      ensure
        dictionary_version_set: dictionary_version = a_name
      end

    set_date_coded (a_name: like date_coded)
        -- Set 'date_coded' with 'a_name'.
      do
        date_coded := a_name
      ensure
        date_coded_set: date_coded = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CODING%N")
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached site_name as l_site_name then
          Result.append ("%Nsite_name:")
          Result.append (l_site_name.out)
          Result.append ("%N")
        end
        if attached site_id as l_site_id then
          Result.append ("%Nsite_id:")
          Result.append (l_site_id.out)
          Result.append ("%N")
        end
        if attached subject_id as l_subject_id then
          Result.append ("%Nsubject_id:")
          Result.append (l_subject_id.out)
          Result.append ("%N")
        end
        if attached subject_key as l_subject_key then
          Result.append ("%Nsubject_key:")
          Result.append (l_subject_key.out)
          Result.append ("%N")
        end
        if attached form_id as l_form_id then
          Result.append ("%Nform_id:")
          Result.append (l_form_id.out)
          Result.append ("%N")
        end
        if attached form_name as l_form_name then
          Result.append ("%Nform_name:")
          Result.append (l_form_name.out)
          Result.append ("%N")
        end
        if attached form_key as l_form_key then
          Result.append ("%Nform_key:")
          Result.append (l_form_key.out)
          Result.append ("%N")
        end
        if attached revision as l_revision then
          Result.append ("%Nrevision:")
          Result.append (l_revision.out)
          Result.append ("%N")
        end
        if attached record_id as l_record_id then
          Result.append ("%Nrecord_id:")
          Result.append (l_record_id.out)
          Result.append ("%N")
        end
        if attached variable as l_variable then
          Result.append ("%Nvariable:")
          Result.append (l_variable.out)
          Result.append ("%N")
        end
        if attached value as l_value then
          Result.append ("%Nvalue:")
          Result.append (l_value.out)
          Result.append ("%N")
        end
        if attached coding_id as l_coding_id then
          Result.append ("%Ncoding_id:")
          Result.append (l_coding_id.out)
          Result.append ("%N")
        end
        if attached code as l_code then
          Result.append ("%Ncode:")
          Result.append (l_code.out)
          Result.append ("%N")
        end
        if attached coded_by as l_coded_by then
          Result.append ("%Ncoded_by:")
          Result.append (l_coded_by.out)
          Result.append ("%N")
        end
        if attached reason as l_reason then
          Result.append ("%Nreason:")
          Result.append (l_reason.out)
          Result.append ("%N")
        end
        if attached dictionary_name as l_dictionary_name then
          Result.append ("%Ndictionary_name:")
          Result.append (l_dictionary_name.out)
          Result.append ("%N")
        end
        if attached dictionary_version as l_dictionary_version then
          Result.append ("%Ndictionary_version:")
          Result.append (l_dictionary_version.out)
          Result.append ("%N")
        end
        if attached date_coded as l_date_coded then
          Result.append ("%Ndate_coded:")
          Result.append (l_date_coded.out)
          Result.append ("%N")
        end
      end
end

