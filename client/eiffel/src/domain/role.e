note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ROLE




feature --Access

    date_created: detachable LIST [INTEGER_32]
      -- Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond])
    date_modified: detachable LIST [INTEGER_32]
      -- Timestamp when the role assignment was last modified
    role_id: detachable STRING_32
      -- Unique role ID (UUID)
    community_id: INTEGER_32
      -- Community ID or level associated with the role
    name: detachable STRING_32
      -- Name of the role
    description: detachable STRING_32
      -- Description of the role
    level: INTEGER_32
      -- Role level or hierarchy
    type: detachable STRING_32
      -- Role type/category
    inactive: BOOLEAN
      -- Whether the role is inactive

feature -- Change Element

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end

    set_role_id (a_name: like role_id)
        -- Set 'role_id' with 'a_name'.
      do
        role_id := a_name
      ensure
        role_id_set: role_id = a_name
      end

    set_community_id (a_name: like community_id)
        -- Set 'community_id' with 'a_name'.
      do
        community_id := a_name
      ensure
        community_id_set: community_id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_level (a_name: like level)
        -- Set 'level' with 'a_name'.
      do
        level := a_name
      ensure
        level_set: level = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_inactive (a_name: like inactive)
        -- Set 'inactive' with 'a_name'.
      do
        inactive := a_name
      ensure
        inactive_set: inactive = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ROLE%N")
        if attached date_created as l_date_created then
          across l_date_created as ic loop
            Result.append ("%N date_created:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached date_modified as l_date_modified then
          across l_date_modified as ic loop
            Result.append ("%N date_modified:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached role_id as l_role_id then
          Result.append ("%Nrole_id:")
          Result.append (l_role_id.out)
          Result.append ("%N")
        end
        if attached community_id as l_community_id then
          Result.append ("%Ncommunity_id:")
          Result.append (l_community_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached level as l_level then
          Result.append ("%Nlevel:")
          Result.append (l_level.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached inactive as l_inactive then
          Result.append ("%Ninactive:")
          Result.append (l_inactive.out)
          Result.append ("%N")
        end
      end
end

