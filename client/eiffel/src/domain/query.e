note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class QUERY




feature --Access

    study_key: detachable STRING_32
      -- Unique study key
    subject_id: INTEGER_32
      -- Mednet subject ID associated with the query (if applicable)
    subject_oid: detachable STRING_32
      -- Client-assigned subject OID (if applicable)
    annotation_type: detachable STRING_32
      -- Category/type of the query (e.g., subject, record, question)
    annotation_id: INTEGER_32
      -- Unique system identifier for the query
    type: detachable STRING_32
      -- System text identifier for the query type/location (subject, record, question)
    description: detachable STRING_32
      -- Description of the query (e.g., reason or context)
    record_id: INTEGER_32
      -- Record ID associated with the query (if applicable)
    variable: detachable STRING_32
      -- Variable name (field) associated with the query (if applicable)
    subject_key: detachable STRING_32
      -- Subject display ID associated with the query (if applicable)
    date_created: detachable STRING_32
      -- Date when the query was created
    date_modified: detachable STRING_32
      -- Date when the query was last modified
    query_comments: detachable LIST [QUERY_COMMENT]
      -- History of comments/actions on the query

feature -- Change Element

    set_study_key (a_name: like study_key)
        -- Set 'study_key' with 'a_name'.
      do
        study_key := a_name
      ensure
        study_key_set: study_key = a_name
      end

    set_subject_id (a_name: like subject_id)
        -- Set 'subject_id' with 'a_name'.
      do
        subject_id := a_name
      ensure
        subject_id_set: subject_id = a_name
      end

    set_subject_oid (a_name: like subject_oid)
        -- Set 'subject_oid' with 'a_name'.
      do
        subject_oid := a_name
      ensure
        subject_oid_set: subject_oid = a_name
      end

    set_annotation_type (a_name: like annotation_type)
        -- Set 'annotation_type' with 'a_name'.
      do
        annotation_type := a_name
      ensure
        annotation_type_set: annotation_type = a_name
      end

    set_annotation_id (a_name: like annotation_id)
        -- Set 'annotation_id' with 'a_name'.
      do
        annotation_id := a_name
      ensure
        annotation_id_set: annotation_id = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_record_id (a_name: like record_id)
        -- Set 'record_id' with 'a_name'.
      do
        record_id := a_name
      ensure
        record_id_set: record_id = a_name
      end

    set_variable (a_name: like variable)
        -- Set 'variable' with 'a_name'.
      do
        variable := a_name
      ensure
        variable_set: variable = a_name
      end

    set_subject_key (a_name: like subject_key)
        -- Set 'subject_key' with 'a_name'.
      do
        subject_key := a_name
      ensure
        subject_key_set: subject_key = a_name
      end

    set_date_created (a_name: like date_created)
        -- Set 'date_created' with 'a_name'.
      do
        date_created := a_name
      ensure
        date_created_set: date_created = a_name
      end

    set_date_modified (a_name: like date_modified)
        -- Set 'date_modified' with 'a_name'.
      do
        date_modified := a_name
      ensure
        date_modified_set: date_modified = a_name
      end

    set_query_comments (a_name: like query_comments)
        -- Set 'query_comments' with 'a_name'.
      do
        query_comments := a_name
      ensure
        query_comments_set: query_comments = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass QUERY%N")
        if attached study_key as l_study_key then
          Result.append ("%Nstudy_key:")
          Result.append (l_study_key.out)
          Result.append ("%N")
        end
        if attached subject_id as l_subject_id then
          Result.append ("%Nsubject_id:")
          Result.append (l_subject_id.out)
          Result.append ("%N")
        end
        if attached subject_oid as l_subject_oid then
          Result.append ("%Nsubject_oid:")
          Result.append (l_subject_oid.out)
          Result.append ("%N")
        end
        if attached annotation_type as l_annotation_type then
          Result.append ("%Nannotation_type:")
          Result.append (l_annotation_type.out)
          Result.append ("%N")
        end
        if attached annotation_id as l_annotation_id then
          Result.append ("%Nannotation_id:")
          Result.append (l_annotation_id.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached record_id as l_record_id then
          Result.append ("%Nrecord_id:")
          Result.append (l_record_id.out)
          Result.append ("%N")
        end
        if attached variable as l_variable then
          Result.append ("%Nvariable:")
          Result.append (l_variable.out)
          Result.append ("%N")
        end
        if attached subject_key as l_subject_key then
          Result.append ("%Nsubject_key:")
          Result.append (l_subject_key.out)
          Result.append ("%N")
        end
        if attached date_created as l_date_created then
          Result.append ("%Ndate_created:")
          Result.append (l_date_created.out)
          Result.append ("%N")
        end
        if attached date_modified as l_date_modified then
          Result.append ("%Ndate_modified:")
          Result.append (l_date_modified.out)
          Result.append ("%N")
        end
        if attached query_comments as l_query_comments then
          across l_query_comments as ic loop
            Result.append ("%N query_comments:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

