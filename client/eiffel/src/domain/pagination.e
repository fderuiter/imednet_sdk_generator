note
 description:"[
		Mednet EDC API
 		The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  		The version of the OpenAPI document: 1.3.6
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PAGINATION




feature --Access

    current_page: INTEGER_32
      -- Current index page returned
    size: INTEGER_32
      -- Number of items per page returned
    total_pages: INTEGER_32
      -- Total number of pages available
    total_elements: INTEGER_32
      -- Total number of elements (items) available
    sort: detachable LIST [SORT]
      

feature -- Change Element

    set_current_page (a_name: like current_page)
        -- Set 'current_page' with 'a_name'.
      do
        current_page := a_name
      ensure
        current_page_set: current_page = a_name
      end

    set_size (a_name: like size)
        -- Set 'size' with 'a_name'.
      do
        size := a_name
      ensure
        size_set: size = a_name
      end

    set_total_pages (a_name: like total_pages)
        -- Set 'total_pages' with 'a_name'.
      do
        total_pages := a_name
      ensure
        total_pages_set: total_pages = a_name
      end

    set_total_elements (a_name: like total_elements)
        -- Set 'total_elements' with 'a_name'.
      do
        total_elements := a_name
      ensure
        total_elements_set: total_elements = a_name
      end

    set_sort (a_name: like sort)
        -- Set 'sort' with 'a_name'.
      do
        sort := a_name
      ensure
        sort_set: sort = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PAGINATION%N")
        if attached current_page as l_current_page then
          Result.append ("%Ncurrent_page:")
          Result.append (l_current_page.out)
          Result.append ("%N")
        end
        if attached size as l_size then
          Result.append ("%Nsize:")
          Result.append (l_size.out)
          Result.append ("%N")
        end
        if attached total_pages as l_total_pages then
          Result.append ("%Ntotal_pages:")
          Result.append (l_total_pages.out)
          Result.append ("%N")
        end
        if attached total_elements as l_total_elements then
          Result.append ("%Ntotal_elements:")
          Result.append (l_total_elements.out)
          Result.append ("%N")
        end
        if attached sort as l_sort then
          across l_sort as ic loop
            Result.append ("%N sort:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

