/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.\nThis specification documents all available endpoints in the latest version of the API.\n
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASQueryComment
 */
public class OASQueryComment implements OAS.MappedProperties {
    /**
     * Sequence number of the comment/action in the query history
     * @return sequence
     */
    public Integer sequence { get; set; }

    /**
     * Status of the query after this comment (e.g., Open, Closed)
     * @return annotationStatus
     */
    public String annotationStatus { get; set; }

    /**
     * Username of the user who made the comment or action
     * @return user
     */
    public String user { get; set; }

    /**
     * Text of the comment
     * @return comment
     */
    public String comment { get; set; }

    /**
     * Whether the query was marked closed at this step
     * @return closed
     */
    public Boolean closed { get; set; }

    /**
     * Date of the comment or action
     * @return r_date
     */
    public String r_date { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'date' => 'r_date'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASQueryComment getExample() {
        OASQueryComment queryComment = new OASQueryComment();
          queryComment.sequence = 0;
          queryComment.annotationStatus = '';
          queryComment.user = '';
          queryComment.comment = '';
          queryComment.closed = true;
          queryComment.r_date = '';
        return queryComment;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQueryComment) {           
            OASQueryComment queryComment = (OASQueryComment) obj;
            return this.sequence == queryComment.sequence
                && this.annotationStatus == queryComment.annotationStatus
                && this.user == queryComment.user
                && this.comment == queryComment.comment
                && this.closed == queryComment.closed
                && this.r_date == queryComment.r_date;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (sequence == null ? 0 : System.hashCode(sequence));
        hashCode = (17 * hashCode) + (annotationStatus == null ? 0 : System.hashCode(annotationStatus));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        hashCode = (17 * hashCode) + (comment == null ? 0 : System.hashCode(comment));
        hashCode = (17 * hashCode) + (closed == null ? 0 : System.hashCode(closed));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        return hashCode;
    }
}

