/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.\nThis specification documents all available endpoints in the latest version of the API.\n
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASRecord
 */
public class OASRecord {
    /**
     * Unique study key
     * @return studyKey
     */
    public String studyKey { get; set; }

    /**
     * Interval ID (visit definition) that this record is associated with
     * @return intervalId
     */
    public Integer intervalId { get; set; }

    /**
     * Form ID of the form this record instance belongs to
     * @return formId
     */
    public Integer formId { get; set; }

    /**
     * Form key of the form for this record instance
     * @return formKey
     */
    public String formKey { get; set; }

    /**
     * Site ID associated with the record
     * @return siteId
     */
    public Integer siteId { get; set; }

    /**
     * Unique record ID
     * @return recordId
     */
    public Integer recordId { get; set; }

    /**
     * Client-assigned record OID
     * @return recordOid
     */
    public String recordOid { get; set; }

    /**
     * Type of record (e.g., SUBJECT for subject-related forms)
     * @return recordType
     */
    public String recordType { get; set; }

    /**
     * Current status of the record (e.g., Record Incomplete, Record Complete)
     * @return recordStatus
     */
    public String recordStatus { get; set; }

    /**
     * Whether the record is marked as deleted
     * @return deleted
     */
    public Boolean deleted { get; set; }

    /**
     * Date when this record was created
     * @return dateCreated
     */
    public String dateCreated { get; set; }

    /**
     * Date when this record was last modified
     * @return dateModified
     */
    public String dateModified { get; set; }

    /**
     * Mednet subject ID that this record is associated with
     * @return subjectId
     */
    public Integer subjectId { get; set; }

    /**
     * Client-assigned subject OID for the subject this record is associated with
     * @return subjectOid
     */
    public String subjectOid { get; set; }

    /**
     * Subject display ID that this record is associated with
     * @return subjectKey
     */
    public String subjectKey { get; set; }

    /**
     * Visit instance ID that this record is associated with (if applicable)
     * @return visitId
     */
    public Integer visitId { get; set; }

    /**
     * Record ID of the parent record if this record is a subrecord (if applicable)
     * @return parentRecordId
     */
    public Integer parentRecordId { get; set; }

    /**
     * List of keywords associated with the record
     * @return keywords
     */
    public List<OASKeyword> keywords { get; set; }

    /**
     * Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.
     * @return recordData
     */
    public Map<String, oas_any_type_not_mapped> recordData { get; set; }

    public OASRecord() {
        keywords = new List<OASKeyword>();
        recordData = new Map<String, oas_any_type_not_mapped>();
    }

    public static OASRecord getExample() {
        OASRecord record = new OASRecord();
          record.studyKey = '';
          record.intervalId = 0;
          record.formId = 0;
          record.formKey = '';
          record.siteId = 0;
          record.recordId = 0;
          record.recordOid = '';
          record.recordType = '';
          record.recordStatus = '';
          record.deleted = true;
          record.dateCreated = '';
          record.dateModified = '';
          record.subjectId = 0;
          record.subjectOid = '';
          record.subjectKey = '';
          record.visitId = 0;
          record.parentRecordId = 0;
          record.keywords = new List<OASKeyword>{OASKeyword.getExample()};
          record.recordData = new Map<String, oas_any_type_not_mapped>{'key'=>oas_any_type_not_mapped.getExample()};
        return record;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRecord) {           
            OASRecord record = (OASRecord) obj;
            return this.studyKey == record.studyKey
                && this.intervalId == record.intervalId
                && this.formId == record.formId
                && this.formKey == record.formKey
                && this.siteId == record.siteId
                && this.recordId == record.recordId
                && this.recordOid == record.recordOid
                && this.recordType == record.recordType
                && this.recordStatus == record.recordStatus
                && this.deleted == record.deleted
                && this.dateCreated == record.dateCreated
                && this.dateModified == record.dateModified
                && this.subjectId == record.subjectId
                && this.subjectOid == record.subjectOid
                && this.subjectKey == record.subjectKey
                && this.visitId == record.visitId
                && this.parentRecordId == record.parentRecordId
                && this.keywords == record.keywords
                && this.recordData == record.recordData;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (studyKey == null ? 0 : System.hashCode(studyKey));
        hashCode = (17 * hashCode) + (intervalId == null ? 0 : System.hashCode(intervalId));
        hashCode = (17 * hashCode) + (formId == null ? 0 : System.hashCode(formId));
        hashCode = (17 * hashCode) + (formKey == null ? 0 : System.hashCode(formKey));
        hashCode = (17 * hashCode) + (siteId == null ? 0 : System.hashCode(siteId));
        hashCode = (17 * hashCode) + (recordId == null ? 0 : System.hashCode(recordId));
        hashCode = (17 * hashCode) + (recordOid == null ? 0 : System.hashCode(recordOid));
        hashCode = (17 * hashCode) + (recordType == null ? 0 : System.hashCode(recordType));
        hashCode = (17 * hashCode) + (recordStatus == null ? 0 : System.hashCode(recordStatus));
        hashCode = (17 * hashCode) + (deleted == null ? 0 : System.hashCode(deleted));
        hashCode = (17 * hashCode) + (dateCreated == null ? 0 : System.hashCode(dateCreated));
        hashCode = (17 * hashCode) + (dateModified == null ? 0 : System.hashCode(dateModified));
        hashCode = (17 * hashCode) + (subjectId == null ? 0 : System.hashCode(subjectId));
        hashCode = (17 * hashCode) + (subjectOid == null ? 0 : System.hashCode(subjectOid));
        hashCode = (17 * hashCode) + (subjectKey == null ? 0 : System.hashCode(subjectKey));
        hashCode = (17 * hashCode) + (visitId == null ? 0 : System.hashCode(visitId));
        hashCode = (17 * hashCode) + (parentRecordId == null ? 0 : System.hashCode(parentRecordId));
        hashCode = (17 * hashCode) + (keywords == null ? 0 : System.hashCode(keywords));
        hashCode = (17 * hashCode) + (recordData == null ? 0 : System.hashCode(recordData));
        return hashCode;
    }
}

