/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.\nThis specification documents all available endpoints in the latest version of the API.\n
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASComponentsSchemasRecordCreateRequ
 */
public class OASComponentsSchemasRecordCreateRequ {
    /**
     * Form key identifying the eCRF to create or update
     * @return formKey
     */
    public String formKey { get; set; }

    /**
     * Form ID identifying the eCRF to create or update (alternative to formKey)
     * @return formId
     */
    public Integer formId { get; set; }

    /**
     * Name of the site where the record should be created (for new subject registration)
     * @return siteName
     */
    public String siteName { get; set; }

    /**
     * Site ID for the record (alternative to siteName)
     * @return siteId
     */
    public Integer siteId { get; set; }

    /**
     * Subject identifier (display ID) for which to create or update the record
     * @return subjectKey
     */
    public String subjectKey { get; set; }

    /**
     * Subject ID for which to create or update the record (alternative to subjectKey)
     * @return subjectId
     */
    public Integer subjectId { get; set; }

    /**
     * Subject OID for which to create or update the record (alternative to subjectKey)
     * @return subjectOid
     */
    public String subjectOid { get; set; }

    /**
     * Name of the interval (visit) for a scheduled record update
     * @return intervalName
     */
    public String intervalName { get; set; }

    /**
     * Interval ID for a scheduled record update (alternative to intervalName)
     * @return intervalId
     */
    public Integer intervalId { get; set; }

    /**
     * Record ID for updating an existing unscheduled record (if applicable)
     * @return recordId
     */
    public Integer recordId { get; set; }

    /**
     * Record OID for updating an existing unscheduled record (if applicable)
     * @return recordOid
     */
    public String recordOid { get; set; }

    /**
     * Key-value pairs of field names and values for the record data
     * @return data
     */
    public Map<String, oas_any_type_not_mapped> data { get; set; }

    public OASComponentsSchemasRecordCreateRequ() {
        data = new Map<String, oas_any_type_not_mapped>();
    }

    public static OASComponentsSchemasRecordCreateRequ getExample() {
        OASComponentsSchemasRecordCreateRequ componentsSchemasRecordCreateRequestItem = new OASComponentsSchemasRecordCreateRequ();
          componentsSchemasRecordCreateRequestItem.formKey = '';
          componentsSchemasRecordCreateRequestItem.formId = 0;
          componentsSchemasRecordCreateRequestItem.siteName = '';
          componentsSchemasRecordCreateRequestItem.siteId = 0;
          componentsSchemasRecordCreateRequestItem.subjectKey = '';
          componentsSchemasRecordCreateRequestItem.subjectId = 0;
          componentsSchemasRecordCreateRequestItem.subjectOid = '';
          componentsSchemasRecordCreateRequestItem.intervalName = '';
          componentsSchemasRecordCreateRequestItem.intervalId = 0;
          componentsSchemasRecordCreateRequestItem.recordId = 0;
          componentsSchemasRecordCreateRequestItem.recordOid = '';
          componentsSchemasRecordCreateRequestItem.data = new Map<String, oas_any_type_not_mapped>{'key'=>oas_any_type_not_mapped.getExample()};
        return componentsSchemasRecordCreateRequestItem;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComponentsSchemasRecordCreateRequ) {           
            OASComponentsSchemasRecordCreateRequ componentsSchemasRecordCreateRequestItem = (OASComponentsSchemasRecordCreateRequ) obj;
            return this.formKey == componentsSchemasRecordCreateRequestItem.formKey
                && this.formId == componentsSchemasRecordCreateRequestItem.formId
                && this.siteName == componentsSchemasRecordCreateRequestItem.siteName
                && this.siteId == componentsSchemasRecordCreateRequestItem.siteId
                && this.subjectKey == componentsSchemasRecordCreateRequestItem.subjectKey
                && this.subjectId == componentsSchemasRecordCreateRequestItem.subjectId
                && this.subjectOid == componentsSchemasRecordCreateRequestItem.subjectOid
                && this.intervalName == componentsSchemasRecordCreateRequestItem.intervalName
                && this.intervalId == componentsSchemasRecordCreateRequestItem.intervalId
                && this.recordId == componentsSchemasRecordCreateRequestItem.recordId
                && this.recordOid == componentsSchemasRecordCreateRequestItem.recordOid
                && this.data == componentsSchemasRecordCreateRequestItem.data;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (formKey == null ? 0 : System.hashCode(formKey));
        hashCode = (17 * hashCode) + (formId == null ? 0 : System.hashCode(formId));
        hashCode = (17 * hashCode) + (siteName == null ? 0 : System.hashCode(siteName));
        hashCode = (17 * hashCode) + (siteId == null ? 0 : System.hashCode(siteId));
        hashCode = (17 * hashCode) + (subjectKey == null ? 0 : System.hashCode(subjectKey));
        hashCode = (17 * hashCode) + (subjectId == null ? 0 : System.hashCode(subjectId));
        hashCode = (17 * hashCode) + (subjectOid == null ? 0 : System.hashCode(subjectOid));
        hashCode = (17 * hashCode) + (intervalName == null ? 0 : System.hashCode(intervalName));
        hashCode = (17 * hashCode) + (intervalId == null ? 0 : System.hashCode(intervalId));
        hashCode = (17 * hashCode) + (recordId == null ? 0 : System.hashCode(recordId));
        hashCode = (17 * hashCode) + (recordOid == null ? 0 : System.hashCode(recordOid));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        return hashCode;
    }
}

