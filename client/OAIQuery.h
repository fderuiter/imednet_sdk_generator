/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuery.h
 *
 * 
 */

#ifndef OAIQuery_H
#define OAIQuery_H

#include <QJsonObject>

#include "OAIQueryComment.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryComment;

class OAIQuery : public OAIObject {
public:
    OAIQuery();
    OAIQuery(QString json);
    ~OAIQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getSubjectId() const;
    void setSubjectId(const qint32 &subject_id);
    bool is_subject_id_Set() const;
    bool is_subject_id_Valid() const;

    QString getSubjectOid() const;
    void setSubjectOid(const QString &subject_oid);
    bool is_subject_oid_Set() const;
    bool is_subject_oid_Valid() const;

    QString getAnnotationType() const;
    void setAnnotationType(const QString &annotation_type);
    bool is_annotation_type_Set() const;
    bool is_annotation_type_Valid() const;

    qint32 getAnnotationId() const;
    void setAnnotationId(const qint32 &annotation_id);
    bool is_annotation_id_Set() const;
    bool is_annotation_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getRecordId() const;
    void setRecordId(const qint32 &record_id);
    bool is_record_id_Set() const;
    bool is_record_id_Valid() const;

    QString getVariable() const;
    void setVariable(const QString &variable);
    bool is_variable_Set() const;
    bool is_variable_Valid() const;

    QString getSubjectKey() const;
    void setSubjectKey(const QString &subject_key);
    bool is_subject_key_Set() const;
    bool is_subject_key_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QList<OAIQueryComment> getQueryComments() const;
    void setQueryComments(const QList<OAIQueryComment> &query_comments);
    bool is_query_comments_Set() const;
    bool is_query_comments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_subject_id;
    bool m_subject_id_isSet;
    bool m_subject_id_isValid;

    QString m_subject_oid;
    bool m_subject_oid_isSet;
    bool m_subject_oid_isValid;

    QString m_annotation_type;
    bool m_annotation_type_isSet;
    bool m_annotation_type_isValid;

    qint32 m_annotation_id;
    bool m_annotation_id_isSet;
    bool m_annotation_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_record_id;
    bool m_record_id_isSet;
    bool m_record_id_isValid;

    QString m_variable;
    bool m_variable_isSet;
    bool m_variable_isValid;

    QString m_subject_key;
    bool m_subject_key_isSet;
    bool m_subject_key_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QList<OAIQueryComment> m_query_comments;
    bool m_query_comments_isSet;
    bool m_query_comments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuery)

#endif // OAIQuery_H
