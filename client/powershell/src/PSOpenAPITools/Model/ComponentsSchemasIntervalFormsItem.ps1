#
# Mednet EDC API
# The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
# Version: 1.3.6
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER FormId
Form ID scheduled in the interval
.PARAMETER FormKey
Form key scheduled in the interval
.PARAMETER FormName
Form name scheduled in the interval
.OUTPUTS

ComponentsSchemasIntervalFormsItem<PSCustomObject>
#>

function Initialize-ComponentsSchemasIntervalFormsItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FormId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FormKey},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FormName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ComponentsSchemasIntervalFormsItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "formId" = ${FormId}
            "formKey" = ${FormKey}
            "formName" = ${FormName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ComponentsSchemasIntervalFormsItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to ComponentsSchemasIntervalFormsItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ComponentsSchemasIntervalFormsItem<PSCustomObject>
#>
function ConvertFrom-JsonToComponentsSchemasIntervalFormsItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ComponentsSchemasIntervalFormsItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ComponentsSchemasIntervalFormsItem
        $AllProperties = ("formId", "formKey", "formName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "formId"))) { #optional property not found
            $FormId = $null
        } else {
            $FormId = $JsonParameters.PSobject.Properties["formId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "formKey"))) { #optional property not found
            $FormKey = $null
        } else {
            $FormKey = $JsonParameters.PSobject.Properties["formKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "formName"))) { #optional property not found
            $FormName = $null
        } else {
            $FormName = $JsonParameters.PSobject.Properties["formName"].value
        }

        $PSO = [PSCustomObject]@{
            "formId" = ${FormId}
            "formKey" = ${FormKey}
            "formName" = ${FormName}
        }

        return $PSO
    }

}

