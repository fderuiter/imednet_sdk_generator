#
# Mednet EDC API
# The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
# Version: 1.3.6
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER KeywordName
Name of the keyword
.PARAMETER KeywordKey
Key of the keyword (short code)
.PARAMETER KeywordId
Internal keyword ID
.PARAMETER DateAdded
Date when this keyword was added
.OUTPUTS

Keyword<PSCustomObject>
#>

function Initialize-Keyword {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeywordName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeywordKey},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${KeywordId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateAdded}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Keyword' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "keywordName" = ${KeywordName}
            "keywordKey" = ${KeywordKey}
            "keywordId" = ${KeywordId}
            "dateAdded" = ${DateAdded}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Keyword<PSCustomObject>

.DESCRIPTION

Convert from JSON to Keyword<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Keyword<PSCustomObject>
#>
function ConvertFrom-JsonToKeyword {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Keyword' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Keyword
        $AllProperties = ("keywordName", "keywordKey", "keywordId", "dateAdded")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywordName"))) { #optional property not found
            $KeywordName = $null
        } else {
            $KeywordName = $JsonParameters.PSobject.Properties["keywordName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywordKey"))) { #optional property not found
            $KeywordKey = $null
        } else {
            $KeywordKey = $JsonParameters.PSobject.Properties["keywordKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywordId"))) { #optional property not found
            $KeywordId = $null
        } else {
            $KeywordId = $JsonParameters.PSobject.Properties["keywordId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateAdded"))) { #optional property not found
            $DateAdded = $null
        } else {
            $DateAdded = $JsonParameters.PSobject.Properties["dateAdded"].value
        }

        $PSO = [PSCustomObject]@{
            "keywordName" = ${KeywordName}
            "keywordKey" = ${KeywordKey}
            "keywordId" = ${KeywordId}
            "dateAdded" = ${DateAdded}
        }

        return $PSO
    }

}

