#
# Mednet EDC API
# The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
# Version: 1.3.6
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER SponsorKey
Sponsor key that this study belongs to
.PARAMETER StudyKey
Unique study key
.PARAMETER StudyId
Mednet study ID (internal numeric identifier)
.PARAMETER StudyName
Name of the study
.PARAMETER StudyDescription
Description of the study
.PARAMETER StudyType
Type of study (e.g., STUDY)
.PARAMETER DateCreated
Date when the study record was created
.PARAMETER DateModified
Date when the study record was last modified
.OUTPUTS

Study<PSCustomObject>
#>

function Initialize-Study {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SponsorKey},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StudyKey},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${StudyId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StudyName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StudyDescription},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StudyType},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateCreated},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateModified}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Study' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "sponsorKey" = ${SponsorKey}
            "studyKey" = ${StudyKey}
            "studyId" = ${StudyId}
            "studyName" = ${StudyName}
            "studyDescription" = ${StudyDescription}
            "studyType" = ${StudyType}
            "dateCreated" = ${DateCreated}
            "dateModified" = ${DateModified}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Study<PSCustomObject>

.DESCRIPTION

Convert from JSON to Study<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Study<PSCustomObject>
#>
function ConvertFrom-JsonToStudy {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Study' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Study
        $AllProperties = ("sponsorKey", "studyKey", "studyId", "studyName", "studyDescription", "studyType", "dateCreated", "dateModified")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sponsorKey"))) { #optional property not found
            $SponsorKey = $null
        } else {
            $SponsorKey = $JsonParameters.PSobject.Properties["sponsorKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "studyKey"))) { #optional property not found
            $StudyKey = $null
        } else {
            $StudyKey = $JsonParameters.PSobject.Properties["studyKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "studyId"))) { #optional property not found
            $StudyId = $null
        } else {
            $StudyId = $JsonParameters.PSobject.Properties["studyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "studyName"))) { #optional property not found
            $StudyName = $null
        } else {
            $StudyName = $JsonParameters.PSobject.Properties["studyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "studyDescription"))) { #optional property not found
            $StudyDescription = $null
        } else {
            $StudyDescription = $JsonParameters.PSobject.Properties["studyDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "studyType"))) { #optional property not found
            $StudyType = $null
        } else {
            $StudyType = $JsonParameters.PSobject.Properties["studyType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateCreated"))) { #optional property not found
            $DateCreated = $null
        } else {
            $DateCreated = $JsonParameters.PSobject.Properties["dateCreated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateModified"))) { #optional property not found
            $DateModified = $null
        } else {
            $DateModified = $JsonParameters.PSobject.Properties["dateModified"].value
        }

        $PSO = [PSCustomObject]@{
            "sponsorKey" = ${SponsorKey}
            "studyKey" = ${StudyKey}
            "studyId" = ${StudyId}
            "studyName" = ${StudyName}
            "studyDescription" = ${StudyDescription}
            "studyType" = ${StudyType}
            "dateCreated" = ${DateCreated}
            "dateModified" = ${DateModified}
        }

        return $PSO
    }

}

