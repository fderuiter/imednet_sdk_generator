# NOTE: This file is auto generated by OpenAPI Generator 7.14.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MednetEDCAPI.Api.Jobs do
  @moduledoc """
  API calls for all endpoints tagged `Jobs`.
  """

  alias MednetEDCAPI.Connection
  import MednetEDCAPI.RequestBuilder

  @doc """
  Retrieve job status by batch ID

  ### Parameters

  - `connection` (MednetEDCAPI.Connection): Connection to server
  - `study_key` (String.t): Study key identifying the study context for the request
  - `batch_id` (String.t): Batch ID of the job to retrieve
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MednetEDCAPI.Model.Job.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_job_status(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, MednetEDCAPI.Model.Job.t} | {:ok, MednetEDCAPI.Model.InlineObject1.t} | {:ok, MednetEDCAPI.Model.InlineObject.t} | {:ok, MednetEDCAPI.Model.InlineObject5.t} | {:ok, MednetEDCAPI.Model.InlineObject3.t} | {:ok, MednetEDCAPI.Model.InlineObject2.t} | {:error, Tesla.Env.t}
  def get_job_status(connection, study_key, batch_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/studies/#{study_key}/jobs/#{batch_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MednetEDCAPI.Model.Job},
      {400, MednetEDCAPI.Model.InlineObject},
      {401, MednetEDCAPI.Model.InlineObject1},
      {403, MednetEDCAPI.Model.InlineObject2},
      {404, MednetEDCAPI.Model.InlineObject3},
      {500, MednetEDCAPI.Model.InlineObject5}
    ])
  end
end
