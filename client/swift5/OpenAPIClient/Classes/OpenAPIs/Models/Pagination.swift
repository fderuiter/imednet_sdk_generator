//
// Pagination.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Pagination: Codable, JSONEncodable, Hashable {

    /** Current index page returned */
    public var currentPage: Int?
    /** Number of items per page returned */
    public var size: Int?
    /** Total number of pages available */
    public var totalPages: Int?
    /** Total number of elements (items) available */
    public var totalElements: Int?
    public var sort: [Sort]?

    public init(currentPage: Int? = nil, size: Int? = nil, totalPages: Int? = nil, totalElements: Int? = nil, sort: [Sort]? = nil) {
        self.currentPage = currentPage
        self.size = size
        self.totalPages = totalPages
        self.totalElements = totalElements
        self.sort = sort
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case currentPage
        case size
        case totalPages
        case totalElements
        case sort
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(currentPage, forKey: .currentPage)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(totalPages, forKey: .totalPages)
        try container.encodeIfPresent(totalElements, forKey: .totalElements)
        try container.encodeIfPresent(sort, forKey: .sort)
    }
}

