//
// Site.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Site: Codable, JSONEncodable, Hashable {

    /** Unique study key */
    public var studyKey: String?
    /** Unique site ID */
    public var siteId: Int?
    /** Name of the site */
    public var siteName: String?
    /** Enrollment status of the site */
    public var siteEnrollmentStatus: String?
    /** Date when this site was created */
    public var dateCreated: String?
    /** Date when this site was last modified */
    public var dateModified: String?

    public init(studyKey: String? = nil, siteId: Int? = nil, siteName: String? = nil, siteEnrollmentStatus: String? = nil, dateCreated: String? = nil, dateModified: String? = nil) {
        self.studyKey = studyKey
        self.siteId = siteId
        self.siteName = siteName
        self.siteEnrollmentStatus = siteEnrollmentStatus
        self.dateCreated = dateCreated
        self.dateModified = dateModified
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case studyKey
        case siteId
        case siteName
        case siteEnrollmentStatus
        case dateCreated
        case dateModified
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(studyKey, forKey: .studyKey)
        try container.encodeIfPresent(siteId, forKey: .siteId)
        try container.encodeIfPresent(siteName, forKey: .siteName)
        try container.encodeIfPresent(siteEnrollmentStatus, forKey: .siteEnrollmentStatus)
        try container.encodeIfPresent(dateCreated, forKey: .dateCreated)
        try container.encodeIfPresent(dateModified, forKey: .dateModified)
    }
}

