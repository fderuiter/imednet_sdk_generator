//
// JobsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class JobsAPI {

    /**
     Retrieve job status by batch ID
     
     - parameter studyKey: (path) Study key identifying the study context for the request 
     - parameter batchId: (path) Batch ID of the job to retrieve 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getJobStatus(studyKey: String, batchId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Job?, _ error: Error?) -> Void)) -> RequestTask {
        return getJobStatusWithRequestBuilder(studyKey: studyKey, batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve job status by batch ID
     - GET /studies/{studyKey}/jobs/{batchId}
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: apiKeyAuth
     - API Key:
       - type: apiKey x-imn-security-key (HEADER)
       - name: securityKeyAuth
     - parameter studyKey: (path) Study key identifying the study context for the request 
     - parameter batchId: (path) Batch ID of the job to retrieve 
     - returns: RequestBuilder<Job> 
     */
    open class func getJobStatusWithRequestBuilder(studyKey: String, batchId: String) -> RequestBuilder<Job> {
        var localVariablePath = "/studies/{studyKey}/jobs/{batchId}"
        let studyKeyPreEscape = "\(APIHelper.mapValueToPathItem(studyKey))"
        let studyKeyPostEscape = studyKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{studyKey}", with: studyKeyPostEscape, options: .literal, range: nil)
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Job>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
