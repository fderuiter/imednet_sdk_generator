/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ComponentsSchemasRecordCreateRequestItem model module.
 * @module model/ComponentsSchemasRecordCreateRequestItem
 * @version 1.3.6
 */
class ComponentsSchemasRecordCreateRequestItem {
    /**
     * @member {String} formKey
     * @type {String}
     */
    formKey;
    /**
     * @member {Number} formId
     * @type {Number}
     */
    formId;
    /**
     * @member {String} siteName
     * @type {String}
     */
    siteName;
    /**
     * @member {Number} siteId
     * @type {Number}
     */
    siteId;
    /**
     * @member {String} subjectKey
     * @type {String}
     */
    subjectKey;
    /**
     * @member {Number} subjectId
     * @type {Number}
     */
    subjectId;
    /**
     * @member {String} subjectOid
     * @type {String}
     */
    subjectOid;
    /**
     * @member {String} intervalName
     * @type {String}
     */
    intervalName;
    /**
     * @member {Number} intervalId
     * @type {Number}
     */
    intervalId;
    /**
     * @member {Number} recordId
     * @type {Number}
     */
    recordId;
    /**
     * @member {String} recordOid
     * @type {String}
     */
    recordOid;
    /**
     * @member {Object.<String, Object>} data
     * @type {Object.<String, Object>}
     */
    data;

    

    /**
     * Constructs a new <code>ComponentsSchemasRecordCreateRequestItem</code>.
     * @alias module:model/ComponentsSchemasRecordCreateRequestItem
     * @param formKey {String} Form key identifying the eCRF to create or update
     * @param data {Object.<String, Object>} Key-value pairs of field names and values for the record data
     */
    constructor(formKey, data) { 
        
        ComponentsSchemasRecordCreateRequestItem.initialize(this, formKey, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, formKey, data) { 
        obj['formKey'] = formKey;
        obj['data'] = data;
    }

    /**
     * Constructs a <code>ComponentsSchemasRecordCreateRequestItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComponentsSchemasRecordCreateRequestItem} obj Optional instance to populate.
     * @return {module:model/ComponentsSchemasRecordCreateRequestItem} The populated <code>ComponentsSchemasRecordCreateRequestItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComponentsSchemasRecordCreateRequestItem();

            if (data.hasOwnProperty('formKey')) {
                obj['formKey'] = ApiClient.convertToType(data['formKey'], 'String');
            }
            if (data.hasOwnProperty('formId')) {
                obj['formId'] = ApiClient.convertToType(data['formId'], 'Number');
            }
            if (data.hasOwnProperty('siteName')) {
                obj['siteName'] = ApiClient.convertToType(data['siteName'], 'String');
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'Number');
            }
            if (data.hasOwnProperty('subjectKey')) {
                obj['subjectKey'] = ApiClient.convertToType(data['subjectKey'], 'String');
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'Number');
            }
            if (data.hasOwnProperty('subjectOid')) {
                obj['subjectOid'] = ApiClient.convertToType(data['subjectOid'], 'String');
            }
            if (data.hasOwnProperty('intervalName')) {
                obj['intervalName'] = ApiClient.convertToType(data['intervalName'], 'String');
            }
            if (data.hasOwnProperty('intervalId')) {
                obj['intervalId'] = ApiClient.convertToType(data['intervalId'], 'Number');
            }
            if (data.hasOwnProperty('recordId')) {
                obj['recordId'] = ApiClient.convertToType(data['recordId'], 'Number');
            }
            if (data.hasOwnProperty('recordOid')) {
                obj['recordOid'] = ApiClient.convertToType(data['recordOid'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], {'String': Object});
            }
        }
        return obj;
    }
}



export default ComponentsSchemasRecordCreateRequestItem;

