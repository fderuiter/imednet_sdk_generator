/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComponents_schemas_Interval_forms_item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComponents_schemas_Interval_forms_item::OAIComponents_schemas_Interval_forms_item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComponents_schemas_Interval_forms_item::OAIComponents_schemas_Interval_forms_item() {
    this->initializeModel();
}

OAIComponents_schemas_Interval_forms_item::~OAIComponents_schemas_Interval_forms_item() {}

void OAIComponents_schemas_Interval_forms_item::initializeModel() {

    m_form_id_isSet = false;
    m_form_id_isValid = false;

    m_form_key_isSet = false;
    m_form_key_isValid = false;

    m_form_name_isSet = false;
    m_form_name_isValid = false;
}

void OAIComponents_schemas_Interval_forms_item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComponents_schemas_Interval_forms_item::fromJsonObject(QJsonObject json) {

    m_form_id_isValid = ::OpenAPI::fromJsonValue(m_form_id, json[QString("formId")]);
    m_form_id_isSet = !json[QString("formId")].isNull() && m_form_id_isValid;

    m_form_key_isValid = ::OpenAPI::fromJsonValue(m_form_key, json[QString("formKey")]);
    m_form_key_isSet = !json[QString("formKey")].isNull() && m_form_key_isValid;

    m_form_name_isValid = ::OpenAPI::fromJsonValue(m_form_name, json[QString("formName")]);
    m_form_name_isSet = !json[QString("formName")].isNull() && m_form_name_isValid;
}

QString OAIComponents_schemas_Interval_forms_item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComponents_schemas_Interval_forms_item::asJsonObject() const {
    QJsonObject obj;
    if (m_form_id_isSet) {
        obj.insert(QString("formId"), ::OpenAPI::toJsonValue(m_form_id));
    }
    if (m_form_key_isSet) {
        obj.insert(QString("formKey"), ::OpenAPI::toJsonValue(m_form_key));
    }
    if (m_form_name_isSet) {
        obj.insert(QString("formName"), ::OpenAPI::toJsonValue(m_form_name));
    }
    return obj;
}

qint32 OAIComponents_schemas_Interval_forms_item::getFormId() const {
    return m_form_id;
}
void OAIComponents_schemas_Interval_forms_item::setFormId(const qint32 &form_id) {
    m_form_id = form_id;
    m_form_id_isSet = true;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_id_Set() const{
    return m_form_id_isSet;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_id_Valid() const{
    return m_form_id_isValid;
}

QString OAIComponents_schemas_Interval_forms_item::getFormKey() const {
    return m_form_key;
}
void OAIComponents_schemas_Interval_forms_item::setFormKey(const QString &form_key) {
    m_form_key = form_key;
    m_form_key_isSet = true;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_key_Set() const{
    return m_form_key_isSet;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_key_Valid() const{
    return m_form_key_isValid;
}

QString OAIComponents_schemas_Interval_forms_item::getFormName() const {
    return m_form_name;
}
void OAIComponents_schemas_Interval_forms_item::setFormName(const QString &form_name) {
    m_form_name = form_name;
    m_form_name_isSet = true;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_name_Set() const{
    return m_form_name_isSet;
}

bool OAIComponents_schemas_Interval_forms_item::is_form_name_Valid() const{
    return m_form_name_isValid;
}

bool OAIComponents_schemas_Interval_forms_item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComponents_schemas_Interval_forms_item::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
