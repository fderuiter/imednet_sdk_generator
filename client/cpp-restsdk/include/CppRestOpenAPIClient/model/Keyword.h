/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Keyword.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Keyword_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Keyword_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  Keyword
    : public ModelBase
{
public:
    Keyword();
    virtual ~Keyword();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Keyword members


    /// <summary>
    /// Name of the keyword
    /// </summary>
    utility::string_t getKeywordName() const;
    bool keywordNameIsSet() const;
    void unsetKeywordName();
    void setKeywordName(const utility::string_t& value);

    /// <summary>
    /// Key of the keyword (short code)
    /// </summary>
    utility::string_t getKeywordKey() const;
    bool keywordKeyIsSet() const;
    void unsetKeywordKey();
    void setKeywordKey(const utility::string_t& value);

    /// <summary>
    /// Internal keyword ID
    /// </summary>
    int32_t getKeywordId() const;
    bool keywordIdIsSet() const;
    void unsetKeywordId();
    void setKeywordId(int32_t value);

    /// <summary>
    /// Date when this keyword was added
    /// </summary>
    utility::string_t getDateAdded() const;
    bool dateAddedIsSet() const;
    void unsetDateAdded();
    void setDateAdded(const utility::string_t& value);


protected:
    utility::string_t m_KeywordName;
    bool m_KeywordNameIsSet;

    utility::string_t m_KeywordKey;
    bool m_KeywordKeyIsSet;

    int32_t m_KeywordId;
    bool m_KeywordIdIsSet;

    utility::string_t m_DateAdded;
    bool m_DateAddedIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Keyword_H_ */
