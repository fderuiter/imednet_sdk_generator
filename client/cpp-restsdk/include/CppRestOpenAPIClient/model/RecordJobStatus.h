/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RecordJobStatus.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RecordJobStatus_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RecordJobStatus_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  RecordJobStatus
    : public ModelBase
{
public:
    RecordJobStatus();
    virtual ~RecordJobStatus();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// RecordJobStatus members


    /// <summary>
    /// Unique job identifier
    /// </summary>
    utility::string_t getJobId() const;
    bool jobIdIsSet() const;
    void unsetJobId();
    void setJobId(const utility::string_t& value);

    /// <summary>
    /// Batch ID used to track the job (identical to jobId in most cases)
    /// </summary>
    utility::string_t getBatchId() const;
    bool batchIdIsSet() const;
    void unsetBatchId();
    void setBatchId(const utility::string_t& value);

    /// <summary>
    /// Current state of the job (e.g., created, completed)
    /// </summary>
    utility::string_t getState() const;
    bool stateIsSet() const;
    void unsetState();
    void setState(const utility::string_t& value);


protected:
    utility::string_t m_JobId;
    bool m_JobIdIsSet;

    utility::string_t m_BatchId;
    bool m_BatchIdIsSet;

    utility::string_t m_State;
    bool m_StateIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RecordJobStatus_H_ */
