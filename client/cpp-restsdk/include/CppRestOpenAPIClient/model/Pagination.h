/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Pagination.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Pagination_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Pagination_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Sort.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Sort;


class  Pagination
    : public ModelBase
{
public:
    Pagination();
    virtual ~Pagination();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Pagination members


    /// <summary>
    /// Current index page returned
    /// </summary>
    int32_t getCurrentPage() const;
    bool currentPageIsSet() const;
    void unsetCurrentPage();
    void setCurrentPage(int32_t value);

    /// <summary>
    /// Number of items per page returned
    /// </summary>
    int32_t getSize() const;
    bool sizeIsSet() const;
    void unsetSize();
    void setSize(int32_t value);

    /// <summary>
    /// Total number of pages available
    /// </summary>
    int32_t getTotalPages() const;
    bool totalPagesIsSet() const;
    void unsetTotalPages();
    void setTotalPages(int32_t value);

    /// <summary>
    /// Total number of elements (items) available
    /// </summary>
    int32_t getTotalElements() const;
    bool totalElementsIsSet() const;
    void unsetTotalElements();
    void setTotalElements(int32_t value);

    std::vector<std::shared_ptr<Sort>> getSort() const;
    bool sortIsSet() const;
    void unsetSort();
    void setSort(const std::vector<std::shared_ptr<Sort>>& value);


protected:
    int32_t m_CurrentPage;
    bool m_CurrentPageIsSet;

    int32_t m_Size;
    bool m_SizeIsSet;

    int32_t m_TotalPages;
    bool m_TotalPagesIsSet;

    int32_t m_TotalElements;
    bool m_TotalElementsIsSet;

    std::vector<std::shared_ptr<Sort>> m_Sort;
    bool m_SortIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Pagination_H_ */
