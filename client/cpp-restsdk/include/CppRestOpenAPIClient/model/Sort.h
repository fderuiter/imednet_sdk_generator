/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Sort.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Sort_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Sort_H_

#include <stdexcept>

#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  Sort
    : public ModelBase
{
public:
    Sort();
    virtual ~Sort();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Sort members

    enum class DirectionEnum
    {
        ASC,
        DESC,
    };
    /// <summary>
    /// Sort direction (ASC or DESC)
    /// </summary>

    DirectionEnum toDirectionEnum(const utility::string_t& value) const;
    const utility::string_t fromDirectionEnum(const DirectionEnum value) const;


    /// <summary>
    /// Name of the property by which the result is sorted
    /// </summary>
    utility::string_t getProperty() const;
    bool propertyIsSet() const;
    void unsetProperty();
    void setProperty(const utility::string_t& value);

    /// <summary>
    /// Sort direction (ASC or DESC)
    /// </summary>
    DirectionEnum getDirection() const;
    bool directionIsSet() const;
    void unsetDirection();
    void setDirection(const DirectionEnum value);


protected:
    utility::string_t m_Property;
    bool m_PropertyIsSet;

    DirectionEnum m_Direction;
    bool m_DirectionIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Sort_H_ */
