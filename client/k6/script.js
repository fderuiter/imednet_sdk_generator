/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * OpenAPI spec version: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.14.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://edc.prod.imednetapi.com/api/v1/edc";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.
let xImnSecurityKey = "TODO_EDIT_THE_X-IMN-SECURITY-KEY";
let xApiKey = "TODO_EDIT_THE_X-API-KEY";

export default function() {
    group("/studies/{studyKey}/visits", () => {

        // Request No. 1: listVisits
        {
            let url = BASE_URL + `/studies/${studyKey}/visits`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of visits": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/forms", () => {

        // Request No. 1: listForms
        {
            let url = BASE_URL + `/studies/${studyKey}/forms`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of forms": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/users", () => {

        // Request No. 1: listUsers
        {
            let url = BASE_URL + `/studies/${studyKey}/users`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of users": (r) => r.status === 200
            });
        }
    });

    group("/studies", () => {

        // Request No. 1: listStudies
        {
            let url = BASE_URL + `/studies`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of studies": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/queries", () => {

        // Request No. 1: listQueries
        {
            let url = BASE_URL + `/studies/${studyKey}/queries`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of queries": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/jobs/{batchId}", () => {

        // Request No. 1: getJobStatus
        {
            let url = BASE_URL + `/studies/${studyKey}/jobs/${batchId}`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with job status information": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/records", () => {

        // Request No. 1: listRecords
        {
            let url = BASE_URL + `/studies/${studyKey}/records`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of records": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2: createRecords
        {
            let url = BASE_URL + `/studies/${studyKey}/records`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "Accepted request for record creation. Returns a job identifier to check status.": (r) => r.status === 202
            });
        }
    });

    group("/studies/{studyKey}/sites", () => {

        // Request No. 1: listSites
        {
            let url = BASE_URL + `/studies/${studyKey}/sites`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of sites": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/intervals", () => {

        // Request No. 1: listIntervals
        {
            let url = BASE_URL + `/studies/${studyKey}/intervals`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of intervals": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/subjects", () => {

        // Request No. 1: listSubjects
        {
            let url = BASE_URL + `/studies/${studyKey}/subjects`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of subjects": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/variables", () => {

        // Request No. 1: listVariables
        {
            let url = BASE_URL + `/studies/${studyKey}/variables`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of variables": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/recordRevisions", () => {

        // Request No. 1: listRecordRevisions
        {
            let url = BASE_URL + `/studies/${studyKey}/recordRevisions`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of record revisions": (r) => r.status === 200
            });
        }
    });

    group("/studies/{studyKey}/codings", () => {

        // Request No. 1: listCodings
        {
            let url = BASE_URL + `/studies/${studyKey}/codings`;
            let params = {
                headers: {
                    "x-api-key": `${xApiKey}`, "x-imn-security-key": `${xImnSecurityKey}`, "Accept": "application/json"
                }
            };
            let request = http.get(url, params);

            check(request, {
                "Successful response with list of coding entries": (r) => r.status === 200
            });
        }
    });

}
