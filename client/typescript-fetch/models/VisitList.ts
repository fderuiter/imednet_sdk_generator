/* tslint:disable */
/* eslint-disable */
/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { Visit } from './Visit';
import {
    VisitFromJSON,
    VisitFromJSONTyped,
    VisitToJSON,
    VisitToJSONTyped,
} from './Visit';
import type { Metadata } from './Metadata';
import {
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
    MetadataToJSONTyped,
} from './Metadata';

/**
 * 
 * @export
 * @interface VisitList
 */
export interface VisitList {
    /**
     * 
     * @type {Metadata}
     * @memberof VisitList
     */
    metadata?: Metadata;
    /**
     * 
     * @type {Pagination}
     * @memberof VisitList
     */
    pagination?: Pagination;
    /**
     * 
     * @type {Array<Visit>}
     * @memberof VisitList
     */
    data?: Array<Visit>;
}

/**
 * Check if a given object implements the VisitList interface.
 */
export function instanceOfVisitList(value: object): value is VisitList {
    return true;
}

export function VisitListFromJSON(json: any): VisitList {
    return VisitListFromJSONTyped(json, false);
}

export function VisitListFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisitList {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': json['metadata'] == null ? undefined : MetadataFromJSON(json['metadata']),
        'pagination': json['pagination'] == null ? undefined : PaginationFromJSON(json['pagination']),
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(VisitFromJSON)),
    };
}

export function VisitListToJSON(json: any): VisitList {
    return VisitListToJSONTyped(json, false);
}

export function VisitListToJSONTyped(value?: VisitList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'metadata': MetadataToJSON(value['metadata']),
        'pagination': PaginationToJSON(value['pagination']),
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(VisitToJSON)),
    };
}

