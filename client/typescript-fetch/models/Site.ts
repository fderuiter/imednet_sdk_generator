/* tslint:disable */
/* eslint-disable */
/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Site
 */
export interface Site {
    /**
     * Unique study key
     * @type {string}
     * @memberof Site
     */
    studyKey?: string;
    /**
     * Unique site ID
     * @type {number}
     * @memberof Site
     */
    siteId?: number;
    /**
     * Name of the site
     * @type {string}
     * @memberof Site
     */
    siteName?: string;
    /**
     * Enrollment status of the site
     * @type {string}
     * @memberof Site
     */
    siteEnrollmentStatus?: string;
    /**
     * Date when this site was created
     * @type {string}
     * @memberof Site
     */
    dateCreated?: string;
    /**
     * Date when this site was last modified
     * @type {string}
     * @memberof Site
     */
    dateModified?: string;
}

/**
 * Check if a given object implements the Site interface.
 */
export function instanceOfSite(value: object): value is Site {
    return true;
}

export function SiteFromJSON(json: any): Site {
    return SiteFromJSONTyped(json, false);
}

export function SiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Site {
    if (json == null) {
        return json;
    }
    return {
        
        'studyKey': json['studyKey'] == null ? undefined : json['studyKey'],
        'siteId': json['siteId'] == null ? undefined : json['siteId'],
        'siteName': json['siteName'] == null ? undefined : json['siteName'],
        'siteEnrollmentStatus': json['siteEnrollmentStatus'] == null ? undefined : json['siteEnrollmentStatus'],
        'dateCreated': json['dateCreated'] == null ? undefined : json['dateCreated'],
        'dateModified': json['dateModified'] == null ? undefined : json['dateModified'],
    };
}

export function SiteToJSON(json: any): Site {
    return SiteToJSONTyped(json, false);
}

export function SiteToJSONTyped(value?: Site | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'studyKey': value['studyKey'],
        'siteId': value['siteId'],
        'siteName': value['siteName'],
        'siteEnrollmentStatus': value['siteEnrollmentStatus'],
        'dateCreated': value['dateCreated'],
        'dateModified': value['dateModified'],
    };
}

