/* tslint:disable */
/* eslint-disable */
/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Keyword
 */
export interface Keyword {
    /**
     * Name of the keyword
     * @type {string}
     * @memberof Keyword
     */
    keywordName?: string;
    /**
     * Key of the keyword (short code)
     * @type {string}
     * @memberof Keyword
     */
    keywordKey?: string;
    /**
     * Internal keyword ID
     * @type {number}
     * @memberof Keyword
     */
    keywordId?: number;
    /**
     * Date when this keyword was added
     * @type {string}
     * @memberof Keyword
     */
    dateAdded?: string;
}

/**
 * Check if a given object implements the Keyword interface.
 */
export function instanceOfKeyword(value: object): value is Keyword {
    return true;
}

export function KeywordFromJSON(json: any): Keyword {
    return KeywordFromJSONTyped(json, false);
}

export function KeywordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Keyword {
    if (json == null) {
        return json;
    }
    return {
        
        'keywordName': json['keywordName'] == null ? undefined : json['keywordName'],
        'keywordKey': json['keywordKey'] == null ? undefined : json['keywordKey'],
        'keywordId': json['keywordId'] == null ? undefined : json['keywordId'],
        'dateAdded': json['dateAdded'] == null ? undefined : json['dateAdded'],
    };
}

export function KeywordToJSON(json: any): Keyword {
    return KeywordToJSONTyped(json, false);
}

export function KeywordToJSONTyped(value?: Keyword | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'keywordName': value['keywordName'],
        'keywordKey': value['keywordKey'],
        'keywordId': value['keywordId'],
        'dateAdded': value['dateAdded'],
    };
}

