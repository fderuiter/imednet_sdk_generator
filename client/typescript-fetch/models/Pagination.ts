/* tslint:disable */
/* eslint-disable */
/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Sort } from './Sort';
import {
    SortFromJSON,
    SortFromJSONTyped,
    SortToJSON,
    SortToJSONTyped,
} from './Sort';

/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * Current index page returned
     * @type {number}
     * @memberof Pagination
     */
    currentPage?: number;
    /**
     * Number of items per page returned
     * @type {number}
     * @memberof Pagination
     */
    size?: number;
    /**
     * Total number of pages available
     * @type {number}
     * @memberof Pagination
     */
    totalPages?: number;
    /**
     * Total number of elements (items) available
     * @type {number}
     * @memberof Pagination
     */
    totalElements?: number;
    /**
     * 
     * @type {Array<Sort>}
     * @memberof Pagination
     */
    sort?: Array<Sort>;
}

/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): value is Pagination {
    return true;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if (json == null) {
        return json;
    }
    return {
        
        'currentPage': json['currentPage'] == null ? undefined : json['currentPage'],
        'size': json['size'] == null ? undefined : json['size'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'sort': json['sort'] == null ? undefined : ((json['sort'] as Array<any>).map(SortFromJSON)),
    };
}

export function PaginationToJSON(json: any): Pagination {
    return PaginationToJSONTyped(json, false);
}

export function PaginationToJSONTyped(value?: Pagination | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currentPage': value['currentPage'],
        'size': value['size'],
        'totalPages': value['totalPages'],
        'totalElements': value['totalElements'],
        'sort': value['sort'] == null ? undefined : ((value['sort'] as Array<any>).map(SortToJSON)),
    };
}

