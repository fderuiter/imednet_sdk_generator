/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  Job,
} from './models';

/**
 * getJobStatus - parameters interface
 */
export interface IGetJobStatusParams {
  studyKey: string;
  batchId: string;
}

/**
 * JobsApi - API class
 */
@autoinject()
export class JobsApi extends Api {

  /**
   * Creates a new JobsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Retrieve job status by batch ID
   * @param params.studyKey Study key identifying the study context for the request
   * @param params.batchId Batch ID of the job to retrieve
   */
  async getJobStatus(params: IGetJobStatusParams): Promise<Job> {
    // Verify required parameters are set
    this.ensureParamIsSet('getJobStatus', params, 'studyKey');
    this.ensureParamIsSet('getJobStatus', params, 'batchId');

    // Create URL to call
    const url = `${this.basePath}/studies/{studyKey}/jobs/{batchId}`
      .replace(`{${'studyKey'}}`, encodeURIComponent(`${params['studyKey']}`))
      .replace(`{${'batchId'}}`, encodeURIComponent(`${params['batchId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'apiKeyAuth' required
      .withHeader('x-api-key', this.authStorage.getapiKeyAuth())
      // Authentication 'securityKeyAuth' required
      .withHeader('x-imn-security-key', this.authStorage.getsecurityKeyAuth())
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

