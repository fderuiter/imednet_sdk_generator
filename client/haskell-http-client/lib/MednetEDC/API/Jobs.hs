{-
   Mednet EDC API

   The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

   OpenAPI Version: 3.1.0
   Mednet EDC API API version: 1.3.6
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : MednetEDC.API.Jobs
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module MednetEDC.API.Jobs where

import MednetEDC.Core
import MednetEDC.MimeTypes
import MednetEDC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Jobs

-- *** getJobStatus

-- | @GET \/studies\/{studyKey}\/jobs\/{batchId}@
-- 
-- Retrieve job status by batch ID
-- 
-- AuthMethod: 'AuthApiKeyApiKeyAuth', 'AuthApiKeySecurityKeyAuth'
-- 
getJobStatus
  :: StudyKey -- ^ "studyKey" -  Study key identifying the study context for the request
  -> BatchId -- ^ "batchId" -  Batch ID of the job to retrieve
  -> MednetEDCRequest GetJobStatus MimeNoContent Job MimeJSON
getJobStatus (StudyKey studyKey) (BatchId batchId) =
  _mkRequest "GET" ["/studies/",toPath studyKey,"/jobs/",toPath batchId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKeyAuth)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeySecurityKeyAuth)

data GetJobStatus  
-- | @application/json@
instance Produces GetJobStatus MimeJSON

