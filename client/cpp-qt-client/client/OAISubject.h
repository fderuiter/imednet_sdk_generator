/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubject.h
 *
 * 
 */

#ifndef OAISubject_H
#define OAISubject_H

#include <QJsonObject>

#include "OAIKeyword.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyword;

class OAISubject : public OAIObject {
public:
    OAISubject();
    OAISubject(QString json);
    ~OAISubject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getSubjectId() const;
    void setSubjectId(const qint32 &subject_id);
    bool is_subject_id_Set() const;
    bool is_subject_id_Valid() const;

    QString getSubjectOid() const;
    void setSubjectOid(const QString &subject_oid);
    bool is_subject_oid_Set() const;
    bool is_subject_oid_Valid() const;

    QString getSubjectKey() const;
    void setSubjectKey(const QString &subject_key);
    bool is_subject_key_Set() const;
    bool is_subject_key_Valid() const;

    QString getSubjectStatus() const;
    void setSubjectStatus(const QString &subject_status);
    bool is_subject_status_Set() const;
    bool is_subject_status_Valid() const;

    qint32 getSiteId() const;
    void setSiteId(const qint32 &site_id);
    bool is_site_id_Set() const;
    bool is_site_id_Valid() const;

    QString getSiteName() const;
    void setSiteName(const QString &site_name);
    bool is_site_name_Set() const;
    bool is_site_name_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getEnrollmentStartDate() const;
    void setEnrollmentStartDate(const QString &enrollment_start_date);
    bool is_enrollment_start_date_Set() const;
    bool is_enrollment_start_date_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QList<OAIKeyword> getKeywords() const;
    void setKeywords(const QList<OAIKeyword> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_subject_id;
    bool m_subject_id_isSet;
    bool m_subject_id_isValid;

    QString m_subject_oid;
    bool m_subject_oid_isSet;
    bool m_subject_oid_isValid;

    QString m_subject_key;
    bool m_subject_key_isSet;
    bool m_subject_key_isValid;

    QString m_subject_status;
    bool m_subject_status_isSet;
    bool m_subject_status_isValid;

    qint32 m_site_id;
    bool m_site_id_isSet;
    bool m_site_id_isValid;

    QString m_site_name;
    bool m_site_name_isSet;
    bool m_site_name_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_enrollment_start_date;
    bool m_enrollment_start_date_isSet;
    bool m_enrollment_start_date_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QList<OAIKeyword> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubject)

#endif // OAISubject_H
