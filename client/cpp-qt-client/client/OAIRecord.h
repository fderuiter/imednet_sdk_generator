/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecord.h
 *
 * 
 */

#ifndef OAIRecord_H
#define OAIRecord_H

#include <QJsonObject>

#include "OAIKeyword.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyword;

class OAIRecord : public OAIObject {
public:
    OAIRecord();
    OAIRecord(QString json);
    ~OAIRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getIntervalId() const;
    void setIntervalId(const qint32 &interval_id);
    bool is_interval_id_Set() const;
    bool is_interval_id_Valid() const;

    qint32 getFormId() const;
    void setFormId(const qint32 &form_id);
    bool is_form_id_Set() const;
    bool is_form_id_Valid() const;

    QString getFormKey() const;
    void setFormKey(const QString &form_key);
    bool is_form_key_Set() const;
    bool is_form_key_Valid() const;

    qint32 getSiteId() const;
    void setSiteId(const qint32 &site_id);
    bool is_site_id_Set() const;
    bool is_site_id_Valid() const;

    qint32 getRecordId() const;
    void setRecordId(const qint32 &record_id);
    bool is_record_id_Set() const;
    bool is_record_id_Valid() const;

    QString getRecordOid() const;
    void setRecordOid(const QString &record_oid);
    bool is_record_oid_Set() const;
    bool is_record_oid_Valid() const;

    QString getRecordType() const;
    void setRecordType(const QString &record_type);
    bool is_record_type_Set() const;
    bool is_record_type_Valid() const;

    QString getRecordStatus() const;
    void setRecordStatus(const QString &record_status);
    bool is_record_status_Set() const;
    bool is_record_status_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    qint32 getSubjectId() const;
    void setSubjectId(const qint32 &subject_id);
    bool is_subject_id_Set() const;
    bool is_subject_id_Valid() const;

    QString getSubjectOid() const;
    void setSubjectOid(const QString &subject_oid);
    bool is_subject_oid_Set() const;
    bool is_subject_oid_Valid() const;

    QString getSubjectKey() const;
    void setSubjectKey(const QString &subject_key);
    bool is_subject_key_Set() const;
    bool is_subject_key_Valid() const;

    qint32 getVisitId() const;
    void setVisitId(const qint32 &visit_id);
    bool is_visit_id_Set() const;
    bool is_visit_id_Valid() const;

    qint32 getParentRecordId() const;
    void setParentRecordId(const qint32 &parent_record_id);
    bool is_parent_record_id_Set() const;
    bool is_parent_record_id_Valid() const;

    QList<OAIKeyword> getKeywords() const;
    void setKeywords(const QList<OAIKeyword> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QMap<QString, QJsonValue> getRecordData() const;
    void setRecordData(const QMap<QString, QJsonValue> &record_data);
    bool is_record_data_Set() const;
    bool is_record_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_interval_id;
    bool m_interval_id_isSet;
    bool m_interval_id_isValid;

    qint32 m_form_id;
    bool m_form_id_isSet;
    bool m_form_id_isValid;

    QString m_form_key;
    bool m_form_key_isSet;
    bool m_form_key_isValid;

    qint32 m_site_id;
    bool m_site_id_isSet;
    bool m_site_id_isValid;

    qint32 m_record_id;
    bool m_record_id_isSet;
    bool m_record_id_isValid;

    QString m_record_oid;
    bool m_record_oid_isSet;
    bool m_record_oid_isValid;

    QString m_record_type;
    bool m_record_type_isSet;
    bool m_record_type_isValid;

    QString m_record_status;
    bool m_record_status_isSet;
    bool m_record_status_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    qint32 m_subject_id;
    bool m_subject_id_isSet;
    bool m_subject_id_isValid;

    QString m_subject_oid;
    bool m_subject_oid_isSet;
    bool m_subject_oid_isValid;

    QString m_subject_key;
    bool m_subject_key_isSet;
    bool m_subject_key_isValid;

    qint32 m_visit_id;
    bool m_visit_id_isSet;
    bool m_visit_id_isValid;

    qint32 m_parent_record_id;
    bool m_parent_record_id_isSet;
    bool m_parent_record_id_isValid;

    QList<OAIKeyword> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QMap<QString, QJsonValue> m_record_data;
    bool m_record_data_isSet;
    bool m_record_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecord)

#endif // OAIRecord_H
