/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVisit.h
 *
 * 
 */

#ifndef OAIVisit_H
#define OAIVisit_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVisit : public OAIObject {
public:
    OAIVisit();
    OAIVisit(QString json);
    ~OAIVisit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getVisitId() const;
    void setVisitId(const qint32 &visit_id);
    bool is_visit_id_Set() const;
    bool is_visit_id_Valid() const;

    qint32 getIntervalId() const;
    void setIntervalId(const qint32 &interval_id);
    bool is_interval_id_Set() const;
    bool is_interval_id_Valid() const;

    QString getIntervalName() const;
    void setIntervalName(const QString &interval_name);
    bool is_interval_name_Set() const;
    bool is_interval_name_Valid() const;

    qint32 getSubjectId() const;
    void setSubjectId(const qint32 &subject_id);
    bool is_subject_id_Set() const;
    bool is_subject_id_Valid() const;

    QString getSubjectKey() const;
    void setSubjectKey(const QString &subject_key);
    bool is_subject_key_Set() const;
    bool is_subject_key_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getVisitDate() const;
    void setVisitDate(const QString &visit_date);
    bool is_visit_date_Set() const;
    bool is_visit_date_Valid() const;

    QString getVisitDateForm() const;
    void setVisitDateForm(const QString &visit_date_form);
    bool is_visit_date_form_Set() const;
    bool is_visit_date_form_Valid() const;

    QString getVisitDateQuestion() const;
    void setVisitDateQuestion(const QString &visit_date_question);
    bool is_visit_date_question_Set() const;
    bool is_visit_date_question_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_visit_id;
    bool m_visit_id_isSet;
    bool m_visit_id_isValid;

    qint32 m_interval_id;
    bool m_interval_id_isSet;
    bool m_interval_id_isValid;

    QString m_interval_name;
    bool m_interval_name_isSet;
    bool m_interval_name_isValid;

    qint32 m_subject_id;
    bool m_subject_id_isSet;
    bool m_subject_id_isValid;

    QString m_subject_key;
    bool m_subject_key_isSet;
    bool m_subject_key_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_visit_date;
    bool m_visit_date_isSet;
    bool m_visit_date_isValid;

    QString m_visit_date_form;
    bool m_visit_date_form_isSet;
    bool m_visit_date_form_isValid;

    QString m_visit_date_question;
    bool m_visit_date_question_isSet;
    bool m_visit_date_question_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVisit)

#endif // OAIVisit_H
