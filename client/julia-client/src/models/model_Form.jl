# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Form

    Form(;
        studyKey=nothing,
        formId=nothing,
        formKey=nothing,
        formName=nothing,
        formType=nothing,
        revision=nothing,
        embeddedLog=nothing,
        enforceOwnership=nothing,
        userAgreement=nothing,
        subjectRecordReport=nothing,
        unscheduledVisit=nothing,
        otherForms=nothing,
        eproForm=nothing,
        allowCopy=nothing,
        disabled=nothing,
        dateCreated=nothing,
        dateModified=nothing,
    )

    - studyKey::String : Unique study key
    - formId::Int64 : Mednet Form ID
    - formKey::String : User-defined form key
    - formName::String : Name of the form (eCRF)
    - formType::String : Type of the form (e.g., Subject or Site)
    - revision::Int64 : Number of modifications (revisions) of the form metadata
    - embeddedLog::Bool : Whether the form has an embedded log
    - enforceOwnership::Bool : Whether the form enforces record ownership
    - userAgreement::Bool : Whether the form requires a user agreement
    - subjectRecordReport::Bool : Whether the form is marked as a subject record report
    - unscheduledVisit::Bool : Whether the form is included in unscheduled visits
    - otherForms::Bool : Whether the form is included in Other Forms category
    - eproForm::Bool : Whether the form is an ePRO (electronic patient reported outcome) form
    - allowCopy::Bool : Whether the form allows copying of data
    - disabled::Bool : Whether the form is soft-deleted (disabled)
    - dateCreated::String : Date when this form was created
    - dateModified::String : Date when this form was last modified
"""
Base.@kwdef mutable struct Form <: OpenAPI.APIModel
    studyKey::Union{Nothing, String} = nothing
    formId::Union{Nothing, Int64} = nothing
    formKey::Union{Nothing, String} = nothing
    formName::Union{Nothing, String} = nothing
    formType::Union{Nothing, String} = nothing
    revision::Union{Nothing, Int64} = nothing
    embeddedLog::Union{Nothing, Bool} = nothing
    enforceOwnership::Union{Nothing, Bool} = nothing
    userAgreement::Union{Nothing, Bool} = nothing
    subjectRecordReport::Union{Nothing, Bool} = nothing
    unscheduledVisit::Union{Nothing, Bool} = nothing
    otherForms::Union{Nothing, Bool} = nothing
    eproForm::Union{Nothing, Bool} = nothing
    allowCopy::Union{Nothing, Bool} = nothing
    disabled::Union{Nothing, Bool} = nothing
    dateCreated::Union{Nothing, String} = nothing
    dateModified::Union{Nothing, String} = nothing

    function Form(studyKey, formId, formKey, formName, formType, revision, embeddedLog, enforceOwnership, userAgreement, subjectRecordReport, unscheduledVisit, otherForms, eproForm, allowCopy, disabled, dateCreated, dateModified, )
        o = new(studyKey, formId, formKey, formName, formType, revision, embeddedLog, enforceOwnership, userAgreement, subjectRecordReport, unscheduledVisit, otherForms, eproForm, allowCopy, disabled, dateCreated, dateModified, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type Form

const _property_types_Form = Dict{Symbol,String}(Symbol("studyKey")=>"String", Symbol("formId")=>"Int64", Symbol("formKey")=>"String", Symbol("formName")=>"String", Symbol("formType")=>"String", Symbol("revision")=>"Int64", Symbol("embeddedLog")=>"Bool", Symbol("enforceOwnership")=>"Bool", Symbol("userAgreement")=>"Bool", Symbol("subjectRecordReport")=>"Bool", Symbol("unscheduledVisit")=>"Bool", Symbol("otherForms")=>"Bool", Symbol("eproForm")=>"Bool", Symbol("allowCopy")=>"Bool", Symbol("disabled")=>"Bool", Symbol("dateCreated")=>"String", Symbol("dateModified")=>"String", )
OpenAPI.property_type(::Type{ Form }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Form[name]))}

function OpenAPI.check_required(o::Form)
    true
end

function OpenAPI.validate_properties(o::Form)
    OpenAPI.validate_property(Form, Symbol("studyKey"), o.studyKey)
    OpenAPI.validate_property(Form, Symbol("formId"), o.formId)
    OpenAPI.validate_property(Form, Symbol("formKey"), o.formKey)
    OpenAPI.validate_property(Form, Symbol("formName"), o.formName)
    OpenAPI.validate_property(Form, Symbol("formType"), o.formType)
    OpenAPI.validate_property(Form, Symbol("revision"), o.revision)
    OpenAPI.validate_property(Form, Symbol("embeddedLog"), o.embeddedLog)
    OpenAPI.validate_property(Form, Symbol("enforceOwnership"), o.enforceOwnership)
    OpenAPI.validate_property(Form, Symbol("userAgreement"), o.userAgreement)
    OpenAPI.validate_property(Form, Symbol("subjectRecordReport"), o.subjectRecordReport)
    OpenAPI.validate_property(Form, Symbol("unscheduledVisit"), o.unscheduledVisit)
    OpenAPI.validate_property(Form, Symbol("otherForms"), o.otherForms)
    OpenAPI.validate_property(Form, Symbol("eproForm"), o.eproForm)
    OpenAPI.validate_property(Form, Symbol("allowCopy"), o.allowCopy)
    OpenAPI.validate_property(Form, Symbol("disabled"), o.disabled)
    OpenAPI.validate_property(Form, Symbol("dateCreated"), o.dateCreated)
    OpenAPI.validate_property(Form, Symbol("dateModified"), o.dateModified)
end

function OpenAPI.validate_property(::Type{ Form }, name::Symbol, val)

















end
