# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Keyword

    Keyword(;
        keywordName=nothing,
        keywordKey=nothing,
        keywordId=nothing,
        dateAdded=nothing,
    )

    - keywordName::String : Name of the keyword
    - keywordKey::String : Key of the keyword (short code)
    - keywordId::Int64 : Internal keyword ID
    - dateAdded::String : Date when this keyword was added
"""
Base.@kwdef mutable struct Keyword <: OpenAPI.APIModel
    keywordName::Union{Nothing, String} = nothing
    keywordKey::Union{Nothing, String} = nothing
    keywordId::Union{Nothing, Int64} = nothing
    dateAdded::Union{Nothing, String} = nothing

    function Keyword(keywordName, keywordKey, keywordId, dateAdded, )
        o = new(keywordName, keywordKey, keywordId, dateAdded, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type Keyword

const _property_types_Keyword = Dict{Symbol,String}(Symbol("keywordName")=>"String", Symbol("keywordKey")=>"String", Symbol("keywordId")=>"Int64", Symbol("dateAdded")=>"String", )
OpenAPI.property_type(::Type{ Keyword }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Keyword[name]))}

function OpenAPI.check_required(o::Keyword)
    true
end

function OpenAPI.validate_properties(o::Keyword)
    OpenAPI.validate_property(Keyword, Symbol("keywordName"), o.keywordName)
    OpenAPI.validate_property(Keyword, Symbol("keywordKey"), o.keywordKey)
    OpenAPI.validate_property(Keyword, Symbol("keywordId"), o.keywordId)
    OpenAPI.validate_property(Keyword, Symbol("dateAdded"), o.dateAdded)
end

function OpenAPI.validate_property(::Type{ Keyword }, name::Symbol, val)




end
