# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""IntervalList

    IntervalList(;
        metadata=nothing,
        pagination=nothing,
        data=nothing,
    )

    - metadata::Metadata
    - pagination::Pagination
    - data::Vector{Interval}
"""
Base.@kwdef mutable struct IntervalList <: OpenAPI.APIModel
    metadata = nothing # spec type: Union{ Nothing, Metadata }
    pagination = nothing # spec type: Union{ Nothing, Pagination }
    data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Interval} }

    function IntervalList(metadata, pagination, data, )
        o = new(metadata, pagination, data, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type IntervalList

const _property_types_IntervalList = Dict{Symbol,String}(Symbol("metadata")=>"Metadata", Symbol("pagination")=>"Pagination", Symbol("data")=>"Vector{Interval}", )
OpenAPI.property_type(::Type{ IntervalList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IntervalList[name]))}

function OpenAPI.check_required(o::IntervalList)
    true
end

function OpenAPI.validate_properties(o::IntervalList)
    OpenAPI.validate_property(IntervalList, Symbol("metadata"), o.metadata)
    OpenAPI.validate_property(IntervalList, Symbol("pagination"), o.pagination)
    OpenAPI.validate_property(IntervalList, Symbol("data"), o.data)
end

function OpenAPI.validate_property(::Type{ IntervalList }, name::Symbol, val)



end
