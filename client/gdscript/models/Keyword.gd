extends Resource
class_name Keyword

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Keyword Model


# Name of the keyword
# Required: False
# isArray: false
@export var keywordName: String:
	set(value):
		__keywordName__was__set = true
		keywordName = value
var __keywordName__was__set := false

# Key of the keyword (short code)
# Required: False
# isArray: false
@export var keywordKey: String:
	set(value):
		__keywordKey__was__set = true
		keywordKey = value
var __keywordKey__was__set := false

# Internal keyword ID
# Required: False
# isArray: false
@export var keywordId: int:
	set(value):
		__keywordId__was__set = true
		keywordId = value
var __keywordId__was__set := false

# Date when this keyword was added
# Required: False
# isArray: false
@export var dateAdded: String:
	set(value):
		__dateAdded__was__set = true
		dateAdded = value
var __dateAdded__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__keywordName__was__set:
		bzz_dictionary["keywordName"] = self.keywordName
	if self.__keywordKey__was__set:
		bzz_dictionary["keywordKey"] = self.keywordKey
	if self.__keywordId__was__set:
		bzz_dictionary["keywordId"] = self.keywordId
	if self.__dateAdded__was__set:
		bzz_dictionary["dateAdded"] = self.dateAdded
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("keywordName"):
		me.keywordName = from_dict["keywordName"]
	if from_dict.has("keywordKey"):
		me.keywordKey = from_dict["keywordKey"]
	if from_dict.has("keywordId"):
		me.keywordId = from_dict["keywordId"]
	if from_dict.has("dateAdded"):
		me.dateAdded = from_dict["dateAdded"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

