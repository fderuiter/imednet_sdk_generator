extends Resource
class_name Study

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Study Model


# Sponsor key that this study belongs to
# Required: False
# isArray: false
@export var sponsorKey: String:
	set(value):
		__sponsorKey__was__set = true
		sponsorKey = value
var __sponsorKey__was__set := false

# Unique study key
# Required: False
# isArray: false
@export var studyKey: String:
	set(value):
		__studyKey__was__set = true
		studyKey = value
var __studyKey__was__set := false

# Mednet study ID (internal numeric identifier)
# Required: False
# isArray: false
@export var studyId: int:
	set(value):
		__studyId__was__set = true
		studyId = value
var __studyId__was__set := false

# Name of the study
# Required: False
# isArray: false
@export var studyName: String:
	set(value):
		__studyName__was__set = true
		studyName = value
var __studyName__was__set := false

# Description of the study
# Required: False
# isArray: false
@export var studyDescription: String:
	set(value):
		__studyDescription__was__set = true
		studyDescription = value
var __studyDescription__was__set := false

# Type of study (e.g., STUDY)
# Required: False
# isArray: false
@export var studyType: String:
	set(value):
		__studyType__was__set = true
		studyType = value
var __studyType__was__set := false

# Date when the study record was created
# Required: False
# isArray: false
@export var dateCreated: String:
	set(value):
		__dateCreated__was__set = true
		dateCreated = value
var __dateCreated__was__set := false

# Date when the study record was last modified
# Required: False
# isArray: false
@export var dateModified: String:
	set(value):
		__dateModified__was__set = true
		dateModified = value
var __dateModified__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__sponsorKey__was__set:
		bzz_dictionary["sponsorKey"] = self.sponsorKey
	if self.__studyKey__was__set:
		bzz_dictionary["studyKey"] = self.studyKey
	if self.__studyId__was__set:
		bzz_dictionary["studyId"] = self.studyId
	if self.__studyName__was__set:
		bzz_dictionary["studyName"] = self.studyName
	if self.__studyDescription__was__set:
		bzz_dictionary["studyDescription"] = self.studyDescription
	if self.__studyType__was__set:
		bzz_dictionary["studyType"] = self.studyType
	if self.__dateCreated__was__set:
		bzz_dictionary["dateCreated"] = self.dateCreated
	if self.__dateModified__was__set:
		bzz_dictionary["dateModified"] = self.dateModified
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("sponsorKey"):
		me.sponsorKey = from_dict["sponsorKey"]
	if from_dict.has("studyKey"):
		me.studyKey = from_dict["studyKey"]
	if from_dict.has("studyId"):
		me.studyId = from_dict["studyId"]
	if from_dict.has("studyName"):
		me.studyName = from_dict["studyName"]
	if from_dict.has("studyDescription"):
		me.studyDescription = from_dict["studyDescription"]
	if from_dict.has("studyType"):
		me.studyType = from_dict["studyType"]
	if from_dict.has("dateCreated"):
		me.dateCreated = from_dict["dateCreated"]
	if from_dict.has("dateModified"):
		me.dateModified = from_dict["dateModified"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

