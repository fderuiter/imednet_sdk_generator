extends Resource
class_name Site

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Site Model


# Unique study key
# Required: False
# isArray: false
@export var studyKey: String:
	set(value):
		__studyKey__was__set = true
		studyKey = value
var __studyKey__was__set := false

# Unique site ID
# Required: False
# isArray: false
@export var siteId: int:
	set(value):
		__siteId__was__set = true
		siteId = value
var __siteId__was__set := false

# Name of the site
# Required: False
# isArray: false
@export var siteName: String:
	set(value):
		__siteName__was__set = true
		siteName = value
var __siteName__was__set := false

# Enrollment status of the site
# Required: False
# isArray: false
@export var siteEnrollmentStatus: String:
	set(value):
		__siteEnrollmentStatus__was__set = true
		siteEnrollmentStatus = value
var __siteEnrollmentStatus__was__set := false

# Date when this site was created
# Required: False
# isArray: false
@export var dateCreated: String:
	set(value):
		__dateCreated__was__set = true
		dateCreated = value
var __dateCreated__was__set := false

# Date when this site was last modified
# Required: False
# isArray: false
@export var dateModified: String:
	set(value):
		__dateModified__was__set = true
		dateModified = value
var __dateModified__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__studyKey__was__set:
		bzz_dictionary["studyKey"] = self.studyKey
	if self.__siteId__was__set:
		bzz_dictionary["siteId"] = self.siteId
	if self.__siteName__was__set:
		bzz_dictionary["siteName"] = self.siteName
	if self.__siteEnrollmentStatus__was__set:
		bzz_dictionary["siteEnrollmentStatus"] = self.siteEnrollmentStatus
	if self.__dateCreated__was__set:
		bzz_dictionary["dateCreated"] = self.dateCreated
	if self.__dateModified__was__set:
		bzz_dictionary["dateModified"] = self.dateModified
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("studyKey"):
		me.studyKey = from_dict["studyKey"]
	if from_dict.has("siteId"):
		me.siteId = from_dict["siteId"]
	if from_dict.has("siteName"):
		me.siteName = from_dict["siteName"]
	if from_dict.has("siteEnrollmentStatus"):
		me.siteEnrollmentStatus = from_dict["siteEnrollmentStatus"]
	if from_dict.has("dateCreated"):
		me.dateCreated = from_dict["dateCreated"]
	if from_dict.has("dateModified"):
		me.dateModified = from_dict["dateModified"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

