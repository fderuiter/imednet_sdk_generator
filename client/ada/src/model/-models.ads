--  Mednet EDC API
--  The Mednet EDC (Electronic Data Capture) REST API provides a single_point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
--
--  The version of the OpenAPI document: 1.3.6
--
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.14.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");


   --  ------------------------------
   --  Coding
   --  ------------------------------
   type Coding_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Site_Name : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Key : Swagger.Nullable_UString;
       Form_Id : Swagger.Nullable_Integer;
       Form_Name : Swagger.Nullable_UString;
       Form_Key : Swagger.Nullable_UString;
       Revision : Swagger.Nullable_Integer;
       Record_Id : Swagger.Nullable_Integer;
       Variable : Swagger.Nullable_UString;
       Value : Swagger.Nullable_UString;
       Coding_Id : Swagger.Nullable_Integer;
       Code : Swagger.Nullable_UString;
       Coded_By : Swagger.Nullable_UString;
       Reason : Swagger.Nullable_UString;
       Dictionary_Name : Swagger.Nullable_UString;
       Dictionary_Version : Swagger.Nullable_UString;
       Date_Coded : Swagger.Nullable_UString;
     end record;


   package Coding_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Coding_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Coding_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Coding_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Coding_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Coding_Type_Vectors.Vector);


   --  ------------------------------
   --  components_schemas_Interval_forms_item
   --  ------------------------------
   type ComponentsSchemasIntervalFormsItem_Type is
     record
       Form_Id : Swagger.Nullable_Integer;
       Form_Key : Swagger.Nullable_UString;
       Form_Name : Swagger.Nullable_UString;
     end record;


   package ComponentsSchemasIntervalFormsItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ComponentsSchemasIntervalFormsItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ComponentsSchemasIntervalFormsItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ComponentsSchemasIntervalFormsItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ComponentsSchemasIntervalFormsItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ComponentsSchemasIntervalFormsItem_Type_Vectors.Vector);


   --  ------------------------------
   --  components_schemas_Metadata_error
   --  Error details if an error occurred
   --  ------------------------------
   type ComponentsSchemasMetadataError_Type is
     record
       Message : Swagger.Nullable_UString;
     end record;


   package ComponentsSchemasMetadataError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ComponentsSchemasMetadataError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ComponentsSchemasMetadataError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ComponentsSchemasMetadataError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ComponentsSchemasMetadataError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ComponentsSchemasMetadataError_Type_Vectors.Vector);


   --  ------------------------------
   --  Form
   --  ------------------------------
   type Form_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Form_Id : Swagger.Nullable_Integer;
       Form_Key : Swagger.Nullable_UString;
       Form_Name : Swagger.Nullable_UString;
       Form_Type : Swagger.Nullable_UString;
       Revision : Swagger.Nullable_Integer;
       Embedded_Log : Swagger.Nullable_Boolean;
       Enforce_Ownership : Swagger.Nullable_Boolean;
       User_Agreement : Swagger.Nullable_Boolean;
       Subject_Record_Report : Swagger.Nullable_Boolean;
       Unscheduled_Visit : Swagger.Nullable_Boolean;
       Other_Forms : Swagger.Nullable_Boolean;
       Epro_Form : Swagger.Nullable_Boolean;
       Allow_Copy : Swagger.Nullable_Boolean;
       Disabled : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
     end record;


   package Form_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Form_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Form_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Form_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Form_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Form_Type_Vectors.Vector);


   --  ------------------------------
   --  Job
   --  ------------------------------
   type Job_Type is
     record
       Job_Id : Swagger.Nullable_UString;
       Batch_Id : Swagger.Nullable_UString;
       State : Swagger.Nullable_UString;
       Date_Created : Swagger.Nullable_UString;
       Date_Started : Swagger.Nullable_UString;
       Date_Finished : Swagger.Nullable_UString;
     end record;


   package Job_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Job_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Job_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Job_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Job_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Job_Type_Vectors.Vector);


   --  ------------------------------
   --  Keyword
   --  ------------------------------
   type Keyword_Type is
     record
       Keyword_Name : Swagger.Nullable_UString;
       Keyword_Key : Swagger.Nullable_UString;
       Keyword_Id : Swagger.Nullable_Integer;
       Date_Added : Swagger.Nullable_UString;
     end record;


   package Keyword_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Keyword_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Keyword_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Keyword_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Keyword_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Keyword_Type_Vectors.Vector);


   --  ------------------------------
   --  QueryComment
   --  ------------------------------
   type QueryComment_Type is
     record
       Sequence : Swagger.Nullable_Integer;
       Annotation_Status : Swagger.Nullable_UString;
       User : Swagger.Nullable_UString;
       Comment : Swagger.Nullable_UString;
       Closed : Swagger.Nullable_Boolean;
       Date : Swagger.Nullable_UString;
     end record;


   package QueryComment_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QueryComment_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QueryComment_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueryComment_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QueryComment_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QueryComment_Type_Vectors.Vector);


   --  ------------------------------
   --  RecordJobStatus
   --  ------------------------------
   type RecordJobStatus_Type is
     record
       Job_Id : Swagger.Nullable_UString;
       Batch_Id : Swagger.Nullable_UString;
       State : Swagger.Nullable_UString;
     end record;


   package RecordJobStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RecordJobStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RecordJobStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RecordJobStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RecordJobStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RecordJobStatus_Type_Vectors.Vector);


   --  ------------------------------
   --  RecordRevision
   --  ------------------------------
   type RecordRevision_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Record_Revision_Id : Swagger.Nullable_Integer;
       Record_Id : Swagger.Nullable_Integer;
       Record_Oid : Swagger.Nullable_UString;
       Record_Revision : Swagger.Nullable_Integer;
       Data_Revision : Swagger.Nullable_Integer;
       Record_Status : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Oid : Swagger.Nullable_UString;
       Subject_Key : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Form_Key : Swagger.Nullable_UString;
       Interval_Id : Swagger.Nullable_Integer;
       Role : Swagger.Nullable_UString;
       User : Swagger.Nullable_UString;
       Reason_For_Change : Swagger.Nullable_UString;
       Deleted : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
     end record;


   package RecordRevision_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RecordRevision_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RecordRevision_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RecordRevision_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RecordRevision_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RecordRevision_Type_Vectors.Vector);


   --  ------------------------------
   --  Role
   --  ------------------------------
   type Role_Type is
     record
       Date_Created : Integer_Vectors.Vector;
       Date_Modified : Integer_Vectors.Vector;
       Role_Id : Swagger.Nullable_UString;
       Community_Id : Swagger.Nullable_Integer;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Level : Swagger.Nullable_Integer;
       P_Type : Swagger.Nullable_UString;
       Inactive : Swagger.Nullable_Boolean;
     end record;


   package Role_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Role_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Role_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Role_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Role_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Role_Type_Vectors.Vector);


   --  ------------------------------
   --  Site
   --  ------------------------------
   type Site_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Site_Name : Swagger.Nullable_UString;
       Site_Enrollment_Status : Swagger.Nullable_UString;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
     end record;


   package Site_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Site_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Site_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Site_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Site_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Site_Type_Vectors.Vector);


   --  ------------------------------
   --  Sort
   --  ------------------------------
   type Sort_Type is
     record
       Property : Swagger.Nullable_UString;
       Direction : Swagger.Nullable_UString;
     end record;


   package Sort_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Sort_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Sort_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Sort_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Sort_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Sort_Type_Vectors.Vector);


   --  ------------------------------
   --  Study
   --  ------------------------------
   type Study_Type is
     record
       Sponsor_Key : Swagger.Nullable_UString;
       Study_Key : Swagger.Nullable_UString;
       Study_Id : Swagger.Nullable_Integer;
       Study_Name : Swagger.Nullable_UString;
       Study_Description : Swagger.Nullable_UString;
       Study_Type : Swagger.Nullable_UString;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
     end record;


   package Study_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Study_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Study_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Study_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Study_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Study_Type_Vectors.Vector);


   --  ------------------------------
   --  Variable
   --  ------------------------------
   type Variable_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Variable_Id : Swagger.Nullable_Integer;
       Variable_Type : Swagger.Nullable_UString;
       Variable_Name : Swagger.Nullable_UString;
       Sequence : Swagger.Nullable_Integer;
       Revision : Swagger.Nullable_Integer;
       Disabled : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
       Form_Id : Swagger.Nullable_Integer;
       Variable_Oid : Swagger.Nullable_UString;
       Deleted : Swagger.Nullable_Boolean;
       Form_Key : Swagger.Nullable_UString;
       Form_Name : Swagger.Nullable_UString;
       Label : Swagger.Nullable_UString;
       Blinded : Swagger.Nullable_Boolean;
     end record;


   package Variable_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Variable_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Variable_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Variable_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Variable_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Variable_Type_Vectors.Vector);


   --  ------------------------------
   --  Visit
   --  ------------------------------
   type Visit_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Visit_Id : Swagger.Nullable_Integer;
       Interval_Id : Swagger.Nullable_Integer;
       Interval_Name : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Key : Swagger.Nullable_UString;
       Start_Date : Swagger.Nullable_UString;
       End_Date : Swagger.Nullable_UString;
       Due_Date : Swagger.Nullable_UString;
       Visit_Date : Swagger.Nullable_UString;
       Visit_Date_Form : Swagger.Nullable_UString;
       Visit_Date_Question : Swagger.Nullable_UString;
       Deleted : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
     end record;


   package Visit_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Visit_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Visit_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Visit_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Visit_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Visit_Type_Vectors.Vector);


   --  ------------------------------
   --  components_schemas_RecordCreateRequest_item
   --  ------------------------------
   type ComponentsSchemasRecordCreateRequestItem_Type is
     record
       Form_Key : Swagger.UString;
       Form_Id : Swagger.Nullable_Integer;
       Site_Name : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Subject_Key : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Oid : Swagger.Nullable_UString;
       Interval_Name : Swagger.Nullable_UString;
       Interval_Id : Swagger.Nullable_Integer;
       Record_Id : Swagger.Nullable_Integer;
       Record_Oid : Swagger.Nullable_UString;
       Data : .Models.AnyType_Type;
     end record;


   package ComponentsSchemasRecordCreateRequestItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ComponentsSchemasRecordCreateRequestItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ComponentsSchemasRecordCreateRequestItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ComponentsSchemasRecordCreateRequestItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ComponentsSchemasRecordCreateRequestItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ComponentsSchemasRecordCreateRequestItem_Type_Vectors.Vector);


   --  ------------------------------
   --  Metadata
   --  ------------------------------
   type Metadata_Type is
     record
       Status : Swagger.Nullable_UString;
       Method : Swagger.Nullable_UString;
       Path : Swagger.Nullable_UString;
       Timestamp : Swagger.Nullable_Date;
       Error : .Models.ComponentsSchemasMetadataError_Type;
     end record;


   package Metadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Metadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Metadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Metadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Metadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Metadata_Type_Vectors.Vector);



   type InlineObject1_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject1_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject1_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject1_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject1_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject1_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject1_Type_Vectors.Vector);



   type InlineObject2_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject2_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject2_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject2_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject2_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject2_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject2_Type_Vectors.Vector);



   type InlineObject3_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject3_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject3_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject3_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject3_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject3_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject3_Type_Vectors.Vector);



   type InlineObject4_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject4_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject4_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject4_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject4_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject4_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject4_Type_Vectors.Vector);



   type InlineObject5_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject5_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject5_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject5_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject5_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject5_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject5_Type_Vectors.Vector);



   type InlineObject_Type is
     record
       Metadata : .Models.Metadata_Type;
     end record;


   package InlineObject_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InlineObject_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InlineObject_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineObject_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InlineObject_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InlineObject_Type_Vectors.Vector);


   --  ------------------------------
   --  Interval
   --  ------------------------------
   type Interval_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Interval_Id : Swagger.Nullable_Integer;
       Interval_Name : Swagger.Nullable_UString;
       Interval_Description : Swagger.Nullable_UString;
       Interval_Sequence : Swagger.Nullable_Integer;
       Interval_Group_Id : Swagger.Nullable_Integer;
       Interval_Group_Name : Swagger.Nullable_UString;
       Timeline : Swagger.Nullable_UString;
       Defined_Using_Interval : Swagger.Nullable_UString;
       Window_Calculation_Form : Swagger.Nullable_UString;
       Window_Calculation_Date : Swagger.Nullable_UString;
       Actual_Date_Form : Swagger.Nullable_UString;
       Actual_Date : Swagger.Nullable_UString;
       Due_Date_Will_Be_In : Swagger.Nullable_Integer;
       Negative_Slack : Swagger.Nullable_Integer;
       Positive_Slack : Swagger.Nullable_Integer;
       Epro_Grace_Period : Swagger.Nullable_Integer;
       Forms : .Models.ComponentsSchemasIntervalFormsItem_Type_Vectors.Vector;
       Disabled : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
     end record;


   package Interval_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Interval_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Interval_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Interval_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Interval_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Interval_Type_Vectors.Vector);


   --  ------------------------------
   --  Pagination
   --  ------------------------------
   type Pagination_Type is
     record
       Current_Page : Swagger.Nullable_Integer;
       Size : Swagger.Nullable_Integer;
       Total_Pages : Swagger.Nullable_Integer;
       Total_Elements : Swagger.Nullable_Integer;
       Sort : .Models.Sort_Type_Vectors.Vector;
     end record;


   package Pagination_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Pagination_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Pagination_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pagination_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Pagination_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Pagination_Type_Vectors.Vector);


   --  ------------------------------
   --  Query
   --  ------------------------------
   type Query_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Oid : Swagger.Nullable_UString;
       Annotation_Type : Swagger.Nullable_UString;
       Annotation_Id : Swagger.Nullable_Integer;
       P_Type : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Record_Id : Swagger.Nullable_Integer;
       Variable : Swagger.Nullable_UString;
       Subject_Key : Swagger.Nullable_UString;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
       Query_Comments : .Models.QueryComment_Type_Vectors.Vector;
     end record;


   package Query_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Query_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Query_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Query_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Query_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Query_Type_Vectors.Vector);


   --  ------------------------------
   --  Subject
   --  ------------------------------
   type Subject_Type is
     record
       Study_Key : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Oid : Swagger.Nullable_UString;
       Subject_Key : Swagger.Nullable_UString;
       Subject_Status : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Site_Name : Swagger.Nullable_UString;
       Deleted : Swagger.Nullable_Boolean;
       Enrollment_Start_Date : Swagger.Nullable_UString;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
       Keywords : .Models.Keyword_Type_Vectors.Vector;
     end record;


   package Subject_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Subject_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Subject_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Subject_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Subject_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Subject_Type_Vectors.Vector);


   --  ------------------------------
   --  User
   --  ------------------------------
   type User_Type is
     record
       User_Id : Swagger.Nullable_UString;
       Login : Swagger.Nullable_UString;
       First_Name : Swagger.Nullable_UString;
       Last_Name : Swagger.Nullable_UString;
       Email : Swagger.Nullable_UString;
       User_Active_In_Study : Swagger.Nullable_Boolean;
       Roles : .Models.Role_Type_Vectors.Vector;
     end record;


   package User_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.User_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.User_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in User_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.User_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out User_Type_Vectors.Vector);


   --  ------------------------------
   --  Record
   --  ------------------------------
   type Model_Record is
     record
       Study_Key : Swagger.Nullable_UString;
       Interval_Id : Swagger.Nullable_Integer;
       Form_Id : Swagger.Nullable_Integer;
       Form_Key : Swagger.Nullable_UString;
       Site_Id : Swagger.Nullable_Integer;
       Record_Id : Swagger.Nullable_Integer;
       Record_Oid : Swagger.Nullable_UString;
       Record_Type : Swagger.Nullable_UString;
       Record_Status : Swagger.Nullable_UString;
       Deleted : Swagger.Nullable_Boolean;
       Date_Created : Swagger.Nullable_UString;
       Date_Modified : Swagger.Nullable_UString;
       Subject_Id : Swagger.Nullable_Integer;
       Subject_Oid : Swagger.Nullable_UString;
       Subject_Key : Swagger.Nullable_UString;
       Visit_Id : Swagger.Nullable_Integer;
       Parent_Record_Id : Swagger.Nullable_Integer;
       Keywords : .Models.Keyword_Type_Vectors.Vector;
       Record_Data : .Models.AnyType_Type;
     end record;


   package Model_Record_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Model_Record);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Model_Record);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Model_Record_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Model_Record);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Model_Record_Vectors.Vector);


   --  ------------------------------
   --  CodingList
   --  ------------------------------
   type CodingList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Coding_Type_Vectors.Vector;
     end record;


   package CodingList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CodingList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CodingList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CodingList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CodingList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CodingList_Type_Vectors.Vector);


   --  ------------------------------
   --  FormList
   --  ------------------------------
   type FormList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Form_Type_Vectors.Vector;
     end record;


   package FormList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FormList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FormList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FormList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FormList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FormList_Type_Vectors.Vector);


   --  ------------------------------
   --  IntervalList
   --  ------------------------------
   type IntervalList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Interval_Type_Vectors.Vector;
     end record;


   package IntervalList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntervalList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntervalList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntervalList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntervalList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntervalList_Type_Vectors.Vector);


   --  ------------------------------
   --  QueryList
   --  ------------------------------
   type QueryList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Query_Type_Vectors.Vector;
     end record;


   package QueryList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QueryList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QueryList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueryList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QueryList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QueryList_Type_Vectors.Vector);


   --  ------------------------------
   --  RecordList
   --  ------------------------------
   type RecordList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Model_Record_Vectors.Vector;
     end record;


   package RecordList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RecordList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RecordList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RecordList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RecordList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RecordList_Type_Vectors.Vector);


   --  ------------------------------
   --  RecordRevisionList
   --  ------------------------------
   type RecordRevisionList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.RecordRevision_Type_Vectors.Vector;
     end record;


   package RecordRevisionList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RecordRevisionList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RecordRevisionList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RecordRevisionList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RecordRevisionList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RecordRevisionList_Type_Vectors.Vector);


   --  ------------------------------
   --  SiteList
   --  ------------------------------
   type SiteList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Site_Type_Vectors.Vector;
     end record;


   package SiteList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SiteList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SiteList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SiteList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SiteList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SiteList_Type_Vectors.Vector);


   --  ------------------------------
   --  StudyList
   --  ------------------------------
   type StudyList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Study_Type_Vectors.Vector;
     end record;


   package StudyList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.StudyList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.StudyList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in StudyList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.StudyList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out StudyList_Type_Vectors.Vector);


   --  ------------------------------
   --  SubjectList
   --  ------------------------------
   type SubjectList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Subject_Type_Vectors.Vector;
     end record;


   package SubjectList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SubjectList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SubjectList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SubjectList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SubjectList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SubjectList_Type_Vectors.Vector);


   --  ------------------------------
   --  UserList
   --  ------------------------------
   type UserList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.User_Type_Vectors.Vector;
     end record;


   package UserList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserList_Type_Vectors.Vector);


   --  ------------------------------
   --  VariableList
   --  ------------------------------
   type VariableList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Variable_Type_Vectors.Vector;
     end record;


   package VariableList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.VariableList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.VariableList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.VariableList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out VariableList_Type_Vectors.Vector);


   --  ------------------------------
   --  VisitList
   --  ------------------------------
   type VisitList_Type is
     record
       Metadata : .Models.Metadata_Type;
       Pagination : .Models.Pagination_Type;
       Data : .Models.Visit_Type_Vectors.Vector;
     end record;


   package VisitList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.VisitList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.VisitList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VisitList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.VisitList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out VisitList_Type_Vectors.Vector);


end .Models;
