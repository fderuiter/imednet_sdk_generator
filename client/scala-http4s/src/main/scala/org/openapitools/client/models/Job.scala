/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param jobId Unique job identifier
  * @param batchId Batch ID associated with the job (useful for linking with record creation requests)
  * @param state State of the job (e.g., completed, pending)
  * @param dateCreated Timestamp when the job was created
  * @param dateStarted Timestamp when the job started processing
  * @param dateFinished Timestamp when the job finished processing
  */
case class Job(
    jobId: Option[String] = None,
    batchId: Option[String] = None,
    state: Option[String] = None,
    dateCreated: Option[String] = None,
    dateStarted: Option[String] = None,
    dateFinished: Option[String] = None
)
  
object Job {
  given encoderJob: Encoder[Job] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.jobId.map(v => "jobId" -> v.asJson),
        t.batchId.map(v => "batchId" -> v.asJson),
        t.state.map(v => "state" -> v.asJson),
        t.dateCreated.map(v => "dateCreated" -> v.asJson),
        t.dateStarted.map(v => "dateStarted" -> v.asJson),
        t.dateFinished.map(v => "dateFinished" -> v.asJson)
      ).flatten
    }
  }
  given decoderJob: Decoder[Job] = Decoder.instance { c =>
    for {
      jobId <- c.downField("jobId").as[Option[String]]
      batchId <- c.downField("batchId").as[Option[String]]
      state <- c.downField("state").as[Option[String]]
      dateCreated <- c.downField("dateCreated").as[Option[String]]
      dateStarted <- c.downField("dateStarted").as[Option[String]]
      dateFinished <- c.downField("dateFinished").as[Option[String]]
    } yield Job(
      jobId = jobId,
      batchId = batchId,
      state = state,
      dateCreated = dateCreated,
      dateStarted = dateStarted,
      dateFinished = dateFinished
    )
  }
}

