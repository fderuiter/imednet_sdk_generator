/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param formId Form ID scheduled in the interval
  * @param formKey Form key scheduled in the interval
  * @param formName Form name scheduled in the interval
  */
case class ComponentsSchemasIntervalFormsItem(
    formId: Option[Int] = None,
    formKey: Option[String] = None,
    formName: Option[String] = None
)
  
object ComponentsSchemasIntervalFormsItem {
  given encoderComponentsSchemasIntervalFormsItem: Encoder[ComponentsSchemasIntervalFormsItem] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.formId.map(v => "formId" -> v.asJson),
        t.formKey.map(v => "formKey" -> v.asJson),
        t.formName.map(v => "formName" -> v.asJson)
      ).flatten
    }
  }
  given decoderComponentsSchemasIntervalFormsItem: Decoder[ComponentsSchemasIntervalFormsItem] = Decoder.instance { c =>
    for {
      formId <- c.downField("formId").as[Option[Int]]
      formKey <- c.downField("formKey").as[Option[String]]
      formName <- c.downField("formName").as[Option[String]]
    } yield ComponentsSchemasIntervalFormsItem(
      formId = formId,
      formKey = formKey,
      formName = formName
    )
  }
}

