/** Mednet EDC API
  * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
  *
  * The version of the OpenAPI document: 1.3.6
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}

import scala.collection.immutable.Seq

/** 
  * @param metadata 
  * @param pagination 
  * @param data 
  */
case class VisitList(
    metadata: Option[Metadata] = None,
    pagination: Option[Pagination] = None,
    data: Option[Seq[Visit]] = None
)
  
object VisitList {
  given encoderVisitList: Encoder[VisitList] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.metadata.map(v => "metadata" -> v.asJson),
        t.pagination.map(v => "pagination" -> v.asJson),
        t.data.map(v => "data" -> v.asJson)
      ).flatten
    }
  }
  given decoderVisitList: Decoder[VisitList] = Decoder.instance { c =>
    for {
      metadata <- c.downField("metadata").as[Option[Metadata]]
      pagination <- c.downField("pagination").as[Option[Pagination]]
      data <- c.downField("data").as[Option[Seq[Visit]]]
    } yield VisitList(
      metadata = metadata,
      pagination = pagination,
      data = data
    )
  }
}

