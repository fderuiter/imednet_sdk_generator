/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Keyword;




public class Subject  {
  
 /**
   * Unique study key
  **/
  private String studyKey;

 /**
   * Mednet subject ID (internal numeric ID)
  **/
  private Integer subjectId;

 /**
   * Client-assigned subject object identifier (OID)
  **/
  private String subjectOid;

 /**
   * Protocol-assigned subject identifier (display ID)
  **/
  private String subjectKey;

 /**
   * Current status of the subject (e.g., Enrolled)
  **/
  private String subjectStatus;

 /**
   * Mednet site ID the subject is associated with
  **/
  private Integer siteId;

 /**
   * Name of the site the subject is associated with
  **/
  private String siteName;

 /**
   * Whether the subject is marked as deleted
  **/
  private Boolean deleted;

 /**
   * Subject’s enrollment start date
  **/
  private String enrollmentStartDate;

 /**
   * Date when this subject record was created
  **/
  private String dateCreated;

 /**
   * Date when this subject record was last modified
  **/
  private String dateModified;

 /**
   * List of keywords associated with the subject
  **/
  private List<Keyword> keywords = null;

 /**
   * Unique study key
   * @return studyKey
  **/
  public String getStudyKey() {
    return studyKey;
  }

  /**
    * Set studyKey
  **/
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  public Subject studyKey(String studyKey) {
    this.studyKey = studyKey;
    return this;
  }

 /**
   * Mednet subject ID (internal numeric ID)
   * @return subjectId
  **/
  public Integer getSubjectId() {
    return subjectId;
  }

  /**
    * Set subjectId
  **/
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  public Subject subjectId(Integer subjectId) {
    this.subjectId = subjectId;
    return this;
  }

 /**
   * Client-assigned subject object identifier (OID)
   * @return subjectOid
  **/
  public String getSubjectOid() {
    return subjectOid;
  }

  /**
    * Set subjectOid
  **/
  public void setSubjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
  }

  public Subject subjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
    return this;
  }

 /**
   * Protocol-assigned subject identifier (display ID)
   * @return subjectKey
  **/
  public String getSubjectKey() {
    return subjectKey;
  }

  /**
    * Set subjectKey
  **/
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  public Subject subjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
    return this;
  }

 /**
   * Current status of the subject (e.g., Enrolled)
   * @return subjectStatus
  **/
  public String getSubjectStatus() {
    return subjectStatus;
  }

  /**
    * Set subjectStatus
  **/
  public void setSubjectStatus(String subjectStatus) {
    this.subjectStatus = subjectStatus;
  }

  public Subject subjectStatus(String subjectStatus) {
    this.subjectStatus = subjectStatus;
    return this;
  }

 /**
   * Mednet site ID the subject is associated with
   * @return siteId
  **/
  public Integer getSiteId() {
    return siteId;
  }

  /**
    * Set siteId
  **/
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  public Subject siteId(Integer siteId) {
    this.siteId = siteId;
    return this;
  }

 /**
   * Name of the site the subject is associated with
   * @return siteName
  **/
  public String getSiteName() {
    return siteName;
  }

  /**
    * Set siteName
  **/
  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  public Subject siteName(String siteName) {
    this.siteName = siteName;
    return this;
  }

 /**
   * Whether the subject is marked as deleted
   * @return deleted
  **/
  public Boolean getDeleted() {
    return deleted;
  }

  /**
    * Set deleted
  **/
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public Subject deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

 /**
   * Subject’s enrollment start date
   * @return enrollmentStartDate
  **/
  public String getEnrollmentStartDate() {
    return enrollmentStartDate;
  }

  /**
    * Set enrollmentStartDate
  **/
  public void setEnrollmentStartDate(String enrollmentStartDate) {
    this.enrollmentStartDate = enrollmentStartDate;
  }

  public Subject enrollmentStartDate(String enrollmentStartDate) {
    this.enrollmentStartDate = enrollmentStartDate;
    return this;
  }

 /**
   * Date when this subject record was created
   * @return dateCreated
  **/
  public String getDateCreated() {
    return dateCreated;
  }

  /**
    * Set dateCreated
  **/
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  public Subject dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

 /**
   * Date when this subject record was last modified
   * @return dateModified
  **/
  public String getDateModified() {
    return dateModified;
  }

  /**
    * Set dateModified
  **/
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }

  public Subject dateModified(String dateModified) {
    this.dateModified = dateModified;
    return this;
  }

 /**
   * List of keywords associated with the subject
   * @return keywords
  **/
  public List<Keyword> getKeywords() {
    return keywords;
  }

  /**
    * Set keywords
  **/
  public void setKeywords(List<Keyword> keywords) {
    this.keywords = keywords;
  }

  public Subject keywords(List<Keyword> keywords) {
    this.keywords = keywords;
    return this;
  }

  public Subject addKeywordsItem(Keyword keywordsItem) {
    this.keywords.add(keywordsItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subject {\n");
    
    sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
    sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
    sb.append("    subjectOid: ").append(toIndentedString(subjectOid)).append("\n");
    sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
    sb.append("    subjectStatus: ").append(toIndentedString(subjectStatus)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    enrollmentStartDate: ").append(toIndentedString(enrollmentStartDate)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

