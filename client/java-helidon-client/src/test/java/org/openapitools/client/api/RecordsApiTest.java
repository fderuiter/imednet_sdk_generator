/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.model.ComponentsSchemasRecordCreateRequestItem;
import org.openapitools.client.model.InlineObject;
import org.openapitools.client.model.InlineObject1;
import org.openapitools.client.model.InlineObject2;
import org.openapitools.client.model.InlineObject3;
import org.openapitools.client.model.InlineObject4;
import org.openapitools.client.model.InlineObject5;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.openapitools.client.model.RecordJobStatus;
import org.openapitools.client.model.RecordList;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import org.eclipse.microprofile.rest.client.RestClientBuilder;

import java.net.URL;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Mednet EDC API Test
 *
 * API tests for RecordsApi
 */
public class RecordsApiTest {

    private static RecordsApi client;
    private static final String baseUrl = "http://localhost:8080";

    @BeforeAll
    public static void setup() throws MalformedURLException {
        client = RestClientBuilder.newBuilder()
                        .baseUrl(new URL(baseUrl))
                        .register(ApiException.class)
                        .build(RecordsApi.class);
    }

    
    /**
     * Add new record or update subject/record data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRecordsTest() throws Exception {
        //RecordJobStatus response = client.createRecords(studyKey, componentsSchemasRecordCreateRequestItem);
        //assertNotNull(response);
    }
    
    /**
     * List records (eCRF instances) in a study
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRecordsTest() throws Exception {
        //RecordList response = client.listRecords(studyKey, page, size, sort, filter, recordDataFilter);
        //assertNotNull(response);
    }
    
}
