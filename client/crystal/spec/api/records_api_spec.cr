# #Mednet EDC API
#
##The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
#
#The version of the OpenAPI document: 1.3.6
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.14.0
#

require "../spec_helper"

# Unit tests for OpenAPIClient::RecordsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
Spectator.describe "RecordsApi" do
  describe "test an instance of RecordsApi" do
    it "should create an instance of RecordsApi" do
      api_instance = OpenAPIClient::RecordsApi.new
      expect(api_instance).to be_instance_of(OpenAPIClient::RecordsApi)
    end
  end

  # unit tests for create_records
  # Add new record or update subject/record data
  # @param study_key Study key identifying the study context for the request
  # @param components_schemas_record_create_request_item An array of record objects defining the operation to perform (subject registration, record creation, or scheduled record update).
  # @param [Hash] opts the optional parameters
  # @return [RecordJobStatus]
  describe "create_records test" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_records
  # List records (eCRF instances) in a study
  # @param study_key Study key identifying the study context for the request
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :page Page index to retrieve (0-based)
  # @option opts [Int32] :size Number of items to return per page (max 500)
  # @option opts [String] :sort Sorting criteria in the format &#x60;property,ASC&#x60; or &#x60;property,DESC&#x60;. Can be repeated.
  # @option opts [String] :filter Optional filter criteria to apply, in the format &#x60;attribute&#x3D;&#x3D;value&#x60; with support for &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;, !&#x3D;. Multiple criteria can be combined with &#x60;;&#x60; (AND) or &#x60;,&#x60; (OR).
  # @option opts [String] :record_data_filter Optional filter criteria to apply on recordData fields (question responses). Supports &#x3D;&#x3D;, !&#x3D;, &lt;, &lt;&#x3D;, &gt;, &gt;&#x3D;, &#x3D;~ (contains) and can combine multiple criteria with &#x60;;&#x60; (AND) or &#x60;,&#x60; (OR).
  # @return [RecordList]
  describe "list_records test" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
