/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Visit
 */
@JsonPropertyOrder({
  Visit.JSON_PROPERTY_STUDY_KEY,
  Visit.JSON_PROPERTY_VISIT_ID,
  Visit.JSON_PROPERTY_INTERVAL_ID,
  Visit.JSON_PROPERTY_INTERVAL_NAME,
  Visit.JSON_PROPERTY_SUBJECT_ID,
  Visit.JSON_PROPERTY_SUBJECT_KEY,
  Visit.JSON_PROPERTY_START_DATE,
  Visit.JSON_PROPERTY_END_DATE,
  Visit.JSON_PROPERTY_DUE_DATE,
  Visit.JSON_PROPERTY_VISIT_DATE,
  Visit.JSON_PROPERTY_VISIT_DATE_FORM,
  Visit.JSON_PROPERTY_VISIT_DATE_QUESTION,
  Visit.JSON_PROPERTY_DELETED,
  Visit.JSON_PROPERTY_DATE_CREATED,
  Visit.JSON_PROPERTY_DATE_MODIFIED
})
@JsonTypeName("Visit")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Visit {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_VISIT_ID = "visitId";
    private Integer visitId;

    public static final String JSON_PROPERTY_INTERVAL_ID = "intervalId";
    private Integer intervalId;

    public static final String JSON_PROPERTY_INTERVAL_NAME = "intervalName";
    private String intervalName;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_START_DATE = "startDate";
    private String startDate;

    public static final String JSON_PROPERTY_END_DATE = "endDate";
    private String endDate;

    public static final String JSON_PROPERTY_DUE_DATE = "dueDate";
    private String dueDate;

    public static final String JSON_PROPERTY_VISIT_DATE = "visitDate";
    private String visitDate;

    public static final String JSON_PROPERTY_VISIT_DATE_FORM = "visitDateForm";
    private String visitDateForm;

    public static final String JSON_PROPERTY_VISIT_DATE_QUESTION = "visitDateQuestion";
    private String visitDateQuestion;

    public static final String JSON_PROPERTY_DELETED = "deleted";
    private Boolean deleted;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public Visit() {
    }

    public Visit studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Visit visitId(Integer visitId) {
        this.visitId = visitId;
        return this;
    }

    /**
     * Unique system identifier for the subject visit instance
     * @return visitId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VISIT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getVisitId() {
        return visitId;
    }

    @JsonProperty(JSON_PROPERTY_VISIT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitId(Integer visitId) {
        this.visitId = visitId;
    }

    public Visit intervalId(Integer intervalId) {
        this.intervalId = intervalId;
        return this;
    }

    /**
     * Unique system identifier of the interval definition for this visit
     * @return intervalId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalId() {
        return intervalId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalId(Integer intervalId) {
        this.intervalId = intervalId;
    }

    public Visit intervalName(String intervalName) {
        this.intervalName = intervalName;
        return this;
    }

    /**
     * Name of the interval (visit) for this visit instance
     * @return intervalName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIntervalName() {
        return intervalName;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalName(String intervalName) {
        this.intervalName = intervalName;
    }

    public Visit subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Mednet subject ID of the subject
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public Visit subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Protocol-assigned subject identifier
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public Visit startDate(String startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Start date of the visit window (in YYYY-MM-DD format)
     * @return startDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStartDate() {
        return startDate;
    }

    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    public Visit endDate(String endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * End date of the visit window (in YYYY-MM-DD format)
     * @return endDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEndDate() {
        return endDate;
    }

    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public Visit dueDate(String dueDate) {
        this.dueDate = dueDate;
        return this;
    }

    /**
     * Due date of the visit (in YYYY-MM-DD format), if applicable
     * @return dueDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DUE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDueDate() {
        return dueDate;
    }

    @JsonProperty(JSON_PROPERTY_DUE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDueDate(String dueDate) {
        this.dueDate = dueDate;
    }

    public Visit visitDate(String visitDate) {
        this.visitDate = visitDate;
        return this;
    }

    /**
     * Actual date the visit took place (in YYYY-MM-DD format)
     * @return visitDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VISIT_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVisitDate() {
        return visitDate;
    }

    @JsonProperty(JSON_PROPERTY_VISIT_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitDate(String visitDate) {
        this.visitDate = visitDate;
    }

    public Visit visitDateForm(String visitDateForm) {
        this.visitDateForm = visitDateForm;
        return this;
    }

    /**
     * Name of the form used to capture the actual visit date
     * @return visitDateForm
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VISIT_DATE_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVisitDateForm() {
        return visitDateForm;
    }

    @JsonProperty(JSON_PROPERTY_VISIT_DATE_FORM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitDateForm(String visitDateForm) {
        this.visitDateForm = visitDateForm;
    }

    public Visit visitDateQuestion(String visitDateQuestion) {
        this.visitDateQuestion = visitDateQuestion;
        return this;
    }

    /**
     * Variable name of the field capturing the actual visit date
     * @return visitDateQuestion
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VISIT_DATE_QUESTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVisitDateQuestion() {
        return visitDateQuestion;
    }

    @JsonProperty(JSON_PROPERTY_VISIT_DATE_QUESTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitDateQuestion(String visitDateQuestion) {
        this.visitDateQuestion = visitDateQuestion;
    }

    public Visit deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Whether the visit instance is marked as deleted
     * @return deleted
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeleted() {
        return deleted;
    }

    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public Visit dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this visit record was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Visit dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when this visit record was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Visit visit = (Visit) o;
        return Objects.equals(this.studyKey, visit.studyKey) &&
            Objects.equals(this.visitId, visit.visitId) &&
            Objects.equals(this.intervalId, visit.intervalId) &&
            Objects.equals(this.intervalName, visit.intervalName) &&
            Objects.equals(this.subjectId, visit.subjectId) &&
            Objects.equals(this.subjectKey, visit.subjectKey) &&
            Objects.equals(this.startDate, visit.startDate) &&
            Objects.equals(this.endDate, visit.endDate) &&
            Objects.equals(this.dueDate, visit.dueDate) &&
            Objects.equals(this.visitDate, visit.visitDate) &&
            Objects.equals(this.visitDateForm, visit.visitDateForm) &&
            Objects.equals(this.visitDateQuestion, visit.visitDateQuestion) &&
            Objects.equals(this.deleted, visit.deleted) &&
            Objects.equals(this.dateCreated, visit.dateCreated) &&
            Objects.equals(this.dateModified, visit.dateModified);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, visitId, intervalId, intervalName, subjectId, subjectKey, startDate, endDate, dueDate, visitDate, visitDateForm, visitDateQuestion, deleted, dateCreated, dateModified);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Visit {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    visitId: ").append(toIndentedString(visitId)).append("\n");
        sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
        sb.append("    intervalName: ").append(toIndentedString(intervalName)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
        sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
        sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
        sb.append("    visitDate: ").append(toIndentedString(visitDate)).append("\n");
        sb.append("    visitDateForm: ").append(toIndentedString(visitDateForm)).append("\n");
        sb.append("    visitDateQuestion: ").append(toIndentedString(visitDateQuestion)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

