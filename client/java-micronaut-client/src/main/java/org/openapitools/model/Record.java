/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.model.Keyword;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Record
 */
@JsonPropertyOrder({
  Record.JSON_PROPERTY_STUDY_KEY,
  Record.JSON_PROPERTY_INTERVAL_ID,
  Record.JSON_PROPERTY_FORM_ID,
  Record.JSON_PROPERTY_FORM_KEY,
  Record.JSON_PROPERTY_SITE_ID,
  Record.JSON_PROPERTY_RECORD_ID,
  Record.JSON_PROPERTY_RECORD_OID,
  Record.JSON_PROPERTY_RECORD_TYPE,
  Record.JSON_PROPERTY_RECORD_STATUS,
  Record.JSON_PROPERTY_DELETED,
  Record.JSON_PROPERTY_DATE_CREATED,
  Record.JSON_PROPERTY_DATE_MODIFIED,
  Record.JSON_PROPERTY_SUBJECT_ID,
  Record.JSON_PROPERTY_SUBJECT_OID,
  Record.JSON_PROPERTY_SUBJECT_KEY,
  Record.JSON_PROPERTY_VISIT_ID,
  Record.JSON_PROPERTY_PARENT_RECORD_ID,
  Record.JSON_PROPERTY_KEYWORDS,
  Record.JSON_PROPERTY_RECORD_DATA
})
@JsonTypeName("Record")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Record {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_INTERVAL_ID = "intervalId";
    private Integer intervalId;

    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_SITE_ID = "siteId";
    private Integer siteId;

    public static final String JSON_PROPERTY_RECORD_ID = "recordId";
    private Integer recordId;

    public static final String JSON_PROPERTY_RECORD_OID = "recordOid";
    private String recordOid;

    public static final String JSON_PROPERTY_RECORD_TYPE = "recordType";
    private String recordType;

    public static final String JSON_PROPERTY_RECORD_STATUS = "recordStatus";
    private String recordStatus;

    public static final String JSON_PROPERTY_DELETED = "deleted";
    private Boolean deleted;

    public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
    private String dateCreated;

    public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
    private String dateModified;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_OID = "subjectOid";
    private String subjectOid;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_VISIT_ID = "visitId";
    private Integer visitId;

    public static final String JSON_PROPERTY_PARENT_RECORD_ID = "parentRecordId";
    private Integer parentRecordId;

    public static final String JSON_PROPERTY_KEYWORDS = "keywords";
    private List<@Valid Keyword> keywords = null;

    public static final String JSON_PROPERTY_RECORD_DATA = "recordData";
    private Map<String, Object> recordData = null;

    public Record() {
    }

    public Record studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Record intervalId(Integer intervalId) {
        this.intervalId = intervalId;
        return this;
    }

    /**
     * Interval ID (visit definition) that this record is associated with
     * @return intervalId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getIntervalId() {
        return intervalId;
    }

    @JsonProperty(JSON_PROPERTY_INTERVAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIntervalId(Integer intervalId) {
        this.intervalId = intervalId;
    }

    public Record formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * Form ID of the form this record instance belongs to
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public Record formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key of the form for this record instance
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public Record siteId(Integer siteId) {
        this.siteId = siteId;
        return this;
    }

    /**
     * Site ID associated with the record
     * @return siteId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSiteId() {
        return siteId;
    }

    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteId(Integer siteId) {
        this.siteId = siteId;
    }

    public Record recordId(Integer recordId) {
        this.recordId = recordId;
        return this;
    }

    /**
     * Unique record ID
     * @return recordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordId() {
        return recordId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    public Record recordOid(String recordOid) {
        this.recordOid = recordOid;
        return this;
    }

    /**
     * Client-assigned record OID
     * @return recordOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordOid() {
        return recordOid;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordOid(String recordOid) {
        this.recordOid = recordOid;
    }

    public Record recordType(String recordType) {
        this.recordType = recordType;
        return this;
    }

    /**
     * Type of record (e.g., SUBJECT for subject-related forms)
     * @return recordType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordType() {
        return recordType;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    public Record recordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
        return this;
    }

    /**
     * Current status of the record (e.g., Record Incomplete, Record Complete)
     * @return recordStatus
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordStatus() {
        return recordStatus;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordStatus(String recordStatus) {
        this.recordStatus = recordStatus;
    }

    public Record deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Whether the record is marked as deleted
     * @return deleted
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeleted() {
        return deleted;
    }

    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public Record dateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }

    /**
     * Date when this record was created
     * @return dateCreated
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCreated() {
        return dateCreated;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Record dateModified(String dateModified) {
        this.dateModified = dateModified;
        return this;
    }

    /**
     * Date when this record was last modified
     * @return dateModified
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateModified() {
        return dateModified;
    }

    @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateModified(String dateModified) {
        this.dateModified = dateModified;
    }

    public Record subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Mednet subject ID that this record is associated with
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public Record subjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
        return this;
    }

    /**
     * Client-assigned subject OID for the subject this record is associated with
     * @return subjectOid
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectOid() {
        return subjectOid;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_OID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectOid(String subjectOid) {
        this.subjectOid = subjectOid;
    }

    public Record subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Subject display ID that this record is associated with
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public Record visitId(Integer visitId) {
        this.visitId = visitId;
        return this;
    }

    /**
     * Visit instance ID that this record is associated with (if applicable)
     * @return visitId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VISIT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getVisitId() {
        return visitId;
    }

    @JsonProperty(JSON_PROPERTY_VISIT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitId(Integer visitId) {
        this.visitId = visitId;
    }

    public Record parentRecordId(Integer parentRecordId) {
        this.parentRecordId = parentRecordId;
        return this;
    }

    /**
     * Record ID of the parent record if this record is a subrecord (if applicable)
     * @return parentRecordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PARENT_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getParentRecordId() {
        return parentRecordId;
    }

    @JsonProperty(JSON_PROPERTY_PARENT_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParentRecordId(Integer parentRecordId) {
        this.parentRecordId = parentRecordId;
    }

    public Record keywords(List<@Valid Keyword> keywords) {
        this.keywords = keywords;
        return this;
    }

    public Record addKeywordsItem(Keyword keywordsItem) {
        if (this.keywords == null) {
            this.keywords = new ArrayList<>();
        }
        this.keywords.add(keywordsItem);
        return this;
    }

    /**
     * List of keywords associated with the record
     * @return keywords
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_KEYWORDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid Keyword> getKeywords() {
        return keywords;
    }

    @JsonProperty(JSON_PROPERTY_KEYWORDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKeywords(List<@Valid Keyword> keywords) {
        this.keywords = keywords;
    }

    public Record recordData(Map<String, Object> recordData) {
        this.recordData = recordData;
        return this;
    }

    public Record putRecordDataItem(String key, Object recordDataItem) {
        if (this.recordData == null) {
            this.recordData = new HashMap<>();
        }
        this.recordData.put(key, recordDataItem);
        return this;
  }

    /**
     * Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.
     * @return recordData
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_DATA)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public Map<String, Object> getRecordData() {
        return recordData;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_DATA)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordData(Map<String, Object> recordData) {
        this.recordData = recordData;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Record record = (Record) o;
        return Objects.equals(this.studyKey, record.studyKey) &&
            Objects.equals(this.intervalId, record.intervalId) &&
            Objects.equals(this.formId, record.formId) &&
            Objects.equals(this.formKey, record.formKey) &&
            Objects.equals(this.siteId, record.siteId) &&
            Objects.equals(this.recordId, record.recordId) &&
            Objects.equals(this.recordOid, record.recordOid) &&
            Objects.equals(this.recordType, record.recordType) &&
            Objects.equals(this.recordStatus, record.recordStatus) &&
            Objects.equals(this.deleted, record.deleted) &&
            Objects.equals(this.dateCreated, record.dateCreated) &&
            Objects.equals(this.dateModified, record.dateModified) &&
            Objects.equals(this.subjectId, record.subjectId) &&
            Objects.equals(this.subjectOid, record.subjectOid) &&
            Objects.equals(this.subjectKey, record.subjectKey) &&
            Objects.equals(this.visitId, record.visitId) &&
            Objects.equals(this.parentRecordId, record.parentRecordId) &&
            Objects.equals(this.keywords, record.keywords) &&
            Objects.equals(this.recordData, record.recordData);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, intervalId, formId, formKey, siteId, recordId, recordOid, recordType, recordStatus, deleted, dateCreated, dateModified, subjectId, subjectOid, subjectKey, visitId, parentRecordId, keywords, recordData);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Record {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
        sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
        sb.append("    recordOid: ").append(toIndentedString(recordOid)).append("\n");
        sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
        sb.append("    recordStatus: ").append(toIndentedString(recordStatus)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
        sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectOid: ").append(toIndentedString(subjectOid)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    visitId: ").append(toIndentedString(visitId)).append("\n");
        sb.append("    parentRecordId: ").append(toIndentedString(parentRecordId)).append("\n");
        sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
        sb.append("    recordData: ").append(toIndentedString(recordData)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

