/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Coding
 */
@JsonPropertyOrder({
  Coding.JSON_PROPERTY_STUDY_KEY,
  Coding.JSON_PROPERTY_SITE_NAME,
  Coding.JSON_PROPERTY_SITE_ID,
  Coding.JSON_PROPERTY_SUBJECT_ID,
  Coding.JSON_PROPERTY_SUBJECT_KEY,
  Coding.JSON_PROPERTY_FORM_ID,
  Coding.JSON_PROPERTY_FORM_NAME,
  Coding.JSON_PROPERTY_FORM_KEY,
  Coding.JSON_PROPERTY_REVISION,
  Coding.JSON_PROPERTY_RECORD_ID,
  Coding.JSON_PROPERTY_VARIABLE,
  Coding.JSON_PROPERTY_VALUE,
  Coding.JSON_PROPERTY_CODING_ID,
  Coding.JSON_PROPERTY_CODE,
  Coding.JSON_PROPERTY_CODED_BY,
  Coding.JSON_PROPERTY_REASON,
  Coding.JSON_PROPERTY_DICTIONARY_NAME,
  Coding.JSON_PROPERTY_DICTIONARY_VERSION,
  Coding.JSON_PROPERTY_DATE_CODED
})
@JsonTypeName("Coding")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class Coding {
    public static final String JSON_PROPERTY_STUDY_KEY = "studyKey";
    private String studyKey;

    public static final String JSON_PROPERTY_SITE_NAME = "siteName";
    private String siteName;

    public static final String JSON_PROPERTY_SITE_ID = "siteId";
    private Integer siteId;

    public static final String JSON_PROPERTY_SUBJECT_ID = "subjectId";
    private Integer subjectId;

    public static final String JSON_PROPERTY_SUBJECT_KEY = "subjectKey";
    private String subjectKey;

    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_FORM_NAME = "formName";
    private String formName;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_REVISION = "revision";
    private Integer revision;

    public static final String JSON_PROPERTY_RECORD_ID = "recordId";
    private Integer recordId;

    public static final String JSON_PROPERTY_VARIABLE = "variable";
    private String variable;

    public static final String JSON_PROPERTY_VALUE = "value";
    private String value;

    public static final String JSON_PROPERTY_CODING_ID = "codingId";
    private Integer codingId;

    public static final String JSON_PROPERTY_CODE = "code";
    private String code;

    public static final String JSON_PROPERTY_CODED_BY = "codedBy";
    private String codedBy;

    public static final String JSON_PROPERTY_REASON = "reason";
    private String reason;

    public static final String JSON_PROPERTY_DICTIONARY_NAME = "dictionaryName";
    private String dictionaryName;

    public static final String JSON_PROPERTY_DICTIONARY_VERSION = "dictionaryVersion";
    private String dictionaryVersion;

    public static final String JSON_PROPERTY_DATE_CODED = "dateCoded";
    private String dateCoded;

    public Coding() {
    }

    public Coding studyKey(String studyKey) {
        this.studyKey = studyKey;
        return this;
    }

    /**
     * Unique study key
     * @return studyKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStudyKey() {
        return studyKey;
    }

    @JsonProperty(JSON_PROPERTY_STUDY_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStudyKey(String studyKey) {
        this.studyKey = studyKey;
    }

    public Coding siteName(String siteName) {
        this.siteName = siteName;
        return this;
    }

    /**
     * Name of the site associated with the coded data
     * @return siteName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSiteName() {
        return siteName;
    }

    @JsonProperty(JSON_PROPERTY_SITE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteName(String siteName) {
        this.siteName = siteName;
    }

    public Coding siteId(Integer siteId) {
        this.siteId = siteId;
        return this;
    }

    /**
     * Site ID associated with the coded data
     * @return siteId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSiteId() {
        return siteId;
    }

    @JsonProperty(JSON_PROPERTY_SITE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSiteId(Integer siteId) {
        this.siteId = siteId;
    }

    public Coding subjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    /**
     * Subject ID associated with the coded data
     * @return subjectId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubjectId() {
        return subjectId;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    public Coding subjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Subject key (display ID) associated with the coded data
     * @return subjectKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubjectKey() {
        return subjectKey;
    }

    @JsonProperty(JSON_PROPERTY_SUBJECT_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
    }

    public Coding formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * Form ID where the coded data originates
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public Coding formName(String formName) {
        this.formName = formName;
        return this;
    }

    /**
     * Name of the form where the coded data originates
     * @return formName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormName() {
        return formName;
    }

    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormName(String formName) {
        this.formName = formName;
    }

    public Coding formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key where the coded data originates
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public Coding revision(Integer revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Revision number of the coding entry
     * @return revision
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRevision() {
        return revision;
    }

    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRevision(Integer revision) {
        this.revision = revision;
    }

    public Coding recordId(Integer recordId) {
        this.recordId = recordId;
        return this;
    }

    /**
     * Record ID associated with the coded data
     * @return recordId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRecordId() {
        return recordId;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    public Coding variable(String variable) {
        this.variable = variable;
        return this;
    }

    /**
     * Variable name (field) that was coded
     * @return variable
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVariable() {
        return variable;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariable(String variable) {
        this.variable = variable;
    }

    public Coding value(String value) {
        this.value = value;
        return this;
    }

    /**
     * Original value entered that required coding
     * @return value
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getValue() {
        return value;
    }

    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValue(String value) {
        this.value = value;
    }

    public Coding codingId(Integer codingId) {
        this.codingId = codingId;
        return this;
    }

    /**
     * Mednet coding ID
     * @return codingId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CODING_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCodingId() {
        return codingId;
    }

    @JsonProperty(JSON_PROPERTY_CODING_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCodingId(Integer codingId) {
        this.codingId = codingId;
    }

    public Coding code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Standardized code assigned (e.g., dictionary term)
     * @return code
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(String code) {
        this.code = code;
    }

    public Coding codedBy(String codedBy) {
        this.codedBy = codedBy;
        return this;
    }

    /**
     * Name of the user who performed the coding
     * @return codedBy
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CODED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCodedBy() {
        return codedBy;
    }

    @JsonProperty(JSON_PROPERTY_CODED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCodedBy(String codedBy) {
        this.codedBy = codedBy;
    }

    public Coding reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Reason for coding or any notes on changes
     * @return reason
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getReason() {
        return reason;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReason(String reason) {
        this.reason = reason;
    }

    public Coding dictionaryName(String dictionaryName) {
        this.dictionaryName = dictionaryName;
        return this;
    }

    /**
     * Name of the dictionary used (e.g., MedDRA)
     * @return dictionaryName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DICTIONARY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDictionaryName() {
        return dictionaryName;
    }

    @JsonProperty(JSON_PROPERTY_DICTIONARY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDictionaryName(String dictionaryName) {
        this.dictionaryName = dictionaryName;
    }

    public Coding dictionaryVersion(String dictionaryVersion) {
        this.dictionaryVersion = dictionaryVersion;
        return this;
    }

    /**
     * Version of the dictionary used
     * @return dictionaryVersion
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DICTIONARY_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDictionaryVersion() {
        return dictionaryVersion;
    }

    @JsonProperty(JSON_PROPERTY_DICTIONARY_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDictionaryVersion(String dictionaryVersion) {
        this.dictionaryVersion = dictionaryVersion;
    }

    public Coding dateCoded(String dateCoded) {
        this.dateCoded = dateCoded;
        return this;
    }

    /**
     * Date when the coding was performed
     * @return dateCoded
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_CODED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDateCoded() {
        return dateCoded;
    }

    @JsonProperty(JSON_PROPERTY_DATE_CODED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateCoded(String dateCoded) {
        this.dateCoded = dateCoded;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Coding coding = (Coding) o;
        return Objects.equals(this.studyKey, coding.studyKey) &&
            Objects.equals(this.siteName, coding.siteName) &&
            Objects.equals(this.siteId, coding.siteId) &&
            Objects.equals(this.subjectId, coding.subjectId) &&
            Objects.equals(this.subjectKey, coding.subjectKey) &&
            Objects.equals(this.formId, coding.formId) &&
            Objects.equals(this.formName, coding.formName) &&
            Objects.equals(this.formKey, coding.formKey) &&
            Objects.equals(this.revision, coding.revision) &&
            Objects.equals(this.recordId, coding.recordId) &&
            Objects.equals(this.variable, coding.variable) &&
            Objects.equals(this.value, coding.value) &&
            Objects.equals(this.codingId, coding.codingId) &&
            Objects.equals(this.code, coding.code) &&
            Objects.equals(this.codedBy, coding.codedBy) &&
            Objects.equals(this.reason, coding.reason) &&
            Objects.equals(this.dictionaryName, coding.dictionaryName) &&
            Objects.equals(this.dictionaryVersion, coding.dictionaryVersion) &&
            Objects.equals(this.dateCoded, coding.dateCoded);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studyKey, siteName, siteId, subjectId, subjectKey, formId, formName, formKey, revision, recordId, variable, value, codingId, code, codedBy, reason, dictionaryName, dictionaryVersion, dateCoded);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Coding {\n");
        sb.append("    studyKey: ").append(toIndentedString(studyKey)).append("\n");
        sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
        sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
        sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
        sb.append("    subjectKey: ").append(toIndentedString(subjectKey)).append("\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
        sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
        sb.append("    variable: ").append(toIndentedString(variable)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    codingId: ").append(toIndentedString(codingId)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    codedBy: ").append(toIndentedString(codedBy)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    dictionaryName: ").append(toIndentedString(dictionaryName)).append("\n");
        sb.append("    dictionaryVersion: ").append(toIndentedString(dictionaryVersion)).append("\n");
        sb.append("    dateCoded: ").append(toIndentedString(dateCoded)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

