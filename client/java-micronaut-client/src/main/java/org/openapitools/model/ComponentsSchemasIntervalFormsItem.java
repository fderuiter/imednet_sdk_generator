/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * ComponentsSchemasIntervalFormsItem
 */
@JsonPropertyOrder({
  ComponentsSchemasIntervalFormsItem.JSON_PROPERTY_FORM_ID,
  ComponentsSchemasIntervalFormsItem.JSON_PROPERTY_FORM_KEY,
  ComponentsSchemasIntervalFormsItem.JSON_PROPERTY_FORM_NAME
})
@JsonTypeName("components_schemas_Interval_forms_item")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-07-14T13:50:33.483639736Z[Etc/UTC]", comments = "Generator version: 7.14.0")
@Introspected
public class ComponentsSchemasIntervalFormsItem {
    public static final String JSON_PROPERTY_FORM_ID = "formId";
    private Integer formId;

    public static final String JSON_PROPERTY_FORM_KEY = "formKey";
    private String formKey;

    public static final String JSON_PROPERTY_FORM_NAME = "formName";
    private String formName;

    public ComponentsSchemasIntervalFormsItem() {
    }

    public ComponentsSchemasIntervalFormsItem formId(Integer formId) {
        this.formId = formId;
        return this;
    }

    /**
     * Form ID scheduled in the interval
     * @return formId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFormId() {
        return formId;
    }

    @JsonProperty(JSON_PROPERTY_FORM_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormId(Integer formId) {
        this.formId = formId;
    }

    public ComponentsSchemasIntervalFormsItem formKey(String formKey) {
        this.formKey = formKey;
        return this;
    }

    /**
     * Form key scheduled in the interval
     * @return formKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormKey() {
        return formKey;
    }

    @JsonProperty(JSON_PROPERTY_FORM_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormKey(String formKey) {
        this.formKey = formKey;
    }

    public ComponentsSchemasIntervalFormsItem formName(String formName) {
        this.formName = formName;
        return this;
    }

    /**
     * Form name scheduled in the interval
     * @return formName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFormName() {
        return formName;
    }

    @JsonProperty(JSON_PROPERTY_FORM_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormName(String formName) {
        this.formName = formName;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComponentsSchemasIntervalFormsItem componentsSchemasIntervalFormsItem = (ComponentsSchemasIntervalFormsItem) o;
        return Objects.equals(this.formId, componentsSchemasIntervalFormsItem.formId) &&
            Objects.equals(this.formKey, componentsSchemasIntervalFormsItem.formKey) &&
            Objects.equals(this.formName, componentsSchemasIntervalFormsItem.formName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(formId, formKey, formName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComponentsSchemasIntervalFormsItem {\n");
        sb.append("    formId: ").append(toIndentedString(formId)).append("\n");
        sb.append("    formKey: ").append(toIndentedString(formKey)).append("\n");
        sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

