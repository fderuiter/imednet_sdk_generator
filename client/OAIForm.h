/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForm.h
 *
 * 
 */

#ifndef OAIForm_H
#define OAIForm_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForm : public OAIObject {
public:
    OAIForm();
    OAIForm(QString json);
    ~OAIForm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStudyKey() const;
    void setStudyKey(const QString &study_key);
    bool is_study_key_Set() const;
    bool is_study_key_Valid() const;

    qint32 getFormId() const;
    void setFormId(const qint32 &form_id);
    bool is_form_id_Set() const;
    bool is_form_id_Valid() const;

    QString getFormKey() const;
    void setFormKey(const QString &form_key);
    bool is_form_key_Set() const;
    bool is_form_key_Valid() const;

    QString getFormName() const;
    void setFormName(const QString &form_name);
    bool is_form_name_Set() const;
    bool is_form_name_Valid() const;

    QString getFormType() const;
    void setFormType(const QString &form_type);
    bool is_form_type_Set() const;
    bool is_form_type_Valid() const;

    qint32 getRevision() const;
    void setRevision(const qint32 &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    bool isEmbeddedLog() const;
    void setEmbeddedLog(const bool &embedded_log);
    bool is_embedded_log_Set() const;
    bool is_embedded_log_Valid() const;

    bool isEnforceOwnership() const;
    void setEnforceOwnership(const bool &enforce_ownership);
    bool is_enforce_ownership_Set() const;
    bool is_enforce_ownership_Valid() const;

    bool isUserAgreement() const;
    void setUserAgreement(const bool &user_agreement);
    bool is_user_agreement_Set() const;
    bool is_user_agreement_Valid() const;

    bool isSubjectRecordReport() const;
    void setSubjectRecordReport(const bool &subject_record_report);
    bool is_subject_record_report_Set() const;
    bool is_subject_record_report_Valid() const;

    bool isUnscheduledVisit() const;
    void setUnscheduledVisit(const bool &unscheduled_visit);
    bool is_unscheduled_visit_Set() const;
    bool is_unscheduled_visit_Valid() const;

    bool isOtherForms() const;
    void setOtherForms(const bool &other_forms);
    bool is_other_forms_Set() const;
    bool is_other_forms_Valid() const;

    bool isEproForm() const;
    void setEproForm(const bool &epro_form);
    bool is_epro_form_Set() const;
    bool is_epro_form_Valid() const;

    bool isAllowCopy() const;
    void setAllowCopy(const bool &allow_copy);
    bool is_allow_copy_Set() const;
    bool is_allow_copy_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateModified() const;
    void setDateModified(const QString &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_study_key;
    bool m_study_key_isSet;
    bool m_study_key_isValid;

    qint32 m_form_id;
    bool m_form_id_isSet;
    bool m_form_id_isValid;

    QString m_form_key;
    bool m_form_key_isSet;
    bool m_form_key_isValid;

    QString m_form_name;
    bool m_form_name_isSet;
    bool m_form_name_isValid;

    QString m_form_type;
    bool m_form_type_isSet;
    bool m_form_type_isValid;

    qint32 m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    bool m_embedded_log;
    bool m_embedded_log_isSet;
    bool m_embedded_log_isValid;

    bool m_enforce_ownership;
    bool m_enforce_ownership_isSet;
    bool m_enforce_ownership_isValid;

    bool m_user_agreement;
    bool m_user_agreement_isSet;
    bool m_user_agreement_isValid;

    bool m_subject_record_report;
    bool m_subject_record_report_isSet;
    bool m_subject_record_report_isValid;

    bool m_unscheduled_visit;
    bool m_unscheduled_visit_isSet;
    bool m_unscheduled_visit_isValid;

    bool m_other_forms;
    bool m_other_forms_isSet;
    bool m_other_forms_isValid;

    bool m_epro_form;
    bool m_epro_form_isSet;
    bool m_epro_form_isValid;

    bool m_allow_copy;
    bool m_allow_copy_isSet;
    bool m_allow_copy_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForm)

#endif // OAIForm_H
