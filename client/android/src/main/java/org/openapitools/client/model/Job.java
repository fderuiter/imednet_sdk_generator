/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Job {
  
  @SerializedName("jobId")
  private String jobId = null;
  @SerializedName("batchId")
  private String batchId = null;
  @SerializedName("state")
  private String state = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateStarted")
  private String dateStarted = null;
  @SerializedName("dateFinished")
  private String dateFinished = null;

  /**
   * Unique job identifier
   **/
  @ApiModelProperty(value = "Unique job identifier")
  public String getJobId() {
    return jobId;
  }
  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

  /**
   * Batch ID associated with the job (useful for linking with record creation requests)
   **/
  @ApiModelProperty(value = "Batch ID associated with the job (useful for linking with record creation requests)")
  public String getBatchId() {
    return batchId;
  }
  public void setBatchId(String batchId) {
    this.batchId = batchId;
  }

  /**
   * State of the job (e.g., completed, pending)
   **/
  @ApiModelProperty(value = "State of the job (e.g., completed, pending)")
  public String getState() {
    return state;
  }
  public void setState(String state) {
    this.state = state;
  }

  /**
   * Timestamp when the job was created
   **/
  @ApiModelProperty(value = "Timestamp when the job was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Timestamp when the job started processing
   **/
  @ApiModelProperty(value = "Timestamp when the job started processing")
  public String getDateStarted() {
    return dateStarted;
  }
  public void setDateStarted(String dateStarted) {
    this.dateStarted = dateStarted;
  }

  /**
   * Timestamp when the job finished processing
   **/
  @ApiModelProperty(value = "Timestamp when the job finished processing")
  public String getDateFinished() {
    return dateFinished;
  }
  public void setDateFinished(String dateFinished) {
    this.dateFinished = dateFinished;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return (this.jobId == null ? job.jobId == null : this.jobId.equals(job.jobId)) &&
        (this.batchId == null ? job.batchId == null : this.batchId.equals(job.batchId)) &&
        (this.state == null ? job.state == null : this.state.equals(job.state)) &&
        (this.dateCreated == null ? job.dateCreated == null : this.dateCreated.equals(job.dateCreated)) &&
        (this.dateStarted == null ? job.dateStarted == null : this.dateStarted.equals(job.dateStarted)) &&
        (this.dateFinished == null ? job.dateFinished == null : this.dateFinished.equals(job.dateFinished));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.jobId == null ? 0: this.jobId.hashCode());
    result = 31 * result + (this.batchId == null ? 0: this.batchId.hashCode());
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateStarted == null ? 0: this.dateStarted.hashCode());
    result = 31 * result + (this.dateFinished == null ? 0: this.dateFinished.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    
    sb.append("  jobId: ").append(jobId).append("\n");
    sb.append("  batchId: ").append(batchId).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateStarted: ").append(dateStarted).append("\n");
    sb.append("  dateFinished: ").append(dateFinished).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
