/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RecordRevision {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("recordRevisionId")
  private Integer recordRevisionId = null;
  @SerializedName("recordId")
  private Integer recordId = null;
  @SerializedName("recordOid")
  private String recordOid = null;
  @SerializedName("recordRevision")
  private Integer recordRevision = null;
  @SerializedName("dataRevision")
  private Integer dataRevision = null;
  @SerializedName("recordStatus")
  private String recordStatus = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectOid")
  private String subjectOid = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("siteId")
  private Integer siteId = null;
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("intervalId")
  private Integer intervalId = null;
  @SerializedName("role")
  private String role = null;
  @SerializedName("user")
  private String user = null;
  @SerializedName("reasonForChange")
  private String reasonForChange = null;
  @SerializedName("deleted")
  private Boolean deleted = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Unique system identifier for the record revision
   **/
  @ApiModelProperty(value = "Unique system identifier for the record revision")
  public Integer getRecordRevisionId() {
    return recordRevisionId;
  }
  public void setRecordRevisionId(Integer recordRevisionId) {
    this.recordRevisionId = recordRevisionId;
  }

  /**
   * Unique system identifier of the related record
   **/
  @ApiModelProperty(value = "Unique system identifier of the related record")
  public Integer getRecordId() {
    return recordId;
  }
  public void setRecordId(Integer recordId) {
    this.recordId = recordId;
  }

  /**
   * Client-assigned record OID (if any)
   **/
  @ApiModelProperty(value = "Client-assigned record OID (if any)")
  public String getRecordOid() {
    return recordOid;
  }
  public void setRecordOid(String recordOid) {
    this.recordOid = recordOid;
  }

  /**
   * Revision number of the record (version of the record status)
   **/
  @ApiModelProperty(value = "Revision number of the record (version of the record status)")
  public Integer getRecordRevision() {
    return recordRevision;
  }
  public void setRecordRevision(Integer recordRevision) {
    this.recordRevision = recordRevision;
  }

  /**
   * Revision number of the data within the record
   **/
  @ApiModelProperty(value = "Revision number of the data within the record")
  public Integer getDataRevision() {
    return dataRevision;
  }
  public void setDataRevision(Integer dataRevision) {
    this.dataRevision = dataRevision;
  }

  /**
   * Status of the record at this revision (user-defined status label)
   **/
  @ApiModelProperty(value = "Status of the record at this revision (user-defined status label)")
  public String getRecordStatus() {
    return recordStatus;
  }
  public void setRecordStatus(String recordStatus) {
    this.recordStatus = recordStatus;
  }

  /**
   * Mednet subject ID related to the record
   **/
  @ApiModelProperty(value = "Mednet subject ID related to the record")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Client-assigned subject OID related to the record
   **/
  @ApiModelProperty(value = "Client-assigned subject OID related to the record")
  public String getSubjectOid() {
    return subjectOid;
  }
  public void setSubjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
  }

  /**
   * Subject display ID related to the record
   **/
  @ApiModelProperty(value = "Subject display ID related to the record")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Site ID related to the record
   **/
  @ApiModelProperty(value = "Site ID related to the record")
  public Integer getSiteId() {
    return siteId;
  }
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  /**
   * Form key of the form that the record belongs to
   **/
  @ApiModelProperty(value = "Form key of the form that the record belongs to")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Interval ID (visit definition) related to the record
   **/
  @ApiModelProperty(value = "Interval ID (visit definition) related to the record")
  public Integer getIntervalId() {
    return intervalId;
  }
  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Role name of the user who saved the record revision
   **/
  @ApiModelProperty(value = "Role name of the user who saved the record revision")
  public String getRole() {
    return role;
  }
  public void setRole(String role) {
    this.role = role;
  }

  /**
   * Username of the user who saved the record revision
   **/
  @ApiModelProperty(value = "Username of the user who saved the record revision")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }

  /**
   * Reason for change, if provided (for audit trail)
   **/
  @ApiModelProperty(value = "Reason for change, if provided (for audit trail)")
  public String getReasonForChange() {
    return reasonForChange;
  }
  public void setReasonForChange(String reasonForChange) {
    this.reasonForChange = reasonForChange;
  }

  /**
   * Whether the record was deleted in this revision
   **/
  @ApiModelProperty(value = "Whether the record was deleted in this revision")
  public Boolean getDeleted() {
    return deleted;
  }
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  /**
   * Date when this record revision was created
   **/
  @ApiModelProperty(value = "Date when this record revision was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordRevision recordRevision = (RecordRevision) o;
    return (this.studyKey == null ? recordRevision.studyKey == null : this.studyKey.equals(recordRevision.studyKey)) &&
        (this.recordRevisionId == null ? recordRevision.recordRevisionId == null : this.recordRevisionId.equals(recordRevision.recordRevisionId)) &&
        (this.recordId == null ? recordRevision.recordId == null : this.recordId.equals(recordRevision.recordId)) &&
        (this.recordOid == null ? recordRevision.recordOid == null : this.recordOid.equals(recordRevision.recordOid)) &&
        (this.recordRevision == null ? recordRevision.recordRevision == null : this.recordRevision.equals(recordRevision.recordRevision)) &&
        (this.dataRevision == null ? recordRevision.dataRevision == null : this.dataRevision.equals(recordRevision.dataRevision)) &&
        (this.recordStatus == null ? recordRevision.recordStatus == null : this.recordStatus.equals(recordRevision.recordStatus)) &&
        (this.subjectId == null ? recordRevision.subjectId == null : this.subjectId.equals(recordRevision.subjectId)) &&
        (this.subjectOid == null ? recordRevision.subjectOid == null : this.subjectOid.equals(recordRevision.subjectOid)) &&
        (this.subjectKey == null ? recordRevision.subjectKey == null : this.subjectKey.equals(recordRevision.subjectKey)) &&
        (this.siteId == null ? recordRevision.siteId == null : this.siteId.equals(recordRevision.siteId)) &&
        (this.formKey == null ? recordRevision.formKey == null : this.formKey.equals(recordRevision.formKey)) &&
        (this.intervalId == null ? recordRevision.intervalId == null : this.intervalId.equals(recordRevision.intervalId)) &&
        (this.role == null ? recordRevision.role == null : this.role.equals(recordRevision.role)) &&
        (this.user == null ? recordRevision.user == null : this.user.equals(recordRevision.user)) &&
        (this.reasonForChange == null ? recordRevision.reasonForChange == null : this.reasonForChange.equals(recordRevision.reasonForChange)) &&
        (this.deleted == null ? recordRevision.deleted == null : this.deleted.equals(recordRevision.deleted)) &&
        (this.dateCreated == null ? recordRevision.dateCreated == null : this.dateCreated.equals(recordRevision.dateCreated));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.recordRevisionId == null ? 0: this.recordRevisionId.hashCode());
    result = 31 * result + (this.recordId == null ? 0: this.recordId.hashCode());
    result = 31 * result + (this.recordOid == null ? 0: this.recordOid.hashCode());
    result = 31 * result + (this.recordRevision == null ? 0: this.recordRevision.hashCode());
    result = 31 * result + (this.dataRevision == null ? 0: this.dataRevision.hashCode());
    result = 31 * result + (this.recordStatus == null ? 0: this.recordStatus.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectOid == null ? 0: this.subjectOid.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.siteId == null ? 0: this.siteId.hashCode());
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.intervalId == null ? 0: this.intervalId.hashCode());
    result = 31 * result + (this.role == null ? 0: this.role.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    result = 31 * result + (this.reasonForChange == null ? 0: this.reasonForChange.hashCode());
    result = 31 * result + (this.deleted == null ? 0: this.deleted.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordRevision {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  recordRevisionId: ").append(recordRevisionId).append("\n");
    sb.append("  recordId: ").append(recordId).append("\n");
    sb.append("  recordOid: ").append(recordOid).append("\n");
    sb.append("  recordRevision: ").append(recordRevision).append("\n");
    sb.append("  dataRevision: ").append(dataRevision).append("\n");
    sb.append("  recordStatus: ").append(recordStatus).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectOid: ").append(subjectOid).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  siteId: ").append(siteId).append("\n");
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  intervalId: ").append(intervalId).append("\n");
    sb.append("  role: ").append(role).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("  reasonForChange: ").append(reasonForChange).append("\n");
    sb.append("  deleted: ").append(deleted).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
