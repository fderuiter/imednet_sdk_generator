/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Form {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("formId")
  private Integer formId = null;
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("formName")
  private String formName = null;
  @SerializedName("formType")
  private String formType = null;
  @SerializedName("revision")
  private Integer revision = null;
  @SerializedName("embeddedLog")
  private Boolean embeddedLog = null;
  @SerializedName("enforceOwnership")
  private Boolean enforceOwnership = null;
  @SerializedName("userAgreement")
  private Boolean userAgreement = null;
  @SerializedName("subjectRecordReport")
  private Boolean subjectRecordReport = null;
  @SerializedName("unscheduledVisit")
  private Boolean unscheduledVisit = null;
  @SerializedName("otherForms")
  private Boolean otherForms = null;
  @SerializedName("eproForm")
  private Boolean eproForm = null;
  @SerializedName("allowCopy")
  private Boolean allowCopy = null;
  @SerializedName("disabled")
  private Boolean disabled = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Mednet Form ID
   **/
  @ApiModelProperty(value = "Mednet Form ID")
  public Integer getFormId() {
    return formId;
  }
  public void setFormId(Integer formId) {
    this.formId = formId;
  }

  /**
   * User-defined form key
   **/
  @ApiModelProperty(value = "User-defined form key")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Name of the form (eCRF)
   **/
  @ApiModelProperty(value = "Name of the form (eCRF)")
  public String getFormName() {
    return formName;
  }
  public void setFormName(String formName) {
    this.formName = formName;
  }

  /**
   * Type of the form (e.g., Subject or Site)
   **/
  @ApiModelProperty(value = "Type of the form (e.g., Subject or Site)")
  public String getFormType() {
    return formType;
  }
  public void setFormType(String formType) {
    this.formType = formType;
  }

  /**
   * Number of modifications (revisions) of the form metadata
   **/
  @ApiModelProperty(value = "Number of modifications (revisions) of the form metadata")
  public Integer getRevision() {
    return revision;
  }
  public void setRevision(Integer revision) {
    this.revision = revision;
  }

  /**
   * Whether the form has an embedded log
   **/
  @ApiModelProperty(value = "Whether the form has an embedded log")
  public Boolean getEmbeddedLog() {
    return embeddedLog;
  }
  public void setEmbeddedLog(Boolean embeddedLog) {
    this.embeddedLog = embeddedLog;
  }

  /**
   * Whether the form enforces record ownership
   **/
  @ApiModelProperty(value = "Whether the form enforces record ownership")
  public Boolean getEnforceOwnership() {
    return enforceOwnership;
  }
  public void setEnforceOwnership(Boolean enforceOwnership) {
    this.enforceOwnership = enforceOwnership;
  }

  /**
   * Whether the form requires a user agreement
   **/
  @ApiModelProperty(value = "Whether the form requires a user agreement")
  public Boolean getUserAgreement() {
    return userAgreement;
  }
  public void setUserAgreement(Boolean userAgreement) {
    this.userAgreement = userAgreement;
  }

  /**
   * Whether the form is marked as a subject record report
   **/
  @ApiModelProperty(value = "Whether the form is marked as a subject record report")
  public Boolean getSubjectRecordReport() {
    return subjectRecordReport;
  }
  public void setSubjectRecordReport(Boolean subjectRecordReport) {
    this.subjectRecordReport = subjectRecordReport;
  }

  /**
   * Whether the form is included in unscheduled visits
   **/
  @ApiModelProperty(value = "Whether the form is included in unscheduled visits")
  public Boolean getUnscheduledVisit() {
    return unscheduledVisit;
  }
  public void setUnscheduledVisit(Boolean unscheduledVisit) {
    this.unscheduledVisit = unscheduledVisit;
  }

  /**
   * Whether the form is included in Other Forms category
   **/
  @ApiModelProperty(value = "Whether the form is included in Other Forms category")
  public Boolean getOtherForms() {
    return otherForms;
  }
  public void setOtherForms(Boolean otherForms) {
    this.otherForms = otherForms;
  }

  /**
   * Whether the form is an ePRO (electronic patient reported outcome) form
   **/
  @ApiModelProperty(value = "Whether the form is an ePRO (electronic patient reported outcome) form")
  public Boolean getEproForm() {
    return eproForm;
  }
  public void setEproForm(Boolean eproForm) {
    this.eproForm = eproForm;
  }

  /**
   * Whether the form allows copying of data
   **/
  @ApiModelProperty(value = "Whether the form allows copying of data")
  public Boolean getAllowCopy() {
    return allowCopy;
  }
  public void setAllowCopy(Boolean allowCopy) {
    this.allowCopy = allowCopy;
  }

  /**
   * Whether the form is soft-deleted (disabled)
   **/
  @ApiModelProperty(value = "Whether the form is soft-deleted (disabled)")
  public Boolean getDisabled() {
    return disabled;
  }
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  /**
   * Date when this form was created
   **/
  @ApiModelProperty(value = "Date when this form was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this form was last modified
   **/
  @ApiModelProperty(value = "Date when this form was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Form form = (Form) o;
    return (this.studyKey == null ? form.studyKey == null : this.studyKey.equals(form.studyKey)) &&
        (this.formId == null ? form.formId == null : this.formId.equals(form.formId)) &&
        (this.formKey == null ? form.formKey == null : this.formKey.equals(form.formKey)) &&
        (this.formName == null ? form.formName == null : this.formName.equals(form.formName)) &&
        (this.formType == null ? form.formType == null : this.formType.equals(form.formType)) &&
        (this.revision == null ? form.revision == null : this.revision.equals(form.revision)) &&
        (this.embeddedLog == null ? form.embeddedLog == null : this.embeddedLog.equals(form.embeddedLog)) &&
        (this.enforceOwnership == null ? form.enforceOwnership == null : this.enforceOwnership.equals(form.enforceOwnership)) &&
        (this.userAgreement == null ? form.userAgreement == null : this.userAgreement.equals(form.userAgreement)) &&
        (this.subjectRecordReport == null ? form.subjectRecordReport == null : this.subjectRecordReport.equals(form.subjectRecordReport)) &&
        (this.unscheduledVisit == null ? form.unscheduledVisit == null : this.unscheduledVisit.equals(form.unscheduledVisit)) &&
        (this.otherForms == null ? form.otherForms == null : this.otherForms.equals(form.otherForms)) &&
        (this.eproForm == null ? form.eproForm == null : this.eproForm.equals(form.eproForm)) &&
        (this.allowCopy == null ? form.allowCopy == null : this.allowCopy.equals(form.allowCopy)) &&
        (this.disabled == null ? form.disabled == null : this.disabled.equals(form.disabled)) &&
        (this.dateCreated == null ? form.dateCreated == null : this.dateCreated.equals(form.dateCreated)) &&
        (this.dateModified == null ? form.dateModified == null : this.dateModified.equals(form.dateModified));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.formId == null ? 0: this.formId.hashCode());
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.formName == null ? 0: this.formName.hashCode());
    result = 31 * result + (this.formType == null ? 0: this.formType.hashCode());
    result = 31 * result + (this.revision == null ? 0: this.revision.hashCode());
    result = 31 * result + (this.embeddedLog == null ? 0: this.embeddedLog.hashCode());
    result = 31 * result + (this.enforceOwnership == null ? 0: this.enforceOwnership.hashCode());
    result = 31 * result + (this.userAgreement == null ? 0: this.userAgreement.hashCode());
    result = 31 * result + (this.subjectRecordReport == null ? 0: this.subjectRecordReport.hashCode());
    result = 31 * result + (this.unscheduledVisit == null ? 0: this.unscheduledVisit.hashCode());
    result = 31 * result + (this.otherForms == null ? 0: this.otherForms.hashCode());
    result = 31 * result + (this.eproForm == null ? 0: this.eproForm.hashCode());
    result = 31 * result + (this.allowCopy == null ? 0: this.allowCopy.hashCode());
    result = 31 * result + (this.disabled == null ? 0: this.disabled.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Form {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  formId: ").append(formId).append("\n");
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  formName: ").append(formName).append("\n");
    sb.append("  formType: ").append(formType).append("\n");
    sb.append("  revision: ").append(revision).append("\n");
    sb.append("  embeddedLog: ").append(embeddedLog).append("\n");
    sb.append("  enforceOwnership: ").append(enforceOwnership).append("\n");
    sb.append("  userAgreement: ").append(userAgreement).append("\n");
    sb.append("  subjectRecordReport: ").append(subjectRecordReport).append("\n");
    sb.append("  unscheduledVisit: ").append(unscheduledVisit).append("\n");
    sb.append("  otherForms: ").append(otherForms).append("\n");
    sb.append("  eproForm: ").append(eproForm).append("\n");
    sb.append("  allowCopy: ").append(allowCopy).append("\n");
    sb.append("  disabled: ").append(disabled).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
