/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Role {
  
  @SerializedName("dateCreated")
  private List<Integer> dateCreated = null;
  @SerializedName("dateModified")
  private List<Integer> dateModified = null;
  @SerializedName("roleId")
  private String roleId = null;
  @SerializedName("communityId")
  private Integer communityId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("level")
  private Integer level = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("inactive")
  private Boolean inactive = null;

  /**
   * Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond])
   **/
  @ApiModelProperty(value = "Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond])")
  public List<Integer> getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(List<Integer> dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Timestamp when the role assignment was last modified
   **/
  @ApiModelProperty(value = "Timestamp when the role assignment was last modified")
  public List<Integer> getDateModified() {
    return dateModified;
  }
  public void setDateModified(List<Integer> dateModified) {
    this.dateModified = dateModified;
  }

  /**
   * Unique role ID (UUID)
   **/
  @ApiModelProperty(value = "Unique role ID (UUID)")
  public String getRoleId() {
    return roleId;
  }
  public void setRoleId(String roleId) {
    this.roleId = roleId;
  }

  /**
   * Community ID or level associated with the role
   **/
  @ApiModelProperty(value = "Community ID or level associated with the role")
  public Integer getCommunityId() {
    return communityId;
  }
  public void setCommunityId(Integer communityId) {
    this.communityId = communityId;
  }

  /**
   * Name of the role
   **/
  @ApiModelProperty(value = "Name of the role")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Description of the role
   **/
  @ApiModelProperty(value = "Description of the role")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Role level or hierarchy
   **/
  @ApiModelProperty(value = "Role level or hierarchy")
  public Integer getLevel() {
    return level;
  }
  public void setLevel(Integer level) {
    this.level = level;
  }

  /**
   * Role type/category
   **/
  @ApiModelProperty(value = "Role type/category")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Whether the role is inactive
   **/
  @ApiModelProperty(value = "Whether the role is inactive")
  public Boolean getInactive() {
    return inactive;
  }
  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Role role = (Role) o;
    return (this.dateCreated == null ? role.dateCreated == null : this.dateCreated.equals(role.dateCreated)) &&
        (this.dateModified == null ? role.dateModified == null : this.dateModified.equals(role.dateModified)) &&
        (this.roleId == null ? role.roleId == null : this.roleId.equals(role.roleId)) &&
        (this.communityId == null ? role.communityId == null : this.communityId.equals(role.communityId)) &&
        (this.name == null ? role.name == null : this.name.equals(role.name)) &&
        (this.description == null ? role.description == null : this.description.equals(role.description)) &&
        (this.level == null ? role.level == null : this.level.equals(role.level)) &&
        (this.type == null ? role.type == null : this.type.equals(role.type)) &&
        (this.inactive == null ? role.inactive == null : this.inactive.equals(role.inactive));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    result = 31 * result + (this.roleId == null ? 0: this.roleId.hashCode());
    result = 31 * result + (this.communityId == null ? 0: this.communityId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.level == null ? 0: this.level.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.inactive == null ? 0: this.inactive.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Role {\n");
    
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("  roleId: ").append(roleId).append("\n");
    sb.append("  communityId: ").append(communityId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  level: ").append(level).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  inactive: ").append(inactive).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
