/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Map;
import org.openapitools.client.model.OasAnyTypeNotMapped;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComponentsSchemasRecordCreateRequestItem {
  
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("formId")
  private Integer formId = null;
  @SerializedName("siteName")
  private String siteName = null;
  @SerializedName("siteId")
  private Integer siteId = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectOid")
  private String subjectOid = null;
  @SerializedName("intervalName")
  private String intervalName = null;
  @SerializedName("intervalId")
  private Integer intervalId = null;
  @SerializedName("recordId")
  private Integer recordId = null;
  @SerializedName("recordOid")
  private String recordOid = null;
  @SerializedName("data")
  private Map<String, OasAnyTypeNotMapped> data = null;

  /**
   * Form key identifying the eCRF to create or update
   **/
  @ApiModelProperty(required = true, value = "Form key identifying the eCRF to create or update")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Form ID identifying the eCRF to create or update (alternative to formKey)
   **/
  @ApiModelProperty(value = "Form ID identifying the eCRF to create or update (alternative to formKey)")
  public Integer getFormId() {
    return formId;
  }
  public void setFormId(Integer formId) {
    this.formId = formId;
  }

  /**
   * Name of the site where the record should be created (for new subject registration)
   **/
  @ApiModelProperty(value = "Name of the site where the record should be created (for new subject registration)")
  public String getSiteName() {
    return siteName;
  }
  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  /**
   * Site ID for the record (alternative to siteName)
   **/
  @ApiModelProperty(value = "Site ID for the record (alternative to siteName)")
  public Integer getSiteId() {
    return siteId;
  }
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  /**
   * Subject identifier (display ID) for which to create or update the record
   **/
  @ApiModelProperty(value = "Subject identifier (display ID) for which to create or update the record")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Subject ID for which to create or update the record (alternative to subjectKey)
   **/
  @ApiModelProperty(value = "Subject ID for which to create or update the record (alternative to subjectKey)")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Subject OID for which to create or update the record (alternative to subjectKey)
   **/
  @ApiModelProperty(value = "Subject OID for which to create or update the record (alternative to subjectKey)")
  public String getSubjectOid() {
    return subjectOid;
  }
  public void setSubjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
  }

  /**
   * Name of the interval (visit) for a scheduled record update
   **/
  @ApiModelProperty(value = "Name of the interval (visit) for a scheduled record update")
  public String getIntervalName() {
    return intervalName;
  }
  public void setIntervalName(String intervalName) {
    this.intervalName = intervalName;
  }

  /**
   * Interval ID for a scheduled record update (alternative to intervalName)
   **/
  @ApiModelProperty(value = "Interval ID for a scheduled record update (alternative to intervalName)")
  public Integer getIntervalId() {
    return intervalId;
  }
  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Record ID for updating an existing unscheduled record (if applicable)
   **/
  @ApiModelProperty(value = "Record ID for updating an existing unscheduled record (if applicable)")
  public Integer getRecordId() {
    return recordId;
  }
  public void setRecordId(Integer recordId) {
    this.recordId = recordId;
  }

  /**
   * Record OID for updating an existing unscheduled record (if applicable)
   **/
  @ApiModelProperty(value = "Record OID for updating an existing unscheduled record (if applicable)")
  public String getRecordOid() {
    return recordOid;
  }
  public void setRecordOid(String recordOid) {
    this.recordOid = recordOid;
  }

  /**
   * Key-value pairs of field names and values for the record data
   **/
  @ApiModelProperty(required = true, value = "Key-value pairs of field names and values for the record data")
  public Map<String, OasAnyTypeNotMapped> getData() {
    return data;
  }
  public void setData(Map<String, OasAnyTypeNotMapped> data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentsSchemasRecordCreateRequestItem componentsSchemasRecordCreateRequestItem = (ComponentsSchemasRecordCreateRequestItem) o;
    return (this.formKey == null ? componentsSchemasRecordCreateRequestItem.formKey == null : this.formKey.equals(componentsSchemasRecordCreateRequestItem.formKey)) &&
        (this.formId == null ? componentsSchemasRecordCreateRequestItem.formId == null : this.formId.equals(componentsSchemasRecordCreateRequestItem.formId)) &&
        (this.siteName == null ? componentsSchemasRecordCreateRequestItem.siteName == null : this.siteName.equals(componentsSchemasRecordCreateRequestItem.siteName)) &&
        (this.siteId == null ? componentsSchemasRecordCreateRequestItem.siteId == null : this.siteId.equals(componentsSchemasRecordCreateRequestItem.siteId)) &&
        (this.subjectKey == null ? componentsSchemasRecordCreateRequestItem.subjectKey == null : this.subjectKey.equals(componentsSchemasRecordCreateRequestItem.subjectKey)) &&
        (this.subjectId == null ? componentsSchemasRecordCreateRequestItem.subjectId == null : this.subjectId.equals(componentsSchemasRecordCreateRequestItem.subjectId)) &&
        (this.subjectOid == null ? componentsSchemasRecordCreateRequestItem.subjectOid == null : this.subjectOid.equals(componentsSchemasRecordCreateRequestItem.subjectOid)) &&
        (this.intervalName == null ? componentsSchemasRecordCreateRequestItem.intervalName == null : this.intervalName.equals(componentsSchemasRecordCreateRequestItem.intervalName)) &&
        (this.intervalId == null ? componentsSchemasRecordCreateRequestItem.intervalId == null : this.intervalId.equals(componentsSchemasRecordCreateRequestItem.intervalId)) &&
        (this.recordId == null ? componentsSchemasRecordCreateRequestItem.recordId == null : this.recordId.equals(componentsSchemasRecordCreateRequestItem.recordId)) &&
        (this.recordOid == null ? componentsSchemasRecordCreateRequestItem.recordOid == null : this.recordOid.equals(componentsSchemasRecordCreateRequestItem.recordOid)) &&
        (this.data == null ? componentsSchemasRecordCreateRequestItem.data == null : this.data.equals(componentsSchemasRecordCreateRequestItem.data));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.formId == null ? 0: this.formId.hashCode());
    result = 31 * result + (this.siteName == null ? 0: this.siteName.hashCode());
    result = 31 * result + (this.siteId == null ? 0: this.siteId.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectOid == null ? 0: this.subjectOid.hashCode());
    result = 31 * result + (this.intervalName == null ? 0: this.intervalName.hashCode());
    result = 31 * result + (this.intervalId == null ? 0: this.intervalId.hashCode());
    result = 31 * result + (this.recordId == null ? 0: this.recordId.hashCode());
    result = 31 * result + (this.recordOid == null ? 0: this.recordOid.hashCode());
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentsSchemasRecordCreateRequestItem {\n");
    
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  formId: ").append(formId).append("\n");
    sb.append("  siteName: ").append(siteName).append("\n");
    sb.append("  siteId: ").append(siteId).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectOid: ").append(subjectOid).append("\n");
    sb.append("  intervalName: ").append(intervalName).append("\n");
    sb.append("  intervalId: ").append(intervalId).append("\n");
    sb.append("  recordId: ").append(recordId).append("\n");
    sb.append("  recordOid: ").append(recordOid).append("\n");
    sb.append("  data: ").append(data).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
