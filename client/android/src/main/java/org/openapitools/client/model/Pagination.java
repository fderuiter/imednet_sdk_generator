/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Sort;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Pagination {
  
  @SerializedName("currentPage")
  private Integer currentPage = null;
  @SerializedName("size")
  private Integer size = null;
  @SerializedName("totalPages")
  private Integer totalPages = null;
  @SerializedName("totalElements")
  private Integer totalElements = null;
  @SerializedName("sort")
  private List<Sort> sort = null;

  /**
   * Current index page returned
   **/
  @ApiModelProperty(value = "Current index page returned")
  public Integer getCurrentPage() {
    return currentPage;
  }
  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  /**
   * Number of items per page returned
   **/
  @ApiModelProperty(value = "Number of items per page returned")
  public Integer getSize() {
    return size;
  }
  public void setSize(Integer size) {
    this.size = size;
  }

  /**
   * Total number of pages available
   **/
  @ApiModelProperty(value = "Total number of pages available")
  public Integer getTotalPages() {
    return totalPages;
  }
  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  /**
   * Total number of elements (items) available
   **/
  @ApiModelProperty(value = "Total number of elements (items) available")
  public Integer getTotalElements() {
    return totalElements;
  }
  public void setTotalElements(Integer totalElements) {
    this.totalElements = totalElements;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Sort> getSort() {
    return sort;
  }
  public void setSort(List<Sort> sort) {
    this.sort = sort;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pagination pagination = (Pagination) o;
    return (this.currentPage == null ? pagination.currentPage == null : this.currentPage.equals(pagination.currentPage)) &&
        (this.size == null ? pagination.size == null : this.size.equals(pagination.size)) &&
        (this.totalPages == null ? pagination.totalPages == null : this.totalPages.equals(pagination.totalPages)) &&
        (this.totalElements == null ? pagination.totalElements == null : this.totalElements.equals(pagination.totalElements)) &&
        (this.sort == null ? pagination.sort == null : this.sort.equals(pagination.sort));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.currentPage == null ? 0: this.currentPage.hashCode());
    result = 31 * result + (this.size == null ? 0: this.size.hashCode());
    result = 31 * result + (this.totalPages == null ? 0: this.totalPages.hashCode());
    result = 31 * result + (this.totalElements == null ? 0: this.totalElements.hashCode());
    result = 31 * result + (this.sort == null ? 0: this.sort.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pagination {\n");
    
    sb.append("  currentPage: ").append(currentPage).append("\n");
    sb.append("  size: ").append(size).append("\n");
    sb.append("  totalPages: ").append(totalPages).append("\n");
    sb.append("  totalElements: ").append(totalElements).append("\n");
    sb.append("  sort: ").append(sort).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
