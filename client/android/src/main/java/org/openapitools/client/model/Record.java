/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Map;
import org.openapitools.client.model.Keyword;
import org.openapitools.client.model.OasAnyTypeNotMapped;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Record {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("intervalId")
  private Integer intervalId = null;
  @SerializedName("formId")
  private Integer formId = null;
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("siteId")
  private Integer siteId = null;
  @SerializedName("recordId")
  private Integer recordId = null;
  @SerializedName("recordOid")
  private String recordOid = null;
  @SerializedName("recordType")
  private String recordType = null;
  @SerializedName("recordStatus")
  private String recordStatus = null;
  @SerializedName("deleted")
  private Boolean deleted = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectOid")
  private String subjectOid = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("visitId")
  private Integer visitId = null;
  @SerializedName("parentRecordId")
  private Integer parentRecordId = null;
  @SerializedName("keywords")
  private List<Keyword> keywords = null;
  @SerializedName("recordData")
  private Map<String, OasAnyTypeNotMapped> recordData = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Interval ID (visit definition) that this record is associated with
   **/
  @ApiModelProperty(value = "Interval ID (visit definition) that this record is associated with")
  public Integer getIntervalId() {
    return intervalId;
  }
  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Form ID of the form this record instance belongs to
   **/
  @ApiModelProperty(value = "Form ID of the form this record instance belongs to")
  public Integer getFormId() {
    return formId;
  }
  public void setFormId(Integer formId) {
    this.formId = formId;
  }

  /**
   * Form key of the form for this record instance
   **/
  @ApiModelProperty(value = "Form key of the form for this record instance")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Site ID associated with the record
   **/
  @ApiModelProperty(value = "Site ID associated with the record")
  public Integer getSiteId() {
    return siteId;
  }
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  /**
   * Unique record ID
   **/
  @ApiModelProperty(value = "Unique record ID")
  public Integer getRecordId() {
    return recordId;
  }
  public void setRecordId(Integer recordId) {
    this.recordId = recordId;
  }

  /**
   * Client-assigned record OID
   **/
  @ApiModelProperty(value = "Client-assigned record OID")
  public String getRecordOid() {
    return recordOid;
  }
  public void setRecordOid(String recordOid) {
    this.recordOid = recordOid;
  }

  /**
   * Type of record (e.g., SUBJECT for subject-related forms)
   **/
  @ApiModelProperty(value = "Type of record (e.g., SUBJECT for subject-related forms)")
  public String getRecordType() {
    return recordType;
  }
  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }

  /**
   * Current status of the record (e.g., Record Incomplete, Record Complete)
   **/
  @ApiModelProperty(value = "Current status of the record (e.g., Record Incomplete, Record Complete)")
  public String getRecordStatus() {
    return recordStatus;
  }
  public void setRecordStatus(String recordStatus) {
    this.recordStatus = recordStatus;
  }

  /**
   * Whether the record is marked as deleted
   **/
  @ApiModelProperty(value = "Whether the record is marked as deleted")
  public Boolean getDeleted() {
    return deleted;
  }
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  /**
   * Date when this record was created
   **/
  @ApiModelProperty(value = "Date when this record was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this record was last modified
   **/
  @ApiModelProperty(value = "Date when this record was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }

  /**
   * Mednet subject ID that this record is associated with
   **/
  @ApiModelProperty(value = "Mednet subject ID that this record is associated with")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Client-assigned subject OID for the subject this record is associated with
   **/
  @ApiModelProperty(value = "Client-assigned subject OID for the subject this record is associated with")
  public String getSubjectOid() {
    return subjectOid;
  }
  public void setSubjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
  }

  /**
   * Subject display ID that this record is associated with
   **/
  @ApiModelProperty(value = "Subject display ID that this record is associated with")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Visit instance ID that this record is associated with (if applicable)
   **/
  @ApiModelProperty(value = "Visit instance ID that this record is associated with (if applicable)")
  public Integer getVisitId() {
    return visitId;
  }
  public void setVisitId(Integer visitId) {
    this.visitId = visitId;
  }

  /**
   * Record ID of the parent record if this record is a subrecord (if applicable)
   **/
  @ApiModelProperty(value = "Record ID of the parent record if this record is a subrecord (if applicable)")
  public Integer getParentRecordId() {
    return parentRecordId;
  }
  public void setParentRecordId(Integer parentRecordId) {
    this.parentRecordId = parentRecordId;
  }

  /**
   * List of keywords associated with the record
   **/
  @ApiModelProperty(value = "List of keywords associated with the record")
  public List<Keyword> getKeywords() {
    return keywords;
  }
  public void setKeywords(List<Keyword> keywords) {
    this.keywords = keywords;
  }

  /**
   * Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.
   **/
  @ApiModelProperty(value = "Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.")
  public Map<String, OasAnyTypeNotMapped> getRecordData() {
    return recordData;
  }
  public void setRecordData(Map<String, OasAnyTypeNotMapped> recordData) {
    this.recordData = recordData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Record record = (Record) o;
    return (this.studyKey == null ? record.studyKey == null : this.studyKey.equals(record.studyKey)) &&
        (this.intervalId == null ? record.intervalId == null : this.intervalId.equals(record.intervalId)) &&
        (this.formId == null ? record.formId == null : this.formId.equals(record.formId)) &&
        (this.formKey == null ? record.formKey == null : this.formKey.equals(record.formKey)) &&
        (this.siteId == null ? record.siteId == null : this.siteId.equals(record.siteId)) &&
        (this.recordId == null ? record.recordId == null : this.recordId.equals(record.recordId)) &&
        (this.recordOid == null ? record.recordOid == null : this.recordOid.equals(record.recordOid)) &&
        (this.recordType == null ? record.recordType == null : this.recordType.equals(record.recordType)) &&
        (this.recordStatus == null ? record.recordStatus == null : this.recordStatus.equals(record.recordStatus)) &&
        (this.deleted == null ? record.deleted == null : this.deleted.equals(record.deleted)) &&
        (this.dateCreated == null ? record.dateCreated == null : this.dateCreated.equals(record.dateCreated)) &&
        (this.dateModified == null ? record.dateModified == null : this.dateModified.equals(record.dateModified)) &&
        (this.subjectId == null ? record.subjectId == null : this.subjectId.equals(record.subjectId)) &&
        (this.subjectOid == null ? record.subjectOid == null : this.subjectOid.equals(record.subjectOid)) &&
        (this.subjectKey == null ? record.subjectKey == null : this.subjectKey.equals(record.subjectKey)) &&
        (this.visitId == null ? record.visitId == null : this.visitId.equals(record.visitId)) &&
        (this.parentRecordId == null ? record.parentRecordId == null : this.parentRecordId.equals(record.parentRecordId)) &&
        (this.keywords == null ? record.keywords == null : this.keywords.equals(record.keywords)) &&
        (this.recordData == null ? record.recordData == null : this.recordData.equals(record.recordData));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.intervalId == null ? 0: this.intervalId.hashCode());
    result = 31 * result + (this.formId == null ? 0: this.formId.hashCode());
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.siteId == null ? 0: this.siteId.hashCode());
    result = 31 * result + (this.recordId == null ? 0: this.recordId.hashCode());
    result = 31 * result + (this.recordOid == null ? 0: this.recordOid.hashCode());
    result = 31 * result + (this.recordType == null ? 0: this.recordType.hashCode());
    result = 31 * result + (this.recordStatus == null ? 0: this.recordStatus.hashCode());
    result = 31 * result + (this.deleted == null ? 0: this.deleted.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectOid == null ? 0: this.subjectOid.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.visitId == null ? 0: this.visitId.hashCode());
    result = 31 * result + (this.parentRecordId == null ? 0: this.parentRecordId.hashCode());
    result = 31 * result + (this.keywords == null ? 0: this.keywords.hashCode());
    result = 31 * result + (this.recordData == null ? 0: this.recordData.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Record {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  intervalId: ").append(intervalId).append("\n");
    sb.append("  formId: ").append(formId).append("\n");
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  siteId: ").append(siteId).append("\n");
    sb.append("  recordId: ").append(recordId).append("\n");
    sb.append("  recordOid: ").append(recordOid).append("\n");
    sb.append("  recordType: ").append(recordType).append("\n");
    sb.append("  recordStatus: ").append(recordStatus).append("\n");
    sb.append("  deleted: ").append(deleted).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectOid: ").append(subjectOid).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  visitId: ").append(visitId).append("\n");
    sb.append("  parentRecordId: ").append(parentRecordId).append("\n");
    sb.append("  keywords: ").append(keywords).append("\n");
    sb.append("  recordData: ").append(recordData).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
