/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Keyword;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Subject {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("subjectId")
  private Integer subjectId = null;
  @SerializedName("subjectOid")
  private String subjectOid = null;
  @SerializedName("subjectKey")
  private String subjectKey = null;
  @SerializedName("subjectStatus")
  private String subjectStatus = null;
  @SerializedName("siteId")
  private Integer siteId = null;
  @SerializedName("siteName")
  private String siteName = null;
  @SerializedName("deleted")
  private Boolean deleted = null;
  @SerializedName("enrollmentStartDate")
  private String enrollmentStartDate = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;
  @SerializedName("keywords")
  private List<Keyword> keywords = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Mednet subject ID (internal numeric ID)
   **/
  @ApiModelProperty(value = "Mednet subject ID (internal numeric ID)")
  public Integer getSubjectId() {
    return subjectId;
  }
  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  /**
   * Client-assigned subject object identifier (OID)
   **/
  @ApiModelProperty(value = "Client-assigned subject object identifier (OID)")
  public String getSubjectOid() {
    return subjectOid;
  }
  public void setSubjectOid(String subjectOid) {
    this.subjectOid = subjectOid;
  }

  /**
   * Protocol-assigned subject identifier (display ID)
   **/
  @ApiModelProperty(value = "Protocol-assigned subject identifier (display ID)")
  public String getSubjectKey() {
    return subjectKey;
  }
  public void setSubjectKey(String subjectKey) {
    this.subjectKey = subjectKey;
  }

  /**
   * Current status of the subject (e.g., Enrolled)
   **/
  @ApiModelProperty(value = "Current status of the subject (e.g., Enrolled)")
  public String getSubjectStatus() {
    return subjectStatus;
  }
  public void setSubjectStatus(String subjectStatus) {
    this.subjectStatus = subjectStatus;
  }

  /**
   * Mednet site ID the subject is associated with
   **/
  @ApiModelProperty(value = "Mednet site ID the subject is associated with")
  public Integer getSiteId() {
    return siteId;
  }
  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }

  /**
   * Name of the site the subject is associated with
   **/
  @ApiModelProperty(value = "Name of the site the subject is associated with")
  public String getSiteName() {
    return siteName;
  }
  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  /**
   * Whether the subject is marked as deleted
   **/
  @ApiModelProperty(value = "Whether the subject is marked as deleted")
  public Boolean getDeleted() {
    return deleted;
  }
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  /**
   * Subject’s enrollment start date
   **/
  @ApiModelProperty(value = "Subject’s enrollment start date")
  public String getEnrollmentStartDate() {
    return enrollmentStartDate;
  }
  public void setEnrollmentStartDate(String enrollmentStartDate) {
    this.enrollmentStartDate = enrollmentStartDate;
  }

  /**
   * Date when this subject record was created
   **/
  @ApiModelProperty(value = "Date when this subject record was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this subject record was last modified
   **/
  @ApiModelProperty(value = "Date when this subject record was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }

  /**
   * List of keywords associated with the subject
   **/
  @ApiModelProperty(value = "List of keywords associated with the subject")
  public List<Keyword> getKeywords() {
    return keywords;
  }
  public void setKeywords(List<Keyword> keywords) {
    this.keywords = keywords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subject subject = (Subject) o;
    return (this.studyKey == null ? subject.studyKey == null : this.studyKey.equals(subject.studyKey)) &&
        (this.subjectId == null ? subject.subjectId == null : this.subjectId.equals(subject.subjectId)) &&
        (this.subjectOid == null ? subject.subjectOid == null : this.subjectOid.equals(subject.subjectOid)) &&
        (this.subjectKey == null ? subject.subjectKey == null : this.subjectKey.equals(subject.subjectKey)) &&
        (this.subjectStatus == null ? subject.subjectStatus == null : this.subjectStatus.equals(subject.subjectStatus)) &&
        (this.siteId == null ? subject.siteId == null : this.siteId.equals(subject.siteId)) &&
        (this.siteName == null ? subject.siteName == null : this.siteName.equals(subject.siteName)) &&
        (this.deleted == null ? subject.deleted == null : this.deleted.equals(subject.deleted)) &&
        (this.enrollmentStartDate == null ? subject.enrollmentStartDate == null : this.enrollmentStartDate.equals(subject.enrollmentStartDate)) &&
        (this.dateCreated == null ? subject.dateCreated == null : this.dateCreated.equals(subject.dateCreated)) &&
        (this.dateModified == null ? subject.dateModified == null : this.dateModified.equals(subject.dateModified)) &&
        (this.keywords == null ? subject.keywords == null : this.keywords.equals(subject.keywords));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.subjectId == null ? 0: this.subjectId.hashCode());
    result = 31 * result + (this.subjectOid == null ? 0: this.subjectOid.hashCode());
    result = 31 * result + (this.subjectKey == null ? 0: this.subjectKey.hashCode());
    result = 31 * result + (this.subjectStatus == null ? 0: this.subjectStatus.hashCode());
    result = 31 * result + (this.siteId == null ? 0: this.siteId.hashCode());
    result = 31 * result + (this.siteName == null ? 0: this.siteName.hashCode());
    result = 31 * result + (this.deleted == null ? 0: this.deleted.hashCode());
    result = 31 * result + (this.enrollmentStartDate == null ? 0: this.enrollmentStartDate.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    result = 31 * result + (this.keywords == null ? 0: this.keywords.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subject {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  subjectId: ").append(subjectId).append("\n");
    sb.append("  subjectOid: ").append(subjectOid).append("\n");
    sb.append("  subjectKey: ").append(subjectKey).append("\n");
    sb.append("  subjectStatus: ").append(subjectStatus).append("\n");
    sb.append("  siteId: ").append(siteId).append("\n");
    sb.append("  siteName: ").append(siteName).append("\n");
    sb.append("  deleted: ").append(deleted).append("\n");
    sb.append("  enrollmentStartDate: ").append(enrollmentStartDate).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("  keywords: ").append(keywords).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
