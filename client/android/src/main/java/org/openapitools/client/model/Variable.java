/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Variable {
  
  @SerializedName("studyKey")
  private String studyKey = null;
  @SerializedName("variableId")
  private Integer variableId = null;
  public enum VariableTypeEnum {
     TEXT,  TEXTAREA,  RADIO,  CHECKBOX,  DROPDOWN,  DATE,  NUMBER, 
  };
  @SerializedName("variableType")
  private VariableTypeEnum variableType = null;
  @SerializedName("variableName")
  private String variableName = null;
  @SerializedName("sequence")
  private Integer sequence = null;
  @SerializedName("revision")
  private Integer revision = null;
  @SerializedName("disabled")
  private Boolean disabled = null;
  @SerializedName("dateCreated")
  private String dateCreated = null;
  @SerializedName("dateModified")
  private String dateModified = null;
  @SerializedName("formId")
  private Integer formId = null;
  @SerializedName("variableOid")
  private String variableOid = null;
  @SerializedName("deleted")
  private Boolean deleted = null;
  @SerializedName("formKey")
  private String formKey = null;
  @SerializedName("formName")
  private String formName = null;
  @SerializedName("label")
  private String label = null;
  @SerializedName("blinded")
  private Boolean blinded = null;

  /**
   * Unique study key
   **/
  @ApiModelProperty(value = "Unique study key")
  public String getStudyKey() {
    return studyKey;
  }
  public void setStudyKey(String studyKey) {
    this.studyKey = studyKey;
  }

  /**
   * Mednet variable ID
   **/
  @ApiModelProperty(value = "Mednet variable ID")
  public Integer getVariableId() {
    return variableId;
  }
  public void setVariableId(Integer variableId) {
    this.variableId = variableId;
  }

  /**
   * Type of the variable (field type), e.g., RADIO, TEXT, etc.
   **/
  @ApiModelProperty(value = "Type of the variable (field type), e.g., RADIO, TEXT, etc.")
  public VariableTypeEnum getVariableType() {
    return variableType;
  }
  public void setVariableType(VariableTypeEnum variableType) {
    this.variableType = variableType;
  }

  /**
   * Name of the variable (question text or label)
   **/
  @ApiModelProperty(value = "Name of the variable (question text or label)")
  public String getVariableName() {
    return variableName;
  }
  public void setVariableName(String variableName) {
    this.variableName = variableName;
  }

  /**
   * Sequence of the variable on the form
   **/
  @ApiModelProperty(value = "Sequence of the variable on the form")
  public Integer getSequence() {
    return sequence;
  }
  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  /**
   * Number of modifications of the variable (via form metadata revisions)
   **/
  @ApiModelProperty(value = "Number of modifications of the variable (via form metadata revisions)")
  public Integer getRevision() {
    return revision;
  }
  public void setRevision(Integer revision) {
    this.revision = revision;
  }

  /**
   * Whether the variable is marked as disabled (deleted)
   **/
  @ApiModelProperty(value = "Whether the variable is marked as disabled (deleted)")
  public Boolean getDisabled() {
    return disabled;
  }
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  /**
   * Date when this variable was created
   **/
  @ApiModelProperty(value = "Date when this variable was created")
  public String getDateCreated() {
    return dateCreated;
  }
  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  /**
   * Date when this variable was last modified
   **/
  @ApiModelProperty(value = "Date when this variable was last modified")
  public String getDateModified() {
    return dateModified;
  }
  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }

  /**
   * ID of the form that this variable belongs to
   **/
  @ApiModelProperty(value = "ID of the form that this variable belongs to")
  public Integer getFormId() {
    return formId;
  }
  public void setFormId(Integer formId) {
    this.formId = formId;
  }

  /**
   * Client-assigned variable OID
   **/
  @ApiModelProperty(value = "Client-assigned variable OID")
  public String getVariableOid() {
    return variableOid;
  }
  public void setVariableOid(String variableOid) {
    this.variableOid = variableOid;
  }

  /**
   * Whether the variable is marked as deleted
   **/
  @ApiModelProperty(value = "Whether the variable is marked as deleted")
  public Boolean getDeleted() {
    return deleted;
  }
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  /**
   * Form key of the form that this variable belongs to
   **/
  @ApiModelProperty(value = "Form key of the form that this variable belongs to")
  public String getFormKey() {
    return formKey;
  }
  public void setFormKey(String formKey) {
    this.formKey = formKey;
  }

  /**
   * Name of the form that this variable belongs to
   **/
  @ApiModelProperty(value = "Name of the form that this variable belongs to")
  public String getFormName() {
    return formName;
  }
  public void setFormName(String formName) {
    this.formName = formName;
  }

  /**
   * User-defined identifier (field name) for the variable
   **/
  @ApiModelProperty(value = "User-defined identifier (field name) for the variable")
  public String getLabel() {
    return label;
  }
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   * Whether the variable is flagged as blinded (hidden in certain contexts)
   **/
  @ApiModelProperty(value = "Whether the variable is flagged as blinded (hidden in certain contexts)")
  public Boolean getBlinded() {
    return blinded;
  }
  public void setBlinded(Boolean blinded) {
    this.blinded = blinded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Variable variable = (Variable) o;
    return (this.studyKey == null ? variable.studyKey == null : this.studyKey.equals(variable.studyKey)) &&
        (this.variableId == null ? variable.variableId == null : this.variableId.equals(variable.variableId)) &&
        (this.variableType == null ? variable.variableType == null : this.variableType.equals(variable.variableType)) &&
        (this.variableName == null ? variable.variableName == null : this.variableName.equals(variable.variableName)) &&
        (this.sequence == null ? variable.sequence == null : this.sequence.equals(variable.sequence)) &&
        (this.revision == null ? variable.revision == null : this.revision.equals(variable.revision)) &&
        (this.disabled == null ? variable.disabled == null : this.disabled.equals(variable.disabled)) &&
        (this.dateCreated == null ? variable.dateCreated == null : this.dateCreated.equals(variable.dateCreated)) &&
        (this.dateModified == null ? variable.dateModified == null : this.dateModified.equals(variable.dateModified)) &&
        (this.formId == null ? variable.formId == null : this.formId.equals(variable.formId)) &&
        (this.variableOid == null ? variable.variableOid == null : this.variableOid.equals(variable.variableOid)) &&
        (this.deleted == null ? variable.deleted == null : this.deleted.equals(variable.deleted)) &&
        (this.formKey == null ? variable.formKey == null : this.formKey.equals(variable.formKey)) &&
        (this.formName == null ? variable.formName == null : this.formName.equals(variable.formName)) &&
        (this.label == null ? variable.label == null : this.label.equals(variable.label)) &&
        (this.blinded == null ? variable.blinded == null : this.blinded.equals(variable.blinded));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.studyKey == null ? 0: this.studyKey.hashCode());
    result = 31 * result + (this.variableId == null ? 0: this.variableId.hashCode());
    result = 31 * result + (this.variableType == null ? 0: this.variableType.hashCode());
    result = 31 * result + (this.variableName == null ? 0: this.variableName.hashCode());
    result = 31 * result + (this.sequence == null ? 0: this.sequence.hashCode());
    result = 31 * result + (this.revision == null ? 0: this.revision.hashCode());
    result = 31 * result + (this.disabled == null ? 0: this.disabled.hashCode());
    result = 31 * result + (this.dateCreated == null ? 0: this.dateCreated.hashCode());
    result = 31 * result + (this.dateModified == null ? 0: this.dateModified.hashCode());
    result = 31 * result + (this.formId == null ? 0: this.formId.hashCode());
    result = 31 * result + (this.variableOid == null ? 0: this.variableOid.hashCode());
    result = 31 * result + (this.deleted == null ? 0: this.deleted.hashCode());
    result = 31 * result + (this.formKey == null ? 0: this.formKey.hashCode());
    result = 31 * result + (this.formName == null ? 0: this.formName.hashCode());
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.blinded == null ? 0: this.blinded.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Variable {\n");
    
    sb.append("  studyKey: ").append(studyKey).append("\n");
    sb.append("  variableId: ").append(variableId).append("\n");
    sb.append("  variableType: ").append(variableType).append("\n");
    sb.append("  variableName: ").append(variableName).append("\n");
    sb.append("  sequence: ").append(sequence).append("\n");
    sb.append("  revision: ").append(revision).append("\n");
    sb.append("  disabled: ").append(disabled).append("\n");
    sb.append("  dateCreated: ").append(dateCreated).append("\n");
    sb.append("  dateModified: ").append(dateModified).append("\n");
    sb.append("  formId: ").append(formId).append("\n");
    sb.append("  variableOid: ").append(variableOid).append("\n");
    sb.append("  deleted: ").append(deleted).append("\n");
    sb.append("  formKey: ").append(formKey).append("\n");
    sb.append("  formName: ").append(formName).append("\n");
    sb.append("  label: ").append(label).append("\n");
    sb.append("  blinded: ").append(blinded).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
