/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services.
 * This specification documents all available endpoints in the latest version of the API.
 *
 * The version of the OpenAPI document: 1.3.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Keyword } from 'Keyword';

export external public interface ~Record {

    /**
     * Unique study key
     */
    public studyKey?: string;

    /**
     * Interval ID (visit definition) that this record is associated with
     */
    public intervalId?: int;

    /**
     * Form ID of the form this record instance belongs to
     */
    public formId?: int;

    /**
     * Form key of the form for this record instance
     */
    public formKey?: string;

    /**
     * Site ID associated with the record
     */
    public siteId?: int;

    /**
     * Unique record ID
     */
    public recordId?: int;

    /**
     * Client-assigned record OID
     */
    public recordOid?: string;

    /**
     * Type of record (e.g., SUBJECT for subject-related forms)
     */
    public recordType?: string;

    /**
     * Current status of the record (e.g., Record Incomplete, Record Complete)
     */
    public recordStatus?: string;

    /**
     * Whether the record is marked as deleted
     */
    public deleted?: boolean;

    /**
     * Date when this record was created
     */
    public dateCreated?: string;

    /**
     * Date when this record was last modified
     */
    public dateModified?: string;

    /**
     * Mednet subject ID that this record is associated with
     */
    public subjectId?: int;

    /**
     * Client-assigned subject OID for the subject this record is associated with
     */
    public subjectOid?: string;

    /**
     * Subject display ID that this record is associated with
     */
    public subjectKey?: string;

    /**
     * Visit instance ID that this record is associated with (if applicable)
     */
    public visitId?: int;

    /**
     * Record ID of the parent record if this record is a subrecord (if applicable)
     */
    public parentRecordId?: int;

    /**
     * List of keywords associated with the record
     */
    public keywords?: Keyword[];

    /**
     * Data fields and values captured in this record. The structure is dynamic, with keys corresponding to variable names.
     */
    public recordData?: ~Object+;
}
