/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.JobsApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 * Version: 1.3.6
* Generator version: 7.14.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
goog.provide('API.Client.JobsApi');

goog.require('API.Client.Job');
goog.require('API.Client.inline_object');
goog.require('API.Client.inline_object_1');
goog.require('API.Client.inline_object_2');
goog.require('API.Client.inline_object_3');
goog.require('API.Client.inline_object_5');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.JobsApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('JobsApiBasePath') ?
                   /** @type {!string} */ ($injector.get('JobsApiBasePath')) :
                   'https://edc.prod.imednetapi.com/api/v1/edc';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('JobsApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('JobsApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.JobsApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Retrieve job status by batch ID
 * 
 * @param {!string} studyKey Study key identifying the study context for the request
 * @param {!string} batchId Batch ID of the job to retrieve
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.Job>}
 */
API.Client.JobsApi.prototype.getJobStatus = function(studyKey, batchId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/studies/{studyKey}/jobs/{batchId}'
      .replace('{' + 'studyKey' + '}', String(studyKey))
      .replace('{' + 'batchId' + '}', String(batchId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'studyKey' is set
  if (!studyKey) {
    throw new Error('Missing required parameter studyKey when calling getJobStatus');
  }
  // verify required parameter 'batchId' is set
  if (!batchId) {
    throw new Error('Missing required parameter batchId when calling getJobStatus');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
