extends Resource
class_name Pagination

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# Pagination Model


# Current index page returned
# Required: False
# isArray: false
@export var currentPage: int:
	set(value):
		__currentPage__was__set = true
		currentPage = value
var __currentPage__was__set := false

# Number of items per page returned
# Required: False
# isArray: false
@export var size: int:
	set(value):
		__size__was__set = true
		size = value
var __size__was__set := false

# Total number of pages available
# Required: False
# isArray: false
@export var totalPages: int:
	set(value):
		__totalPages__was__set = true
		totalPages = value
var __totalPages__was__set := false

# Total number of elements (items) available
# Required: False
# isArray: false
@export var totalElements: int:
	set(value):
		__totalElements__was__set = true
		totalElements = value
var __totalElements__was__set := false

# Required: False
# isArray: true
@export var sort: Array:
	set(value):
		__sort__was__set = true
		sort = value
var __sort__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__currentPage__was__set:
		bzz_dictionary["currentPage"] = self.currentPage
	if self.__size__was__set:
		bzz_dictionary["size"] = self.size
	if self.__totalPages__was__set:
		bzz_dictionary["totalPages"] = self.totalPages
	if self.__totalElements__was__set:
		bzz_dictionary["totalElements"] = self.totalElements
	if self.__sort__was__set:
		bzz_dictionary["sort"] = self.sort
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("currentPage"):
		me.currentPage = from_dict["currentPage"]
	if from_dict.has("size"):
		me.size = from_dict["size"]
	if from_dict.has("totalPages"):
		me.totalPages = from_dict["totalPages"]
	if from_dict.has("totalElements"):
		me.totalElements = from_dict["totalElements"]
	if from_dict.has("sort"):
		me.sort = Sort.bzz_denormalize_multiple(from_dict["sort"])
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

